(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["IngestAPI"] = factory();
	else
		root["IngestAPI"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_bWW8xHBeeyhe9_HlXNJpnw = (Function('return this'))();
	if (!__cov_bWW8xHBeeyhe9_HlXNJpnw.__coverage__) { __cov_bWW8xHBeeyhe9_HlXNJpnw.__coverage__ = {}; }
	__cov_bWW8xHBeeyhe9_HlXNJpnw = __cov_bWW8xHBeeyhe9_HlXNJpnw.__coverage__;
	if (!(__cov_bWW8xHBeeyhe9_HlXNJpnw['/Users/mcunningham/Development/ingest/ingest-js-sdk/index.js'])) {
	   __cov_bWW8xHBeeyhe9_HlXNJpnw['/Users/mcunningham/Development/ingest/ingest-js-sdk/index.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/index.js","s":{"1":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}}},"branchMap":{},"code":["module.exports = require('./src/IngestAPI.js');",""]};
	}
	__cov_bWW8xHBeeyhe9_HlXNJpnw = __cov_bWW8xHBeeyhe9_HlXNJpnw['/Users/mcunningham/Development/ingest/ingest-js-sdk/index.js'];
	__cov_bWW8xHBeeyhe9_HlXNJpnw.s['1']++;module.exports=__webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_Dq2NjYb2kHa5VH1DG_Lqog = (Function('return this'))();
	if (!__cov_Dq2NjYb2kHa5VH1DG_Lqog.__coverage__) { __cov_Dq2NjYb2kHa5VH1DG_Lqog.__coverage__ = {}; }
	__cov_Dq2NjYb2kHa5VH1DG_Lqog = __cov_Dq2NjYb2kHa5VH1DG_Lqog.__coverage__;
	if (!(__cov_Dq2NjYb2kHa5VH1DG_Lqog['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/IngestAPI.js'])) {
	   __cov_Dq2NjYb2kHa5VH1DG_Lqog['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/IngestAPI.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/IngestAPI.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"IngestAPI","line":20,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}}},"2":{"name":"(anonymous_2)","line":97,"loc":{"start":{"line":96,"column":31},"end":{"line":96,"column":48}}},"3":{"name":"(anonymous_3)","line":111,"loc":{"start":{"line":110,"column":31},"end":{"line":110,"column":43}}},"4":{"name":"(anonymous_4)","line":121,"loc":{"start":{"line":120,"column":43},"end":{"line":120,"column":55}}},"5":{"name":"(anonymous_5)","line":136,"loc":{"start":{"line":135,"column":42},"end":{"line":135,"column":58}}},"6":{"name":"(anonymous_6)","line":164,"loc":{"start":{"line":165,"column":46},"end":{"line":165,"column":60}}},"7":{"name":"(anonymous_7)","line":190,"loc":{"start":{"line":192,"column":45},"end":{"line":192,"column":61}}},"8":{"name":"(anonymous_8)","line":225,"loc":{"start":{"line":229,"column":49},"end":{"line":229,"column":63}}},"9":{"name":"(anonymous_9)","line":250,"loc":{"start":{"line":255,"column":29},"end":{"line":255,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"9":{"start":{"line":18,"column":0},"end":{"line":90,"column":1}},"10":{"start":{"line":20,"column":2},"end":{"line":37,"column":4}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":57}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":20}},"13":{"start":{"line":44,"column":2},"end":{"line":47,"column":3}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":37}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":25}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":27}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":21}},"18":{"start":{"line":53,"column":2},"end":{"line":53,"column":27}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":29}},"20":{"start":{"line":55,"column":2},"end":{"line":55,"column":27}},"21":{"start":{"line":57,"column":2},"end":{"line":57,"column":47}},"22":{"start":{"line":59,"column":2},"end":{"line":64,"column":5}},"23":{"start":{"line":66,"column":2},"end":{"line":71,"column":5}},"24":{"start":{"line":73,"column":2},"end":{"line":78,"column":5}},"25":{"start":{"line":80,"column":2},"end":{"line":88,"column":5}},"26":{"start":{"line":96,"column":0},"end":{"line":104,"column":2}},"27":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"28":{"start":{"line":100,"column":4},"end":{"line":100,"column":86}},"29":{"start":{"line":103,"column":2},"end":{"line":103,"column":21}},"30":{"start":{"line":110,"column":0},"end":{"line":112,"column":2}},"31":{"start":{"line":111,"column":2},"end":{"line":111,"column":20}},"32":{"start":{"line":120,"column":0},"end":{"line":125,"column":2}},"33":{"start":{"line":121,"column":2},"end":{"line":124,"column":5}},"34":{"start":{"line":135,"column":0},"end":{"line":157,"column":2}},"35":{"start":{"line":136,"column":2},"end":{"line":139,"column":3}},"36":{"start":{"line":137,"column":4},"end":{"line":138,"column":80}},"37":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"38":{"start":{"line":143,"column":4},"end":{"line":143,"column":20}},"39":{"start":{"line":146,"column":2},"end":{"line":149,"column":3}},"40":{"start":{"line":147,"column":4},"end":{"line":148,"column":99}},"41":{"start":{"line":151,"column":2},"end":{"line":156,"column":5}},"42":{"start":{"line":165,"column":0},"end":{"line":183,"column":2}},"43":{"start":{"line":166,"column":2},"end":{"line":166,"column":18}},"44":{"start":{"line":168,"column":2},"end":{"line":171,"column":3}},"45":{"start":{"line":169,"column":4},"end":{"line":170,"column":84}},"46":{"start":{"line":173,"column":2},"end":{"line":175,"column":4}},"47":{"start":{"line":177,"column":2},"end":{"line":177,"column":83}},"48":{"start":{"line":179,"column":2},"end":{"line":182,"column":5}},"49":{"start":{"line":192,"column":0},"end":{"line":221,"column":2}},"50":{"start":{"line":193,"column":2},"end":{"line":193,"column":18}},"51":{"start":{"line":195,"column":2},"end":{"line":198,"column":3}},"52":{"start":{"line":196,"column":4},"end":{"line":197,"column":87}},"53":{"start":{"line":200,"column":2},"end":{"line":203,"column":3}},"54":{"start":{"line":201,"column":4},"end":{"line":202,"column":84}},"55":{"start":{"line":205,"column":2},"end":{"line":207,"column":3}},"56":{"start":{"line":206,"column":4},"end":{"line":206,"column":20}},"57":{"start":{"line":209,"column":2},"end":{"line":211,"column":4}},"58":{"start":{"line":213,"column":2},"end":{"line":213,"column":83}},"59":{"start":{"line":215,"column":2},"end":{"line":220,"column":5}},"60":{"start":{"line":229,"column":0},"end":{"line":248,"column":2}},"61":{"start":{"line":230,"column":2},"end":{"line":230,"column":18}},"62":{"start":{"line":232,"column":2},"end":{"line":235,"column":3}},"63":{"start":{"line":233,"column":4},"end":{"line":234,"column":87}},"64":{"start":{"line":237,"column":2},"end":{"line":239,"column":4}},"65":{"start":{"line":241,"column":2},"end":{"line":241,"column":83}},"66":{"start":{"line":243,"column":2},"end":{"line":247,"column":5}},"67":{"start":{"line":255,"column":0},"end":{"line":261,"column":2}},"68":{"start":{"line":256,"column":2},"end":{"line":260,"column":5}},"69":{"start":{"line":579,"column":0},"end":{"line":579,"column":27}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"2":{"line":100,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"3":{"line":137,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"4":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"5":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"6":{"line":167,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"7":{"line":193,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"8":{"line":197,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"9":{"line":201,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"10":{"line":228,"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":232,"column":2}},{"start":{"line":232,"column":2},"end":{"line":232,"column":2}}]}},"code":["var extend = require('extend');","var Request = require('./Request');","var JWTUtils = require('./JWTUtils');","var utils = require('./Utils');","var Uploader = require('./Uploader');","var Cache = require('./Cache');","","var Resource = require('./resources/Resource');","var Users = require('./resources/Users');","","/**"," * IngestAPI Object"," * @class"," * @param {object}  options        Options to override the default."," * @param {string}  options.host   Override the default live host."," * @param {string}  options.token  Auth token to use for requests."," */","function IngestAPI (options) {","","  this.defaults = {","    'host': 'https://api.ingest.io',","    'cacheAge': 300000, // 5 minutes","    'networks': '/networks',","    'networksKeys': '/networks/keys',","    'networksKeysById': '/networks/keys/<%=id%>',","    'inputs': '/encoding/inputs',","    'inputsById' : '/encoding/inputs/<%=id%>',","    'inputsUpload': '/encoding/inputs/<%=id%>/upload<%=method%>',","    'inputsUploadSign': '/encoding/inputs/<%=id%>/upload/sign<%=method%>',","    'inputsUploadComplete': '/encoding/inputs/<%=id%>/upload/complete',","    'inputsUploadAbort': '/encoding/inputs/<%=id%>/upload/abort',","    'uploadMethods': {","      'param': '?type=',","      'singlePart': 'amazon',","      'multiPart': 'amazonMP'","    }","  };","","  // Create a config object by extending the defaults with the pass options.","  this.config = extend(true, {}, this.defaults, options);","","  this.token = null;","","  if (this.config.token) {","    // Store the token for future use.","    this.setToken(this.config.token);","  }","","  /* Exposed for testing */","  this.request = Request;","  this.JWTUtils = JWTUtils;","  this.utils = utils;","  this.resource = Resource;","  this.usersResource = Users;","  this.uploader = Uploader;","","  this.cache = new Cache(this.config.cacheAge);","","  this.videos = new Resource({","    host: this.config.host,","    resource: 'videos',","    tokenSource: this.getToken.bind(this),","    cache: this.cache","  });","","  this.playlists = new Resource({","    host: this.config.host,","    resource: 'playlists',","    tokenSource: this.getToken.bind(this),","    cache: this.cache","  });","","  this.inputs = new Resource({","    host: this.config.host,","    resource: 'encoding/inputs',","    tokenSource: this.getToken.bind(this),","    cache: this.cache","  });","","  this.users = new Users({","    host: this.config.host,","    resource: 'users',","    tokenSource: this.getToken.bind(this),","    cache: this.cache,","    currentUser: '/users/me',","    transfer: '/users/<%=oldId%>/transfer/<%=newId%>',","    revoke: '/revoke'","  });","","}","/** Token **/","/**"," * Set the auth token to use."," * @param   {String}        token Auth token to use."," */","IngestAPI.prototype.setToken = function (token) {","","  // Make sure a valid value is passed.","  if (typeof token !== 'string') {","    throw new Error('IngestAPI requires an authentication token passed as a string.');","  }","","  this.token = token;","};","","/**"," * Return the current auth token."," * @return  {String}        Current auth token, or null if a token has not been set."," */","IngestAPI.prototype.getToken = function () {","  return this.token;","};","","/** Network Information **/","","/**"," * Get the current network primary key in RSA format."," * @return {Promise} Promise/A+ spec which resolves with the primary network key."," */","IngestAPI.prototype.getNetworkSecureKeys = function () {","  return new Request({","    url: this.config.host + this.config.networksKeys,","    token: this.getToken()","  });","};","","/**"," * Adds a new secure key to the current network."," * @param {object}  data        The object containing data for the secure key entry."," * @param {string}  data.title  Optional. The title of the secure key. Will default to \"Default Key Title\""," * @param {string}  data.key    The public key in RSA format."," *"," * @return {Promise}          A promise which resolves when the request is complete."," */","IngestAPI.prototype.addNetworkSecureKey = function (data) {","  if (typeof data !== 'object') {","    return utils.promisify(false,","      'IngestAPI addNetworkSecureKey requires data to be passed as an object.');","  }","","  // The title must be a string.","  if (typeof data.title !== 'string') {","    data.title = '';","  }","","  if (typeof data.key !== 'string') {","    return utils.promisify(false,","      'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');","  }","","  return new Request({","    url: this.config.host + this.config.networksKeys,","    token: this.getToken(),","    method: 'POST',","    data: data","  });","};","","/**"," * Retrieves a single network secure key entry based on the UUID given."," * @param {string}  id  The UUID of the secure key entry."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.getNetworkSecureKeyById = function (id) {","  var tokens, url;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');","  }","","  tokens = {","    id: id","  };","","  url = utils.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  return new Request({","    url: url,","    token: this.getToken()","  });","};","","/**"," * Updates an individual secure key entry in the current network."," * @param {object}  data        The object containing data for the secure key entry."," * @param {string}  data.title  The title for the current network."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.updateNetworkSecureKey = function (data) {","  var tokens, url;","","  if (typeof data !== 'object') {","    return utils.promisify(false,","      'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');","  }","","  if (typeof data.id !== 'string') {","    return utils.promisify(false,","      'IngestAPI updateNetworkSecureKeyById requires a param \"id\" to be a string.');","  }","","  if (typeof data.title !== 'string') {","    data.title = '';","  }","","  tokens = {","    id: data.id","  };","","  url = utils.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'PATCH',","    data: data","  });","};","","/**"," * Deletes a single network secure key entry based on the UUID given."," * @param {string}  id  The UUID of the secure key entry."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.deleteNetworkSecureKeyById = function (id) {","  var tokens, url;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');","  }","","  tokens = {","    id: id","  };","","  url = utils.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'DELETE'","  });","};","","/**"," * Create a new input and upload a file."," * @param  {File}   file    File to upload."," * @return {Promise} A promise which resolves when the upload is complete."," */","IngestAPI.prototype.upload = function (file) {","  return new Uploader({","    file: file,","    api: this,","    host: this.config.host","  });","};","","/** User Information **/","","// /**","//  * Retrieves a count of all users in the authorized network.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.getUsersCount = function () {","//   return new Request({","//     url: this.config.host + this.config.users.all,","//     token: this.getToken(),","//     method: 'HEAD'","//   });","// };","","// /**","//  * Retrieve information for the current user.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.getCurrentUserInfo = function () {","//   return new Request({","//     url: this.config.host + this.config.users.currentUser,","//     token: this.getToken()","//   });","// };","","// /**","//  * Retrieves a user object.","//  *","//  * @param {string} id - The unique ID of the user to retrieve.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.getUserById = function (id) {","//   var tokens, url;","","//   if (typeof id !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI getUserById requires an id to be passed as a string.');","//   }","","//   tokens = {","//     id: id","//   };","","//   url = utils.parseTokens(this.config.host + this.config.users.byId, tokens);","","//   return new Request({","//     url: url,","//     token: this.getToken()","//   });","// };","","// /**","//  * Retrieves all users in the authorized network.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.getAllUsers = function () {","//   return new Request({","//     url: this.config.host + this.config.users.all,","//     token: this.getToken()","//   });","// };","","// /**","//  * Adds a user to the authorized network.","//  *","//  * @param {object} user - The user object.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.addUser = function (user) {","//   if (typeof user !== 'object') {","//     return utils.promisify(false,","//       'IngestAPI addUser requires a user object to be passed.');","//   }","","//   return new Request({","//     url: this.config.host + this.config.users.all,","//     token: this.getToken(),","//     method: 'POST'","//   });","// };","","// /**","//  * Updates the given user object.","//  *","//  * @param {string} user.id - The unique ID of this user. Required.","//  * @param {object} user    - The user object.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.updateUser = function (user) {","//   var tokens, url;","","//   if (typeof user !== 'object') {","//     return utils.promisify(false,","//       'IngestAPI updateUser requires a user object to be passed.');","//   }","","//   if (typeof user.id !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI updateUser requires a user object contain an \"id\" as a string.');","//   }","","//   tokens = {","//     id: user.id","//   };","","//   url = utils.parseTokens(this.config.host + this.config.users.byId, tokens);","","//   return new Request({","//     url: url,","//     token: this.getToken(),","//     method: 'PATCH'","//   });","// };","","// /**","//  * Disables a user within the authorized network.","//  *","//  * @param {string} id - The unique ID of the user.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.deleteUser = function (id) {","//   var tokens, url;","","//   if (typeof id !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI deleteUser requires \"id\" to be passed as a string.');","//   }","","//   tokens = {","//     id: id","//   };","","//   url = utils.parseTokens(this.config.host + this.config.byId, tokens);","","//   return new Request({","//     url: url,","//     token: this.getToken(),","//     method: 'DELETE'","//   });","// };","","// /**","//  * Deletes a user within the authorized network.","//  * Permanent deletion is only successful when the requested user has no authored content.","//  *","//  * @param {string} id - The unique ID of the user.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.permanentlyDeleteUser = function (id) {","//   var tokens, url;","","//   if (typeof id !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI permanentlyDeleteUser requires \"id\" to be passed as a string.');","//   }","","//   tokens = {","//     id: id","//   };","","//   url = utils.parseTokens(this.config.host + this.config.byId, tokens);","","//   return new Request({","//     url: url + '?permanent=1',","//     token: this.getToken(),","//     method: 'DELETE'","//   });","// };","","// /**","//  * Transfer all authorship currently under the specified user onto another.","//  * This includes all videos & playlists.","//  * This task is commonly used in conjunction with permanently deleting a user.","//  *","//  * @param {string} oldId - The user who currently has authorship.","//  * @param {string} newId - The user to transfer authorship to.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.transferUserAuthorship = function (oldId, newId) {","//   var tokens, url;","","//   if (typeof oldId !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI transferUserAuthorship requires \"oldId\" to be passed a string.');","//   }","","//   if (typeof newId !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI transferUserAuthorship requires \"newId\" to be passed as a string');","//   }","","//   tokens = {","//     oldId: oldId,","//     newId: newId","//   };","","//   url = utils.parseTokens(this.config.host + this.config.users.transfer, tokens);","","//   return new Request({","//     url: url,","//     token: this.getToken(),","//     method: 'PATCH'","//   });","// };","","// /**","//  * Link an existing user to the currently authorized network.","//  *","//  * @param {string} id - The unique ID of the user to link.","//  *","//  * @return {object} - The user object.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.linkUser = function (id) {","//   var tokens, url;","","//   if (typeof id !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI linkUser requires \"id\" to be passed as a string.');","//   }","","//   tokens = {","//     id: id","//   };","","//   url = utils.parseTokens(this.config.host + this.config.users.byId, tokens);","","//   return new Request({","//     url: url,","//     token: this.getToken(),","//     method: 'LINK'","//   });","// };","","// /**","//  * Remove the specified user from the currently authorized network.","//  *","//  * @param {string} id - The unique ID of the user to unlink.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.unlinkUser = function (id) {","//   var tokens, url;","","//   if (typeof id !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI unlinkUser requires \"id\" to be passed as a string.');","//   }","","//   tokens = {","//     id: id","//   };","","//   url = utils.parseTokens(this.config.host + this.config.users.byId, tokens);","","//   return new Request({","//     url: url,","//     token: this.getToken(),","//     method: 'UNLINK'","//   });","// };","","// /**","//  * Revokes the authorization token for the current user.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.revokeCurrentUser = function () {","//   return new Request({","//     url: this.config.host + this.config.users.currentUser.revoke,","//     token: this.getToken(),","//     method: 'DELETE'","//   });","// };","","// /**","//  * Revokes the authorization token for the specified user.","//  *","//  * @param {string} id - The unique ID of the user to revoke.","//  *","//  * @return {Promise} A promise which resolves when the request is complete.","//  */","// IngestAPI.prototype.revokeUserById = function (id) {","//   var tokens, url;","","//   if (typeof id !== 'string') {","//     return utils.promisify(false,","//       'IngestAPI revokeUserById requires an \"id\" to be passed as a string.');","//   }","","//   tokens = {","//     id: id","//   };","","//   url = utils.parseTokens(","//     this.config.host + this.config.users.byId + this.config.users.revoke,","//     tokens","//   );","","//   return new Request({","//     url: url,","//     token: this.getToken(),","//     method: 'DELETE'","//   });","// };","","module.exports = IngestAPI;",""]};
	}
	__cov_Dq2NjYb2kHa5VH1DG_Lqog = __cov_Dq2NjYb2kHa5VH1DG_Lqog['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/IngestAPI.js'];
	__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['1']++;var extend=__webpack_require__(2);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['2']++;var Request=__webpack_require__(3);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['3']++;var JWTUtils=__webpack_require__(8);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['4']++;var utils=__webpack_require__(9);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['5']++;var Uploader=__webpack_require__(10);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['6']++;var Cache=__webpack_require__(11);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['7']++;var Resource=__webpack_require__(12);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['8']++;var Users=__webpack_require__(13);function IngestAPI(options){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['1']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['10']++;this.defaults={'host':'https://api.ingest.io','cacheAge':300000,'networks':'/networks','networksKeys':'/networks/keys','networksKeysById':'/networks/keys/<%=id%>','inputs':'/encoding/inputs','inputsById':'/encoding/inputs/<%=id%>','inputsUpload':'/encoding/inputs/<%=id%>/upload<%=method%>','inputsUploadSign':'/encoding/inputs/<%=id%>/upload/sign<%=method%>','inputsUploadComplete':'/encoding/inputs/<%=id%>/upload/complete','inputsUploadAbort':'/encoding/inputs/<%=id%>/upload/abort','uploadMethods':{'param':'?type=','singlePart':'amazon','multiPart':'amazonMP'}};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['11']++;this.config=extend(true,{},this.defaults,options);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['12']++;this.token=null;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['13']++;if(this.config.token){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['1'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['14']++;this.setToken(this.config.token);}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['1'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['15']++;this.request=Request;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['16']++;this.JWTUtils=JWTUtils;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['17']++;this.utils=utils;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['18']++;this.resource=Resource;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['19']++;this.usersResource=Users;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['20']++;this.uploader=Uploader;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['21']++;this.cache=new Cache(this.config.cacheAge);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['22']++;this.videos=new Resource({host:this.config.host,resource:'videos',tokenSource:this.getToken.bind(this),cache:this.cache});__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['23']++;this.playlists=new Resource({host:this.config.host,resource:'playlists',tokenSource:this.getToken.bind(this),cache:this.cache});__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['24']++;this.inputs=new Resource({host:this.config.host,resource:'encoding/inputs',tokenSource:this.getToken.bind(this),cache:this.cache});__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['25']++;this.users=new Users({host:this.config.host,resource:'users',tokenSource:this.getToken.bind(this),cache:this.cache,currentUser:'/users/me',transfer:'/users/<%=oldId%>/transfer/<%=newId%>',revoke:'/revoke'});}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['26']++;IngestAPI.prototype.setToken=function(token){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['2']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['27']++;if(typeof token!=='string'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['2'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['28']++;throw new Error('IngestAPI requires an authentication token passed as a string.');}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['2'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['29']++;this.token=token;};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['30']++;IngestAPI.prototype.getToken=function(){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['3']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['31']++;return this.token;};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['32']++;IngestAPI.prototype.getNetworkSecureKeys=function(){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['4']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['33']++;return new Request({url:this.config.host+this.config.networksKeys,token:this.getToken()});};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['34']++;IngestAPI.prototype.addNetworkSecureKey=function(data){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['5']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['35']++;if(typeof data!=='object'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['3'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['36']++;return utils.promisify(false,'IngestAPI addNetworkSecureKey requires data to be passed as an object.');}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['3'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['37']++;if(typeof data.title!=='string'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['4'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['38']++;data.title='';}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['4'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['39']++;if(typeof data.key!=='string'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['5'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['40']++;return utils.promisify(false,'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['5'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['41']++;return new Request({url:this.config.host+this.config.networksKeys,token:this.getToken(),method:'POST',data:data});};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['42']++;IngestAPI.prototype.getNetworkSecureKeyById=function(id){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['6']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['43']++;var tokens,url;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['44']++;if(typeof id!=='string'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['6'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['45']++;return utils.promisify(false,'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['6'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['46']++;tokens={id:id};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['47']++;url=utils.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['48']++;return new Request({url:url,token:this.getToken()});};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['49']++;IngestAPI.prototype.updateNetworkSecureKey=function(data){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['7']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['50']++;var tokens,url;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['51']++;if(typeof data!=='object'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['7'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['52']++;return utils.promisify(false,'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['7'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['53']++;if(typeof data.id!=='string'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['8'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['54']++;return utils.promisify(false,'IngestAPI updateNetworkSecureKeyById requires a param "id" to be a string.');}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['8'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['55']++;if(typeof data.title!=='string'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['9'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['56']++;data.title='';}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['9'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['57']++;tokens={id:data.id};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['58']++;url=utils.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['59']++;return new Request({url:url,token:this.getToken(),method:'PATCH',data:data});};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['60']++;IngestAPI.prototype.deleteNetworkSecureKeyById=function(id){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['8']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['61']++;var tokens,url;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['62']++;if(typeof id!=='string'){__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['10'][0]++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['63']++;return utils.promisify(false,'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov_Dq2NjYb2kHa5VH1DG_Lqog.b['10'][1]++;}__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['64']++;tokens={id:id};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['65']++;url=utils.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['66']++;return new Request({url:url,token:this.getToken(),method:'DELETE'});};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['67']++;IngestAPI.prototype.upload=function(file){__cov_Dq2NjYb2kHa5VH1DG_Lqog.f['9']++;__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['68']++;return new Uploader({file:file,api:this,host:this.config.host});};__cov_Dq2NjYb2kHa5VH1DG_Lqog.s['69']++;module.exports=IngestAPI;


/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';
	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	
	var isArray = function isArray(arr) {
		if (typeof Array.isArray === 'function') {
			return Array.isArray(arr);
		}
	
		return toStr.call(arr) === '[object Array]';
	};
	
	var isPlainObject = function isPlainObject(obj) {
		if (!obj || toStr.call(obj) !== '[object Object]') {
			return false;
		}
	
		var hasOwnConstructor = hasOwn.call(obj, 'constructor');
		var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
		// Not own constructor property must be Object
		if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
			return false;
		}
	
		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		var key;
		for (key in obj) {/**/}
	
		return typeof key === 'undefined' || hasOwn.call(obj, key);
	};
	
	module.exports = function extend() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0],
			i = 1,
			length = arguments.length,
			deep = false;
	
		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;
			target = arguments[1] || {};
			// skip the boolean and the target
			i = 2;
		} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {
			target = {};
		}
	
		for (; i < length; ++i) {
			options = arguments[i];
			// Only deal with non-null/undefined values
			if (options != null) {
				// Extend the base object
				for (name in options) {
					src = target[name];
					copy = options[name];
	
					// Prevent never-ending loop
					if (target !== copy) {
						// Recurse if we're merging plain objects or arrays
						if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
							if (copyIsArray) {
								copyIsArray = false;
								clone = src && isArray(src) ? src : [];
							} else {
								clone = src && isPlainObject(src) ? src : {};
							}
	
							// Never move original objects, clone them
							target[name] = extend(deep, clone, copy);
	
						// Don't bring in undefined values
						} else if (typeof copy !== 'undefined') {
							target[name] = copy;
						}
					}
				}
			}
		}
	
		// Return the modified object
		return target;
	};
	


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_SW0HFxC7unIBS1QG4oRbUg = (Function('return this'))();
	if (!__cov_SW0HFxC7unIBS1QG4oRbUg.__coverage__) { __cov_SW0HFxC7unIBS1QG4oRbUg.__coverage__ = {}; }
	__cov_SW0HFxC7unIBS1QG4oRbUg = __cov_SW0HFxC7unIBS1QG4oRbUg.__coverage__;
	if (!(__cov_SW0HFxC7unIBS1QG4oRbUg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Request.js'])) {
	   __cov_SW0HFxC7unIBS1QG4oRbUg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Request.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Request.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Request","line":19,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":33}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":52,"column":35},"end":{"line":52,"column":47}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":59,"column":32},"end":{"line":59,"column":44}}},"4":{"name":"(anonymous_4)","line":107,"loc":{"start":{"line":108,"column":36},"end":{"line":108,"column":52}}},"5":{"name":"(anonymous_5)","line":138,"loc":{"start":{"line":140,"column":40},"end":{"line":140,"column":59}}},"6":{"name":"(anonymous_6)","line":155,"loc":{"start":{"line":158,"column":36},"end":{"line":158,"column":56}}},"7":{"name":"(anonymous_7)","line":169,"loc":{"start":{"line":173,"column":36},"end":{"line":173,"column":56}}},"8":{"name":"(anonymous_8)","line":195,"loc":{"start":{"line":200,"column":33},"end":{"line":200,"column":52}}},"9":{"name":"(anonymous_9)","line":203,"loc":{"start":{"line":208,"column":37},"end":{"line":208,"column":49}}},"10":{"name":"(anonymous_10)","line":222,"loc":{"start":{"line":229,"column":40},"end":{"line":229,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"5":{"start":{"line":17,"column":0},"end":{"line":47,"column":2}},"6":{"start":{"line":19,"column":2},"end":{"line":22,"column":4}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":38}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":54}},"11":{"start":{"line":36,"column":2},"end":{"line":39,"column":3}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":80}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":24}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":21}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":22}},"16":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":69}},"18":{"start":{"line":59,"column":0},"end":{"line":101,"column":2}},"19":{"start":{"line":61,"column":2},"end":{"line":61,"column":57}},"20":{"start":{"line":62,"column":2},"end":{"line":62,"column":37}},"21":{"start":{"line":63,"column":2},"end":{"line":63,"column":73}},"22":{"start":{"line":65,"column":2},"end":{"line":68,"column":3}},"23":{"start":{"line":66,"column":4},"end":{"line":66,"column":68}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":11}},"25":{"start":{"line":70,"column":2},"end":{"line":70,"column":79}},"26":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"27":{"start":{"line":73,"column":4},"end":{"line":73,"column":38}},"28":{"start":{"line":77,"column":2},"end":{"line":87,"column":3}},"29":{"start":{"line":80,"column":4},"end":{"line":83,"column":5}},"30":{"start":{"line":81,"column":6},"end":{"line":81,"column":61}},"31":{"start":{"line":82,"column":6},"end":{"line":82,"column":13}},"32":{"start":{"line":85,"column":4},"end":{"line":85,"column":71}},"33":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"34":{"start":{"line":91,"column":4},"end":{"line":91,"column":85}},"35":{"start":{"line":95,"column":2},"end":{"line":99,"column":3}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":37}},"37":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"38":{"start":{"line":108,"column":0},"end":{"line":134,"column":2}},"39":{"start":{"line":110,"column":2},"end":{"line":114,"column":4}},"40":{"start":{"line":117,"column":2},"end":{"line":120,"column":3}},"41":{"start":{"line":118,"column":4},"end":{"line":118,"column":29}},"42":{"start":{"line":119,"column":4},"end":{"line":119,"column":18}},"43":{"start":{"line":123,"column":2},"end":{"line":130,"column":3}},"44":{"start":{"line":124,"column":4},"end":{"line":129,"column":5}},"45":{"start":{"line":125,"column":6},"end":{"line":125,"column":41}},"46":{"start":{"line":127,"column":6},"end":{"line":127,"column":29}},"47":{"start":{"line":128,"column":6},"end":{"line":128,"column":25}},"48":{"start":{"line":132,"column":2},"end":{"line":132,"column":16}},"49":{"start":{"line":140,"column":0},"end":{"line":152,"column":2}},"50":{"start":{"line":142,"column":2},"end":{"line":142,"column":13}},"51":{"start":{"line":143,"column":2},"end":{"line":143,"column":34}},"52":{"start":{"line":144,"column":2},"end":{"line":144,"column":31}},"53":{"start":{"line":147,"column":2},"end":{"line":150,"column":3}},"54":{"start":{"line":148,"column":4},"end":{"line":148,"column":18}},"55":{"start":{"line":149,"column":4},"end":{"line":149,"column":53}},"56":{"start":{"line":158,"column":0},"end":{"line":166,"column":2}},"57":{"start":{"line":161,"column":2},"end":{"line":161,"column":49}},"58":{"start":{"line":164,"column":2},"end":{"line":164,"column":59}},"59":{"start":{"line":173,"column":0},"end":{"line":194,"column":2}},"60":{"start":{"line":174,"column":2},"end":{"line":174,"column":68}},"61":{"start":{"line":175,"column":2},"end":{"line":175,"column":24}},"62":{"start":{"line":178,"column":2},"end":{"line":186,"column":3}},"63":{"start":{"line":179,"column":4},"end":{"line":185,"column":5}},"64":{"start":{"line":180,"column":6},"end":{"line":180,"column":36}},"65":{"start":{"line":182,"column":6},"end":{"line":184,"column":8}},"66":{"start":{"line":188,"column":2},"end":{"line":192,"column":4}},"67":{"start":{"line":200,"column":0},"end":{"line":203,"column":2}},"68":{"start":{"line":202,"column":2},"end":{"line":202,"column":33}},"69":{"start":{"line":208,"column":0},"end":{"line":222,"column":2}},"70":{"start":{"line":211,"column":2},"end":{"line":220,"column":3}},"71":{"start":{"line":214,"column":4},"end":{"line":218,"column":5}},"72":{"start":{"line":215,"column":6},"end":{"line":215,"column":54}},"73":{"start":{"line":217,"column":6},"end":{"line":217,"column":50}},"74":{"start":{"line":229,"column":0},"end":{"line":247,"column":2}},"75":{"start":{"line":231,"column":2},"end":{"line":233,"column":6}},"76":{"start":{"line":236,"column":2},"end":{"line":243,"column":3}},"77":{"start":{"line":238,"column":4},"end":{"line":241,"column":5}},"78":{"start":{"line":239,"column":6},"end":{"line":239,"column":20}},"79":{"start":{"line":240,"column":6},"end":{"line":240,"column":12}},"80":{"start":{"line":245,"column":2},"end":{"line":245,"column":16}},"81":{"start":{"line":249,"column":0},"end":{"line":249,"column":25}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":64,"type":"binary-expr","locations":[{"start":{"line":63,"column":23},"end":{"line":63,"column":30}},{"start":{"line":63,"column":34},"end":{"line":63,"column":72}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"8":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":19}},{"start":{"line":90,"column":23},"end":{"line":90,"column":47}},{"start":{"line":90,"column":51},"end":{"line":90,"column":66}}]},"9":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"10":{"line":116,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"11":{"line":122,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"12":{"line":174,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"13":{"line":174,"type":"binary-expr","locations":[{"start":{"line":178,"column":6},"end":{"line":178,"column":18}},{"start":{"line":178,"column":22},"end":{"line":178,"column":69}}]},"14":{"line":206,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"15":{"line":209,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"16":{"line":231,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]}},"code":["var Promise = require('pinkyswear');","var extend = require('extend');","","var JWTUtils = require('./JWTUtils');","","var VALID_RESPONSE_CODES = [200, 201, 202, 204];","","/**"," * A wrapper around the XMLHttpRequest object."," * @param {object}  options         Options for the request."," * @param {boolean} options.async   Whether to perform the request asynchronously"," * @param {string}  options.method  REST verb to use for the request."," * @param {string}  options.url     URL for the request."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","var Request = function (options) {","","  this.defaults = {","    async: true,","    method: 'GET'","  };","","  this.promise = Promise();","","  // Create the XHR object for this request.","  this.request = new XMLHttpRequest();","","  // Set up event listeners for this request.","  this.setupListeners();","","  // Todo, merge some defaults with this.","  this.options = extend(true, this.defaults, options);","","  // Make sure a url is passed before attempting to make the request.","  if (!this.options.url) {","    this.requestError('Request Error : a url is required to make the request.');","    return this.promise;","  }","","  // Make the actual request.","  this.makeRequest();","","  // Return the promise.","  return this.promise;","","};","","/**"," * Add event listeners to the XMLHttpRequest object."," */","Request.prototype.setupListeners = function () {","  this.request.onreadystatechange = this.readyStateChange.bind(this);","};","","/**"," * Execute the open and send of the XMLHttpRequest"," */","Request.prototype.makeRequest = function () {","","  var postData = this.preparePostData(this.options.data);","  var headers = this.options.headers;","  var hasContentType = headers && headers.hasOwnProperty('Content-Type');","","  if (!postData.success) {","    this.requestError('Request Error : error preparing post data.');","    return;","  }","","  this.request.open(this.options.method, this.options.url, this.options.async);","","  if (headers) {","    this.applyRequestHeaders(headers);","  }","","  // Make the token optional.","  if (this.options.token) {","","    // If there is a token present ensure that it's still valid.","    if (JWTUtils.isExpired(this.options.token)) {","      this.requestError('Request Error : token is expired.');","      return;","    }","","    this.request.setRequestHeader('Authorization', this.options.token);","","  }","","  // Set the default content type when posting data.","  if (postData.data && postData.type === 'JSON' && !hasContentType) {","    this.request.setRequestHeader('Content-Type', 'application/json; charset=utf-8');","  }","","  // If there is data then we need to pass that along with the request.","  if (postData.data) {","    this.request.send(postData.data);","  } else {","    this.request.send();","  }","","};","","/**"," * Stringify the post data if it is present."," * @param  {object} data Object to be parsed."," * @return {object}      Result object with the parsed string, and a success boolean flag."," */","Request.prototype.preparePostData = function (data) {","","  var result = {","    success: true,","    data: data,","    type: 'JSON'","  };","","  // In the case of file uploads, all FormData to be passed to the request.","  if (data instanceof FormData) {","    result.type = 'FormData';","    return result;","  }","","  // If the data is populated, and its not already a string parse it.","  if (data) {","    try {","      result.data = JSON.stringify(data);","    } catch (error) {","      result.success = false;","      result.data = null;","    }","  }","","  return result;","","};","","/**"," * Apply any supplied headers to the request object."," * @param  {object} headers Array of headers to apply to the request object."," */","Request.prototype.applyRequestHeaders = function (headers) {","","  var key, i;","  var keys = Object.keys(headers);","  var keysLength = keys.length;","","  // Loop through and add the keys to the requestHeaders.","  for (i = 0; i < keysLength; i++) {","    key = keys[i];","    this.request.setRequestHeader(key, headers[key]);","  }","","};","","/**"," * Handle the completion of the request and fulfill the promise."," * @param  {String} Response test of the request."," */","Request.prototype.requestComplete = function (response) {","","  // Process the result.","  this.response = this.processResponse(response);","","  // Either resolve or reject the promise.","  this.promise(!this.response.data.error, [this.response]);","","};","","/**"," * Process the response and parse certain content types."," * @param  {*}  response  Response data from request."," * @return {*}            Processed response data."," */","Request.prototype.processResponse = function (response) {","  var responseType = this.request.getResponseHeader('Content-Type');","  var result = response;","","  // Parse JSON if the result is JSON.","  if (responseType && responseType.indexOf('application/json') !== -1) {","    try {","      result = JSON.parse(response);","    } catch (error) {","      result = {","        error: 'JSON parsing failed. ' + error.stack","      };","    }","  }","","  return {","    data: result,","    headers: this.request.getResponseHeader.bind(this.request),","    statusCode: this.request.status","  };","","};","","/**"," * Resolve the promise."," * @param  {String} message   Error message."," */","Request.prototype.requestError = function (message) {","  // Reject the promise.","  this.promise(false, [message]);","};","","/**"," * Handle ready state change events."," */","Request.prototype.readyStateChange = function () {","","  // Request is complete.","  if (this.request.readyState === 4) {","","    // Check if the final response code is valid.","    if (this.isValidResponseCode(this.request.status)) {","      this.requestComplete(this.request.responseText);","    } else {","      this.requestError('Invalid response code.');","    }","","  }","","};","","/**"," * Validate the current response code to see if the request was a success."," * @param  {String}  responseCode Response Code."," * @return {Boolean}              Should this be treated as a successful response code."," */","Request.prototype.isValidResponseCode = function (responseCode) {","","  var result = false,","    responseCodeCount = VALID_RESPONSE_CODES.length,","    i;","","  // Check if the supplied code is in our list of valid codes.","  for (i = 0; i < responseCodeCount; i++) {","","    if (responseCode === VALID_RESPONSE_CODES[i]) {","      result = true;","      break;","    }","","  }","","  return result;","","};","","module.exports = Request;",""]};
	}
	__cov_SW0HFxC7unIBS1QG4oRbUg = __cov_SW0HFxC7unIBS1QG4oRbUg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Request.js'];
	__cov_SW0HFxC7unIBS1QG4oRbUg.s['1']++;var Promise=__webpack_require__(4);__cov_SW0HFxC7unIBS1QG4oRbUg.s['2']++;var extend=__webpack_require__(2);__cov_SW0HFxC7unIBS1QG4oRbUg.s['3']++;var JWTUtils=__webpack_require__(8);__cov_SW0HFxC7unIBS1QG4oRbUg.s['4']++;var VALID_RESPONSE_CODES=[200,201,202,204];__cov_SW0HFxC7unIBS1QG4oRbUg.s['5']++;var Request=function Request(options){__cov_SW0HFxC7unIBS1QG4oRbUg.f['1']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['6']++;this.defaults={async:true,method:'GET'};__cov_SW0HFxC7unIBS1QG4oRbUg.s['7']++;this.promise=Promise();__cov_SW0HFxC7unIBS1QG4oRbUg.s['8']++;this.request=new XMLHttpRequest();__cov_SW0HFxC7unIBS1QG4oRbUg.s['9']++;this.setupListeners();__cov_SW0HFxC7unIBS1QG4oRbUg.s['10']++;this.options=extend(true,this.defaults,options);__cov_SW0HFxC7unIBS1QG4oRbUg.s['11']++;if(!this.options.url){__cov_SW0HFxC7unIBS1QG4oRbUg.b['1'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['12']++;this.requestError('Request Error : a url is required to make the request.');__cov_SW0HFxC7unIBS1QG4oRbUg.s['13']++;return this.promise;}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['1'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['14']++;this.makeRequest();__cov_SW0HFxC7unIBS1QG4oRbUg.s['15']++;return this.promise;};__cov_SW0HFxC7unIBS1QG4oRbUg.s['16']++;Request.prototype.setupListeners=function(){__cov_SW0HFxC7unIBS1QG4oRbUg.f['2']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['17']++;this.request.onreadystatechange=this.readyStateChange.bind(this);};__cov_SW0HFxC7unIBS1QG4oRbUg.s['18']++;Request.prototype.makeRequest=function(){__cov_SW0HFxC7unIBS1QG4oRbUg.f['3']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['19']++;var postData=this.preparePostData(this.options.data);__cov_SW0HFxC7unIBS1QG4oRbUg.s['20']++;var headers=this.options.headers;__cov_SW0HFxC7unIBS1QG4oRbUg.s['21']++;var hasContentType=(__cov_SW0HFxC7unIBS1QG4oRbUg.b['2'][0]++,headers)&&(__cov_SW0HFxC7unIBS1QG4oRbUg.b['2'][1]++,headers.hasOwnProperty('Content-Type'));__cov_SW0HFxC7unIBS1QG4oRbUg.s['22']++;if(!postData.success){__cov_SW0HFxC7unIBS1QG4oRbUg.b['3'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['23']++;this.requestError('Request Error : error preparing post data.');__cov_SW0HFxC7unIBS1QG4oRbUg.s['24']++;return;}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['3'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['25']++;this.request.open(this.options.method,this.options.url,this.options.async);__cov_SW0HFxC7unIBS1QG4oRbUg.s['26']++;if(headers){__cov_SW0HFxC7unIBS1QG4oRbUg.b['4'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['27']++;this.applyRequestHeaders(headers);}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['4'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['28']++;if(this.options.token){__cov_SW0HFxC7unIBS1QG4oRbUg.b['5'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['29']++;if(JWTUtils.isExpired(this.options.token)){__cov_SW0HFxC7unIBS1QG4oRbUg.b['6'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['30']++;this.requestError('Request Error : token is expired.');__cov_SW0HFxC7unIBS1QG4oRbUg.s['31']++;return;}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['6'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['32']++;this.request.setRequestHeader('Authorization',this.options.token);}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['5'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['33']++;if((__cov_SW0HFxC7unIBS1QG4oRbUg.b['8'][0]++,postData.data)&&(__cov_SW0HFxC7unIBS1QG4oRbUg.b['8'][1]++,postData.type==='JSON')&&(__cov_SW0HFxC7unIBS1QG4oRbUg.b['8'][2]++,!hasContentType)){__cov_SW0HFxC7unIBS1QG4oRbUg.b['7'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['34']++;this.request.setRequestHeader('Content-Type','application/json; charset=utf-8');}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['7'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['35']++;if(postData.data){__cov_SW0HFxC7unIBS1QG4oRbUg.b['9'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['36']++;this.request.send(postData.data);}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['9'][1]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['37']++;this.request.send();}};__cov_SW0HFxC7unIBS1QG4oRbUg.s['38']++;Request.prototype.preparePostData=function(data){__cov_SW0HFxC7unIBS1QG4oRbUg.f['4']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['39']++;var result={success:true,data:data,type:'JSON'};__cov_SW0HFxC7unIBS1QG4oRbUg.s['40']++;if(data instanceof FormData){__cov_SW0HFxC7unIBS1QG4oRbUg.b['10'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['41']++;result.type='FormData';__cov_SW0HFxC7unIBS1QG4oRbUg.s['42']++;return result;}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['10'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['43']++;if(data){__cov_SW0HFxC7unIBS1QG4oRbUg.b['11'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['44']++;try{__cov_SW0HFxC7unIBS1QG4oRbUg.s['45']++;result.data=JSON.stringify(data);}catch(error){__cov_SW0HFxC7unIBS1QG4oRbUg.s['46']++;result.success=false;__cov_SW0HFxC7unIBS1QG4oRbUg.s['47']++;result.data=null;}}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['11'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['48']++;return result;};__cov_SW0HFxC7unIBS1QG4oRbUg.s['49']++;Request.prototype.applyRequestHeaders=function(headers){__cov_SW0HFxC7unIBS1QG4oRbUg.f['5']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['50']++;var key,i;__cov_SW0HFxC7unIBS1QG4oRbUg.s['51']++;var keys=Object.keys(headers);__cov_SW0HFxC7unIBS1QG4oRbUg.s['52']++;var keysLength=keys.length;__cov_SW0HFxC7unIBS1QG4oRbUg.s['53']++;for(i=0;i<keysLength;i++){__cov_SW0HFxC7unIBS1QG4oRbUg.s['54']++;key=keys[i];__cov_SW0HFxC7unIBS1QG4oRbUg.s['55']++;this.request.setRequestHeader(key,headers[key]);}};__cov_SW0HFxC7unIBS1QG4oRbUg.s['56']++;Request.prototype.requestComplete=function(response){__cov_SW0HFxC7unIBS1QG4oRbUg.f['6']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['57']++;this.response=this.processResponse(response);__cov_SW0HFxC7unIBS1QG4oRbUg.s['58']++;this.promise(!this.response.data.error,[this.response]);};__cov_SW0HFxC7unIBS1QG4oRbUg.s['59']++;Request.prototype.processResponse=function(response){__cov_SW0HFxC7unIBS1QG4oRbUg.f['7']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['60']++;var responseType=this.request.getResponseHeader('Content-Type');__cov_SW0HFxC7unIBS1QG4oRbUg.s['61']++;var result=response;__cov_SW0HFxC7unIBS1QG4oRbUg.s['62']++;if((__cov_SW0HFxC7unIBS1QG4oRbUg.b['13'][0]++,responseType)&&(__cov_SW0HFxC7unIBS1QG4oRbUg.b['13'][1]++,responseType.indexOf('application/json')!==-1)){__cov_SW0HFxC7unIBS1QG4oRbUg.b['12'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['63']++;try{__cov_SW0HFxC7unIBS1QG4oRbUg.s['64']++;result=JSON.parse(response);}catch(error){__cov_SW0HFxC7unIBS1QG4oRbUg.s['65']++;result={error:'JSON parsing failed. '+error.stack};}}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['12'][1]++;}__cov_SW0HFxC7unIBS1QG4oRbUg.s['66']++;return{data:result,headers:this.request.getResponseHeader.bind(this.request),statusCode:this.request.status};};__cov_SW0HFxC7unIBS1QG4oRbUg.s['67']++;Request.prototype.requestError=function(message){__cov_SW0HFxC7unIBS1QG4oRbUg.f['8']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['68']++;this.promise(false,[message]);};__cov_SW0HFxC7unIBS1QG4oRbUg.s['69']++;Request.prototype.readyStateChange=function(){__cov_SW0HFxC7unIBS1QG4oRbUg.f['9']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['70']++;if(this.request.readyState===4){__cov_SW0HFxC7unIBS1QG4oRbUg.b['14'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['71']++;if(this.isValidResponseCode(this.request.status)){__cov_SW0HFxC7unIBS1QG4oRbUg.b['15'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['72']++;this.requestComplete(this.request.responseText);}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['15'][1]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['73']++;this.requestError('Invalid response code.');}}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['14'][1]++;}};__cov_SW0HFxC7unIBS1QG4oRbUg.s['74']++;Request.prototype.isValidResponseCode=function(responseCode){__cov_SW0HFxC7unIBS1QG4oRbUg.f['10']++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['75']++;var result=false,responseCodeCount=VALID_RESPONSE_CODES.length,i;__cov_SW0HFxC7unIBS1QG4oRbUg.s['76']++;for(i=0;i<responseCodeCount;i++){__cov_SW0HFxC7unIBS1QG4oRbUg.s['77']++;if(responseCode===VALID_RESPONSE_CODES[i]){__cov_SW0HFxC7unIBS1QG4oRbUg.b['16'][0]++;__cov_SW0HFxC7unIBS1QG4oRbUg.s['78']++;result=true;__cov_SW0HFxC7unIBS1QG4oRbUg.s['79']++;break;}else{__cov_SW0HFxC7unIBS1QG4oRbUg.b['16'][1]++;}}__cov_SW0HFxC7unIBS1QG4oRbUg.s['80']++;return result;};__cov_SW0HFxC7unIBS1QG4oRbUg.s['81']++;module.exports=Request;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module, setImmediate, process) {/*
	 * PinkySwear.js 2.2.2 - Minimalistic implementation of the Promises/A+ spec
	 * 
	 * Public Domain. Use, modify and distribute it any way you like. No attribution required.
	 *
	 * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
	 *
	 * PinkySwear is a very small implementation of the Promises/A+ specification. After compilation with the
	 * Google Closure Compiler and gzipping it weighs less than 500 bytes. It is based on the implementation for 
	 * Minified.js and should be perfect for embedding. 
	 *
	 *
	 * PinkySwear has just three functions.
	 *
	 * To create a new promise in pending state, call pinkySwear():
	 *         var promise = pinkySwear();
	 *
	 * The returned object has a Promises/A+ compatible then() implementation:
	 *          promise.then(function(value) { alert("Success!"); }, function(value) { alert("Failure!"); });
	 *
	 *
	 * The promise returned by pinkySwear() is a function. To fulfill the promise, call the function with true as first argument and
	 * an optional array of values to pass to the then() handler. By putting more than one value in the array, you can pass more than one
	 * value to the then() handlers. Here an example to fulfill a promsise, this time with only one argument: 
	 *         promise(true, [42]);
	 *
	 * When the promise has been rejected, call it with false. Again, there may be more than one argument for the then() handler:
	 *         promise(true, [6, 6, 6]);
	 *         
	 * You can obtain the promise's current state by calling the function without arguments. It will be true if fulfilled,
	 * false if rejected, and otherwise undefined.
	 * 		   var state = promise(); 
	 * 
	 * https://github.com/timjansen/PinkySwear.js
	 */
	(function(target) {
		var undef;
	
		function isFunction(f) {
			return typeof f == 'function';
		}
		function isObject(f) {
			return typeof f == 'object';
		}
		function defer(callback) {
			if (typeof setImmediate != 'undefined')
				setImmediate(callback);
			else if (typeof process != 'undefined' && process['nextTick'])
				process['nextTick'](callback);
			else
				setTimeout(callback, 0);
		}
	
		target[0][target[1]] = function pinkySwear(extend) {
			var state;           // undefined/null = pending, true = fulfilled, false = rejected
			var values = [];     // an array of values as arguments for the then() handlers
			var deferred = [];   // functions to call when set() is invoked
	
			var set = function(newState, newValues) {
				if (state == null && newState != null) {
					state = newState;
					values = newValues;
					if (deferred.length)
						defer(function() {
							for (var i = 0; i < deferred.length; i++)
								deferred[i]();
						});
				}
				return state;
			};
	
			set['then'] = function (onFulfilled, onRejected) {
				var promise2 = pinkySwear(extend);
				var callCallbacks = function() {
		    		try {
		    			var f = (state ? onFulfilled : onRejected);
		    			if (isFunction(f)) {
			   				function resolve(x) {
							    var then, cbCalled = 0;
			   					try {
					   				if (x && (isObject(x) || isFunction(x)) && isFunction(then = x['then'])) {
											if (x === promise2)
												throw new TypeError();
											then['call'](x,
												function() { if (!cbCalled++) resolve.apply(undef,arguments); } ,
												function(value){ if (!cbCalled++) promise2(false,[value]);});
					   				}
					   				else
					   					promise2(true, arguments);
			   					}
			   					catch(e) {
			   						if (!cbCalled++)
			   							promise2(false, [e]);
			   					}
			   				}
			   				resolve(f.apply(undef, values || []));
			   			}
			   			else
			   				promise2(state, values);
					}
					catch (e) {
						promise2(false, [e]);
					}
				};
				if (state != null)
					defer(callCallbacks);
				else
					deferred.push(callCallbacks);
				return promise2;
			};
	        if(extend){
	            set = extend(set);
	        }
			return set;
		};
	})( false ? [window, 'pinkySwear'] : [module, 'exports']);
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), __webpack_require__(6).setImmediate, __webpack_require__(7)))

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(7).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);
	
	  immediateIds[id] = true;
	
	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });
	
	  return id;
	};
	
	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).setImmediate, __webpack_require__(6).clearImmediate))

/***/ },
/* 7 */
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";
	var __cov_gPoVTftBOlvJ3hP48H735w = (Function('return this'))();
	if (!__cov_gPoVTftBOlvJ3hP48H735w.__coverage__) { __cov_gPoVTftBOlvJ3hP48H735w.__coverage__ = {}; }
	__cov_gPoVTftBOlvJ3hP48H735w = __cov_gPoVTftBOlvJ3hP48H735w.__coverage__;
	if (!(__cov_gPoVTftBOlvJ3hP48H735w['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/JWTUtils.js'])) {
	   __cov_gPoVTftBOlvJ3hP48H735w['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/JWTUtils.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/JWTUtils.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"parseTokenPayload","line":12,"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":41}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":32,"column":27},"end":{"line":32,"column":44}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":25,"column":2}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":31}},"3":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":32}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"8":{"start":{"line":32,"column":0},"end":{"line":61,"column":2}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":29}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":16}},"12":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":18}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":17}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":29}},"17":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":18}},"19":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":19}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":16}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]}},"code":["/**"," * UTILS for dealing with jwt tokens."," */","","/**"," * Parse the payload out of the JWT token."," * @param  {string} token JWT Token."," * @return {object}       Parsed payload object."," */","var parseTokenPayload = function (token) {","  var parts = token.split('.');","","  // Return false if the token is invalid.","  if (parts.length <= 1) {","    return false;","  }","","  // decode the payload portion.","  var payload = window.atob(parts[1]);","","  // parse it as JSON","  payload = JSON.parse(payload);","","  return payload;","};","","/**"," * Return true if the provided token has expired."," * @param  {string}  token JWT Token"," * @return {Boolean}       True if expired."," */","module.exports.isExpired = function (token) {","  var data, exp, result, now;","","  data = parseTokenPayload(token);","","  result = true;","","  // Return true if the token does not parse properly.","  if (!data) {","    return result;","  }","","  exp = data.exp;","","  // Get the unix timestamp in seconds.","  now = new Date();","  now = now.getTime() / 1000;","","  if (!exp) {","    return result;","  }","","  // If the expiry data is still in the future.","  if (now < exp) {","    result = false;","  }","","  return result;","","};",""]};
	}
	__cov_gPoVTftBOlvJ3hP48H735w = __cov_gPoVTftBOlvJ3hP48H735w['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/JWTUtils.js'];
	__cov_gPoVTftBOlvJ3hP48H735w.s['1']++;var parseTokenPayload=function parseTokenPayload(token){__cov_gPoVTftBOlvJ3hP48H735w.f['1']++;__cov_gPoVTftBOlvJ3hP48H735w.s['2']++;var parts=token.split('.');__cov_gPoVTftBOlvJ3hP48H735w.s['3']++;if(parts.length<=1){__cov_gPoVTftBOlvJ3hP48H735w.b['1'][0]++;__cov_gPoVTftBOlvJ3hP48H735w.s['4']++;return false;}else{__cov_gPoVTftBOlvJ3hP48H735w.b['1'][1]++;}__cov_gPoVTftBOlvJ3hP48H735w.s['5']++;var payload=window.atob(parts[1]);__cov_gPoVTftBOlvJ3hP48H735w.s['6']++;payload=JSON.parse(payload);__cov_gPoVTftBOlvJ3hP48H735w.s['7']++;return payload;};__cov_gPoVTftBOlvJ3hP48H735w.s['8']++;module.exports.isExpired=function(token){__cov_gPoVTftBOlvJ3hP48H735w.f['2']++;__cov_gPoVTftBOlvJ3hP48H735w.s['9']++;var data,exp,result,now;__cov_gPoVTftBOlvJ3hP48H735w.s['10']++;data=parseTokenPayload(token);__cov_gPoVTftBOlvJ3hP48H735w.s['11']++;result=true;__cov_gPoVTftBOlvJ3hP48H735w.s['12']++;if(!data){__cov_gPoVTftBOlvJ3hP48H735w.b['2'][0]++;__cov_gPoVTftBOlvJ3hP48H735w.s['13']++;return result;}else{__cov_gPoVTftBOlvJ3hP48H735w.b['2'][1]++;}__cov_gPoVTftBOlvJ3hP48H735w.s['14']++;exp=data.exp;__cov_gPoVTftBOlvJ3hP48H735w.s['15']++;now=new Date();__cov_gPoVTftBOlvJ3hP48H735w.s['16']++;now=now.getTime()/1000;__cov_gPoVTftBOlvJ3hP48H735w.s['17']++;if(!exp){__cov_gPoVTftBOlvJ3hP48H735w.b['3'][0]++;__cov_gPoVTftBOlvJ3hP48H735w.s['18']++;return result;}else{__cov_gPoVTftBOlvJ3hP48H735w.b['3'][1]++;}__cov_gPoVTftBOlvJ3hP48H735w.s['19']++;if(now<exp){__cov_gPoVTftBOlvJ3hP48H735w.b['4'][0]++;__cov_gPoVTftBOlvJ3hP48H735w.s['20']++;result=false;}else{__cov_gPoVTftBOlvJ3hP48H735w.b['4'][1]++;}__cov_gPoVTftBOlvJ3hP48H735w.s['21']++;return result;};


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_vzJpHmAWQPIhhpF$G69oFg = (Function('return this'))();
	if (!__cov_vzJpHmAWQPIhhpF$G69oFg.__coverage__) { __cov_vzJpHmAWQPIhhpF$G69oFg.__coverage__ = {}; }
	__cov_vzJpHmAWQPIhhpF$G69oFg = __cov_vzJpHmAWQPIhhpF$G69oFg.__coverage__;
	if (!(__cov_vzJpHmAWQPIhhpF$G69oFg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Utils.js'])) {
	   __cov_vzJpHmAWQPIhhpF$G69oFg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Utils.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Utils.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":19,"column":20},"end":{"line":19,"column":46}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":41,"column":18},"end":{"line":41,"column":42}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":55,"column":15},"end":{"line":55,"column":43}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":85,"column":27},"end":{"line":85,"column":58}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":24},"end":{"line":100,"column":56}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":123,"column":21},"end":{"line":123,"column":50}}},"7":{"name":"(anonymous_7)","line":131,"loc":{"start":{"line":132,"column":21},"end":{"line":132,"column":43}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":141,"column":22},"end":{"line":141,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":15}},"3":{"start":{"line":19,"column":0},"end":{"line":33,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":8}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}},"9":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":71}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"12":{"start":{"line":41,"column":0},"end":{"line":47,"column":2}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":26}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":17}},"16":{"start":{"line":55,"column":0},"end":{"line":78,"column":2}},"17":{"start":{"line":57,"column":2},"end":{"line":57,"column":38}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":22}},"19":{"start":{"line":60,"column":2},"end":{"line":66,"column":4}},"20":{"start":{"line":68,"column":2},"end":{"line":68,"column":61}},"21":{"start":{"line":69,"column":2},"end":{"line":69,"column":63}},"22":{"start":{"line":71,"column":2},"end":{"line":74,"column":3}},"23":{"start":{"line":72,"column":4},"end":{"line":72,"column":25}},"24":{"start":{"line":73,"column":4},"end":{"line":73,"column":54}},"25":{"start":{"line":76,"column":2},"end":{"line":76,"column":13}},"26":{"start":{"line":85,"column":0},"end":{"line":91,"column":2}},"27":{"start":{"line":87,"column":2},"end":{"line":90,"column":3}},"28":{"start":{"line":88,"column":4},"end":{"line":89,"column":54}},"29":{"start":{"line":100,"column":0},"end":{"line":115,"column":2}},"30":{"start":{"line":103,"column":2},"end":{"line":103,"column":19}},"31":{"start":{"line":104,"column":2},"end":{"line":104,"column":33}},"32":{"start":{"line":106,"column":2},"end":{"line":113,"column":3}},"33":{"start":{"line":107,"column":4},"end":{"line":107,"column":31}},"34":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"35":{"start":{"line":111,"column":6},"end":{"line":111,"column":75}},"36":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"37":{"start":{"line":124,"column":2},"end":{"line":124,"column":22}},"38":{"start":{"line":132,"column":0},"end":{"line":134,"column":2}},"39":{"start":{"line":133,"column":2},"end":{"line":133,"column":22}},"40":{"start":{"line":141,"column":0},"end":{"line":147,"column":2}},"41":{"start":{"line":142,"column":2},"end":{"line":142,"column":23}},"42":{"start":{"line":144,"column":2},"end":{"line":146,"column":3}},"43":{"start":{"line":145,"column":4},"end":{"line":145,"column":73}},"44":{"start":{"line":149,"column":0},"end":{"line":149,"column":23}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":73,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"3":{"line":88,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"5":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"6":{"line":143,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]}},"code":["var Promise = require('pinkyswear');","var Utils = {};","/**"," * Replace all tokens within a given template based on the given key/value pair."," * @param  {string}     template    Template for the url."," * @param  {object}     hash        Key/Value pair for replacing tokens in the template."," *"," * @example"," * var tokens = {"," *  keyInTemplate: 'replacedWith'"," * };"," *"," * var template = '<%=keyInTemplate%>';"," *"," * var result = parseTokens(template, tokens);  // 'replacedWith'"," *"," * @return {string}                 Parsed string."," */","Utils.parseTokens = function (template, hash) {","  if (!template) {","    return null;","  }","","  var keys = Object.keys(hash);","  var i;","  var length = keys.length;","","  for (i = 0; i < length; i++) {","    template = template.replace('<%=' + keys[i] + '%>', hash[keys[i]]);","  }","","  return template;","};","","/**"," * Wrapper function to wrap a value in either a reject or resolve."," * @param  {boolean} state Rejection or Approval."," * @param  {*}       value Value to pass back to the promise."," * @return {Promise}       Promise/A+ spec promise."," */","Utils.promisify = function (state, value) {","  var promise = Promise();","","  promise(state, [value]);","","  return promise;","};","","/**"," * Wrap an array of promises and return when they have all completed."," * @param   {Array}     promises  An array of promises to manage."," * @param   {boolean}   paused    A boolean to pause the execution of the promises."," * @return  {Promise}             A promise that is resolved when all of the promises have fulfilled."," */","Utils.series = function (promises, paused) {","","  var promisesCount = promises.length;","  var all = Promise();","","  var state = {","    total: promisesCount,","    complete: 0,","    responses: [],","    promises: promises,","    paused: true","  };","","  all.pause = Utils._seriesPause.bind(undefined, all, state);","  all.resume = Utils._seriesResume.bind(undefined, all, state);","","  if (!paused) {","    state.paused = false;","    Utils._seriesCallPromise(promises[0], state, all);","  }","","  return all;","","};","","/**"," * Call a promise and pass the complete and error functions."," * @param  {Promise} promise Promise to execute on."," * @param  {Object} state   Persistent state of the series of promises."," */","Utils._seriesCallPromise = function (promise, state, all) {","  // call the promise;","  if (!state.paused) {","    promise().then(Utils._seriesComplete.bind(undefined, all, state),","      Utils._seriesError.bind(undefined, all, state));","  }","};","","/**"," * Manage the progress of the promises."," * @private"," * @param  {Promise} all      All promise."," * @param  {Object}  state    State object used to persist the promise count."," * @param  {Object}  response Response of the promise being fulfilled."," */","Utils._seriesComplete = function (all, state, response) {","","  // Increment the complete promises.","  state.complete++;","  state.responses.push(response);","","  if (state.complete >= state.total) {","    all(true, state.responses);","  } else {","    if (!state.paused) {","      // Execute the next promise.","      Utils._seriesCallPromise(state.promises[state.complete], state, all);","    }","  }","","};","","/**"," * Immediately reject the promise if there is an error."," * @param  {Promise} all  All promise."," * @param  {Object}  state    State object used to persist the promise count."," * @param  {Object}  response Response of the promise being fulfilled."," */","Utils._seriesError = function (all, state, error) {","  all(false, [error]);","};","","/**"," * Pause the current series of promises."," * @param  {Promise} all  All promise."," * @param  {Object}  state    State object used to persist the promise count."," */","Utils._seriesPause = function (all, state) {","  state.paused = true;","};","","/**"," * Resume the current series of promises."," * @param  {Promise} all  All promise."," * @param  {Object}  state    State object used to persist the promise count."," */","Utils._seriesResume = function (all, state) {","  state.paused = false;","","  if (state.complete !== state.total) {","    Utils._seriesCallPromise(state.promises[state.complete], state, all);","  }","};","","module.exports = Utils;",""]};
	}
	__cov_vzJpHmAWQPIhhpF$G69oFg = __cov_vzJpHmAWQPIhhpF$G69oFg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Utils.js'];
	__cov_vzJpHmAWQPIhhpF$G69oFg.s['1']++;var Promise=__webpack_require__(4);__cov_vzJpHmAWQPIhhpF$G69oFg.s['2']++;var Utils={};__cov_vzJpHmAWQPIhhpF$G69oFg.s['3']++;Utils.parseTokens=function(template,hash){__cov_vzJpHmAWQPIhhpF$G69oFg.f['1']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['4']++;if(!template){__cov_vzJpHmAWQPIhhpF$G69oFg.b['1'][0]++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['5']++;return null;}else{__cov_vzJpHmAWQPIhhpF$G69oFg.b['1'][1]++;}__cov_vzJpHmAWQPIhhpF$G69oFg.s['6']++;var keys=Object.keys(hash);__cov_vzJpHmAWQPIhhpF$G69oFg.s['7']++;var i;__cov_vzJpHmAWQPIhhpF$G69oFg.s['8']++;var length=keys.length;__cov_vzJpHmAWQPIhhpF$G69oFg.s['9']++;for(i=0;i<length;i++){__cov_vzJpHmAWQPIhhpF$G69oFg.s['10']++;template=template.replace('<%='+keys[i]+'%>',hash[keys[i]]);}__cov_vzJpHmAWQPIhhpF$G69oFg.s['11']++;return template;};__cov_vzJpHmAWQPIhhpF$G69oFg.s['12']++;Utils.promisify=function(state,value){__cov_vzJpHmAWQPIhhpF$G69oFg.f['2']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['13']++;var promise=Promise();__cov_vzJpHmAWQPIhhpF$G69oFg.s['14']++;promise(state,[value]);__cov_vzJpHmAWQPIhhpF$G69oFg.s['15']++;return promise;};__cov_vzJpHmAWQPIhhpF$G69oFg.s['16']++;Utils.series=function(promises,paused){__cov_vzJpHmAWQPIhhpF$G69oFg.f['3']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['17']++;var promisesCount=promises.length;__cov_vzJpHmAWQPIhhpF$G69oFg.s['18']++;var all=Promise();__cov_vzJpHmAWQPIhhpF$G69oFg.s['19']++;var state={total:promisesCount,complete:0,responses:[],promises:promises,paused:true};__cov_vzJpHmAWQPIhhpF$G69oFg.s['20']++;all.pause=Utils._seriesPause.bind(undefined,all,state);__cov_vzJpHmAWQPIhhpF$G69oFg.s['21']++;all.resume=Utils._seriesResume.bind(undefined,all,state);__cov_vzJpHmAWQPIhhpF$G69oFg.s['22']++;if(!paused){__cov_vzJpHmAWQPIhhpF$G69oFg.b['2'][0]++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['23']++;state.paused=false;__cov_vzJpHmAWQPIhhpF$G69oFg.s['24']++;Utils._seriesCallPromise(promises[0],state,all);}else{__cov_vzJpHmAWQPIhhpF$G69oFg.b['2'][1]++;}__cov_vzJpHmAWQPIhhpF$G69oFg.s['25']++;return all;};__cov_vzJpHmAWQPIhhpF$G69oFg.s['26']++;Utils._seriesCallPromise=function(promise,state,all){__cov_vzJpHmAWQPIhhpF$G69oFg.f['4']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['27']++;if(!state.paused){__cov_vzJpHmAWQPIhhpF$G69oFg.b['3'][0]++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['28']++;promise().then(Utils._seriesComplete.bind(undefined,all,state),Utils._seriesError.bind(undefined,all,state));}else{__cov_vzJpHmAWQPIhhpF$G69oFg.b['3'][1]++;}};__cov_vzJpHmAWQPIhhpF$G69oFg.s['29']++;Utils._seriesComplete=function(all,state,response){__cov_vzJpHmAWQPIhhpF$G69oFg.f['5']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['30']++;state.complete++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['31']++;state.responses.push(response);__cov_vzJpHmAWQPIhhpF$G69oFg.s['32']++;if(state.complete>=state.total){__cov_vzJpHmAWQPIhhpF$G69oFg.b['4'][0]++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['33']++;all(true,state.responses);}else{__cov_vzJpHmAWQPIhhpF$G69oFg.b['4'][1]++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['34']++;if(!state.paused){__cov_vzJpHmAWQPIhhpF$G69oFg.b['5'][0]++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['35']++;Utils._seriesCallPromise(state.promises[state.complete],state,all);}else{__cov_vzJpHmAWQPIhhpF$G69oFg.b['5'][1]++;}}};__cov_vzJpHmAWQPIhhpF$G69oFg.s['36']++;Utils._seriesError=function(all,state,error){__cov_vzJpHmAWQPIhhpF$G69oFg.f['6']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['37']++;all(false,[error]);};__cov_vzJpHmAWQPIhhpF$G69oFg.s['38']++;Utils._seriesPause=function(all,state){__cov_vzJpHmAWQPIhhpF$G69oFg.f['7']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['39']++;state.paused=true;};__cov_vzJpHmAWQPIhhpF$G69oFg.s['40']++;Utils._seriesResume=function(all,state){__cov_vzJpHmAWQPIhhpF$G69oFg.f['8']++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['41']++;state.paused=false;__cov_vzJpHmAWQPIhhpF$G69oFg.s['42']++;if(state.complete!==state.total){__cov_vzJpHmAWQPIhhpF$G69oFg.b['6'][0]++;__cov_vzJpHmAWQPIhhpF$G69oFg.s['43']++;Utils._seriesCallPromise(state.promises[state.complete],state,all);}else{__cov_vzJpHmAWQPIhhpF$G69oFg.b['6'][1]++;}};__cov_vzJpHmAWQPIhhpF$G69oFg.s['44']++;module.exports=Utils;


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_mNy2JPCa8gr4H$6GJv1YUg = (Function('return this'))();
	if (!__cov_mNy2JPCa8gr4H$6GJv1YUg.__coverage__) { __cov_mNy2JPCa8gr4H$6GJv1YUg.__coverage__ = {}; }
	__cov_mNy2JPCa8gr4H$6GJv1YUg = __cov_mNy2JPCa8gr4H$6GJv1YUg.__coverage__;
	if (!(__cov_mNy2JPCa8gr4H$6GJv1YUg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Uploader.js'])) {
	   __cov_mNy2JPCa8gr4H$6GJv1YUg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Uploader.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Uploader.js","s":{"1":0,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"Upload","line":19,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":63,"column":28},"end":{"line":63,"column":48}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":71,"column":24},"end":{"line":71,"column":36}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":82,"column":35},"end":{"line":82,"column":65}}},"5":{"name":"(anonymous_5)","line":96,"loc":{"start":{"line":97,"column":27},"end":{"line":97,"column":45}}},"6":{"name":"(anonymous_6)","line":111,"loc":{"start":{"line":112,"column":34},"end":{"line":112,"column":54}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":127,"column":31},"end":{"line":127,"column":43}}},"8":{"name":"(anonymous_8)","line":159,"loc":{"start":{"line":161,"column":39},"end":{"line":161,"column":59}}},"9":{"name":"(anonymous_9)","line":171,"loc":{"start":{"line":173,"column":34},"end":{"line":173,"column":46}}},"10":{"name":"(anonymous_10)","line":186,"loc":{"start":{"line":190,"column":33},"end":{"line":190,"column":45}}},"11":{"name":"(anonymous_11)","line":223,"loc":{"start":{"line":226,"column":32},"end":{"line":226,"column":49}}},"12":{"name":"(anonymous_12)","line":232,"loc":{"start":{"line":237,"column":31},"end":{"line":237,"column":43}}},"13":{"name":"(anonymous_13)","line":246,"loc":{"start":{"line":253,"column":31},"end":{"line":253,"column":48}}},"14":{"name":"(anonymous_14)","line":282,"loc":{"start":{"line":289,"column":31},"end":{"line":289,"column":59}}},"15":{"name":"(anonymous_15)","line":305,"loc":{"start":{"line":312,"column":34},"end":{"line":312,"column":51}}},"16":{"name":"(anonymous_16)","line":326,"loc":{"start":{"line":333,"column":35},"end":{"line":333,"column":47}}},"17":{"name":"(anonymous_17)","line":354,"loc":{"start":{"line":361,"column":37},"end":{"line":361,"column":49}}},"18":{"name":"(anonymous_18)","line":366,"loc":{"start":{"line":373,"column":25},"end":{"line":373,"column":42}}},"19":{"name":"(anonymous_19)","line":422,"loc":{"start":{"line":430,"column":34},"end":{"line":430,"column":51}}},"20":{"name":"(anonymous_20)","line":429,"loc":{"start":{"line":437,"column":25},"end":{"line":437,"column":37}}},"21":{"name":"(anonymous_21)","line":439,"loc":{"start":{"line":447,"column":26},"end":{"line":447,"column":38}}},"22":{"name":"(anonymous_22)","line":452,"loc":{"start":{"line":460,"column":35},"end":{"line":460,"column":51}}},"23":{"name":"(anonymous_23)","line":466,"loc":{"start":{"line":474,"column":35},"end":{"line":474,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":17,"column":0},"end":{"line":57,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":31,"column":4}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":57}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":31}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":21}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":22}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":26}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":25}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":23}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":22}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":23}},"18":{"start":{"line":48,"column":2},"end":{"line":48,"column":27}},"19":{"start":{"line":50,"column":2},"end":{"line":55,"column":4}},"20":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"21":{"start":{"line":64,"column":2},"end":{"line":64,"column":45}},"22":{"start":{"line":71,"column":0},"end":{"line":75,"column":2}},"23":{"start":{"line":72,"column":2},"end":{"line":74,"column":42}},"24":{"start":{"line":82,"column":0},"end":{"line":89,"column":2}},"25":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"26":{"start":{"line":85,"column":4},"end":{"line":85,"column":11}},"27":{"start":{"line":88,"column":2},"end":{"line":88,"column":54}},"28":{"start":{"line":97,"column":0},"end":{"line":104,"column":2}},"29":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"30":{"start":{"line":100,"column":4},"end":{"line":100,"column":52}},"31":{"start":{"line":103,"column":2},"end":{"line":103,"column":76}},"32":{"start":{"line":112,"column":0},"end":{"line":120,"column":2}},"33":{"start":{"line":114,"column":2},"end":{"line":114,"column":22}},"34":{"start":{"line":116,"column":2},"end":{"line":116,"column":26}},"35":{"start":{"line":117,"column":2},"end":{"line":117,"column":43}},"36":{"start":{"line":119,"column":2},"end":{"line":119,"column":28}},"37":{"start":{"line":127,"column":0},"end":{"line":155,"column":2}},"38":{"start":{"line":129,"column":2},"end":{"line":129,"column":10}},"39":{"start":{"line":130,"column":2},"end":{"line":130,"column":13}},"40":{"start":{"line":131,"column":2},"end":{"line":131,"column":19}},"41":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"42":{"start":{"line":134,"column":4},"end":{"line":134,"column":52}},"43":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"44":{"start":{"line":138,"column":4},"end":{"line":138,"column":85}},"45":{"start":{"line":141,"column":2},"end":{"line":144,"column":4}},"46":{"start":{"line":146,"column":2},"end":{"line":146,"column":77}},"47":{"start":{"line":148,"column":2},"end":{"line":153,"column":47}},"48":{"start":{"line":161,"column":0},"end":{"line":167,"column":2}},"49":{"start":{"line":162,"column":2},"end":{"line":162,"column":26}},"50":{"start":{"line":163,"column":2},"end":{"line":163,"column":42}},"51":{"start":{"line":164,"column":2},"end":{"line":164,"column":52}},"52":{"start":{"line":165,"column":2},"end":{"line":165,"column":43}},"53":{"start":{"line":166,"column":2},"end":{"line":166,"column":45}},"54":{"start":{"line":173,"column":0},"end":{"line":183,"column":2}},"55":{"start":{"line":174,"column":2},"end":{"line":182,"column":3}},"56":{"start":{"line":176,"column":4},"end":{"line":177,"column":47}},"57":{"start":{"line":180,"column":4},"end":{"line":181,"column":45}},"58":{"start":{"line":190,"column":0},"end":{"line":219,"column":2}},"59":{"start":{"line":191,"column":2},"end":{"line":191,"column":52}},"60":{"start":{"line":192,"column":2},"end":{"line":193,"column":23}},"61":{"start":{"line":195,"column":2},"end":{"line":198,"column":3}},"62":{"start":{"line":196,"column":4},"end":{"line":196,"column":17}},"63":{"start":{"line":197,"column":4},"end":{"line":197,"column":52}},"64":{"start":{"line":200,"column":2},"end":{"line":213,"column":3}},"65":{"start":{"line":202,"column":4},"end":{"line":202,"column":80}},"66":{"start":{"line":204,"column":4},"end":{"line":207,"column":6}},"67":{"start":{"line":209,"column":4},"end":{"line":209,"column":28}},"68":{"start":{"line":211,"column":4},"end":{"line":211,"column":60}},"69":{"start":{"line":216,"column":2},"end":{"line":216,"column":64}},"70":{"start":{"line":218,"column":2},"end":{"line":218,"column":28}},"71":{"start":{"line":226,"column":0},"end":{"line":230,"column":2}},"72":{"start":{"line":227,"column":2},"end":{"line":229,"column":49}},"73":{"start":{"line":237,"column":0},"end":{"line":245,"column":2}},"74":{"start":{"line":238,"column":2},"end":{"line":240,"column":4}},"75":{"start":{"line":242,"column":2},"end":{"line":244,"column":48}},"76":{"start":{"line":253,"column":0},"end":{"line":281,"column":2}},"77":{"start":{"line":254,"column":2},"end":{"line":254,"column":10}},"78":{"start":{"line":255,"column":2},"end":{"line":255,"column":19}},"79":{"start":{"line":256,"column":2},"end":{"line":256,"column":19}},"80":{"start":{"line":259,"column":2},"end":{"line":261,"column":3}},"81":{"start":{"line":260,"column":4},"end":{"line":260,"column":50}},"82":{"start":{"line":263,"column":2},"end":{"line":263,"column":50}},"83":{"start":{"line":265,"column":2},"end":{"line":267,"column":3}},"84":{"start":{"line":266,"column":4},"end":{"line":266,"column":85}},"85":{"start":{"line":269,"column":2},"end":{"line":272,"column":5}},"86":{"start":{"line":274,"column":2},"end":{"line":280,"column":5}},"87":{"start":{"line":289,"column":0},"end":{"line":306,"column":2}},"88":{"start":{"line":290,"column":2},"end":{"line":290,"column":19}},"89":{"start":{"line":292,"column":2},"end":{"line":292,"column":32}},"90":{"start":{"line":293,"column":2},"end":{"line":293,"column":39}},"91":{"start":{"line":296,"column":2},"end":{"line":296,"column":50}},"92":{"start":{"line":297,"column":2},"end":{"line":297,"column":54}},"93":{"start":{"line":298,"column":2},"end":{"line":298,"column":51}},"94":{"start":{"line":300,"column":2},"end":{"line":305,"column":5}},"95":{"start":{"line":312,"column":0},"end":{"line":325,"column":2}},"96":{"start":{"line":313,"column":2},"end":{"line":313,"column":15}},"97":{"start":{"line":315,"column":2},"end":{"line":315,"column":24}},"98":{"start":{"line":316,"column":2},"end":{"line":316,"column":24}},"99":{"start":{"line":318,"column":2},"end":{"line":318,"column":40}},"100":{"start":{"line":320,"column":2},"end":{"line":320,"column":55}},"101":{"start":{"line":321,"column":2},"end":{"line":321,"column":28}},"102":{"start":{"line":322,"column":2},"end":{"line":322,"column":34}},"103":{"start":{"line":324,"column":2},"end":{"line":324,"column":50}},"104":{"start":{"line":333,"column":0},"end":{"line":354,"column":2}},"105":{"start":{"line":334,"column":2},"end":{"line":334,"column":10}},"106":{"start":{"line":335,"column":2},"end":{"line":335,"column":13}},"107":{"start":{"line":337,"column":2},"end":{"line":340,"column":3}},"108":{"start":{"line":338,"column":4},"end":{"line":338,"column":17}},"109":{"start":{"line":339,"column":4},"end":{"line":339,"column":52}},"110":{"start":{"line":342,"column":2},"end":{"line":344,"column":4}},"111":{"start":{"line":346,"column":2},"end":{"line":346,"column":85}},"112":{"start":{"line":348,"column":2},"end":{"line":353,"column":45}},"113":{"start":{"line":361,"column":0},"end":{"line":364,"column":2}},"114":{"start":{"line":362,"column":2},"end":{"line":362,"column":28}},"115":{"start":{"line":363,"column":2},"end":{"line":363,"column":28}},"116":{"start":{"line":373,"column":0},"end":{"line":423,"column":2}},"117":{"start":{"line":374,"column":2},"end":{"line":374,"column":10}},"118":{"start":{"line":375,"column":2},"end":{"line":375,"column":13}},"119":{"start":{"line":376,"column":2},"end":{"line":376,"column":19}},"120":{"start":{"line":378,"column":2},"end":{"line":380,"column":3}},"121":{"start":{"line":379,"column":4},"end":{"line":379,"column":17}},"122":{"start":{"line":382,"column":2},"end":{"line":382,"column":22}},"123":{"start":{"line":386,"column":2},"end":{"line":398,"column":3}},"124":{"start":{"line":388,"column":4},"end":{"line":396,"column":5}},"125":{"start":{"line":391,"column":6},"end":{"line":391,"column":63}},"126":{"start":{"line":395,"column":6},"end":{"line":395,"column":35}},"127":{"start":{"line":400,"column":2},"end":{"line":403,"column":3}},"128":{"start":{"line":401,"column":4},"end":{"line":401,"column":31}},"129":{"start":{"line":402,"column":4},"end":{"line":402,"column":30}},"130":{"start":{"line":405,"column":2},"end":{"line":407,"column":3}},"131":{"start":{"line":406,"column":4},"end":{"line":406,"column":85}},"132":{"start":{"line":409,"column":2},"end":{"line":412,"column":4}},"133":{"start":{"line":414,"column":2},"end":{"line":414,"column":82}},"134":{"start":{"line":416,"column":2},"end":{"line":422,"column":49}},"135":{"start":{"line":430,"column":0},"end":{"line":432,"column":2}},"136":{"start":{"line":431,"column":2},"end":{"line":431,"column":59}},"137":{"start":{"line":437,"column":0},"end":{"line":442,"column":2}},"138":{"start":{"line":438,"column":2},"end":{"line":438,"column":21}},"139":{"start":{"line":439,"column":2},"end":{"line":441,"column":3}},"140":{"start":{"line":440,"column":4},"end":{"line":440,"column":31}},"141":{"start":{"line":447,"column":0},"end":{"line":452,"column":2}},"142":{"start":{"line":448,"column":2},"end":{"line":448,"column":22}},"143":{"start":{"line":449,"column":2},"end":{"line":451,"column":3}},"144":{"start":{"line":450,"column":4},"end":{"line":450,"column":32}},"145":{"start":{"line":460,"column":0},"end":{"line":466,"column":2}},"146":{"start":{"line":461,"column":2},"end":{"line":463,"column":3}},"147":{"start":{"line":462,"column":4},"end":{"line":462,"column":11}},"148":{"start":{"line":465,"column":2},"end":{"line":465,"column":57}},"149":{"start":{"line":474,"column":0},"end":{"line":486,"column":2}},"150":{"start":{"line":475,"column":2},"end":{"line":475,"column":18}},"151":{"start":{"line":477,"column":2},"end":{"line":483,"column":3}},"152":{"start":{"line":478,"column":4},"end":{"line":478,"column":29}},"153":{"start":{"line":479,"column":9},"end":{"line":483,"column":3}},"154":{"start":{"line":480,"column":4},"end":{"line":480,"column":32}},"155":{"start":{"line":482,"column":4},"end":{"line":482,"column":26}},"156":{"start":{"line":485,"column":2},"end":{"line":485,"column":21}},"157":{"start":{"line":488,"column":0},"end":{"line":488,"column":24}}},"branchMap":{"1":{"line":83,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"2":{"line":98,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"3":{"line":132,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"4":{"line":136,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"5":{"line":172,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"6":{"line":193,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"7":{"line":252,"type":"if","locations":[{"start":{"line":259,"column":2},"end":{"line":259,"column":2}},{"start":{"line":259,"column":2},"end":{"line":259,"column":2}}]},"8":{"line":258,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"9":{"line":330,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"10":{"line":371,"type":"if","locations":[{"start":{"line":378,"column":2},"end":{"line":378,"column":2}},{"start":{"line":378,"column":2},"end":{"line":378,"column":2}}]},"11":{"line":379,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"12":{"line":381,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]},"13":{"line":392,"type":"if","locations":[{"start":{"line":400,"column":2},"end":{"line":400,"column":2}},{"start":{"line":400,"column":2},"end":{"line":400,"column":2}}]},"14":{"line":397,"type":"if","locations":[{"start":{"line":405,"column":2},"end":{"line":405,"column":2}},{"start":{"line":405,"column":2},"end":{"line":405,"column":2}}]},"15":{"line":431,"type":"if","locations":[{"start":{"line":439,"column":2},"end":{"line":439,"column":2}},{"start":{"line":439,"column":2},"end":{"line":439,"column":2}}]},"16":{"line":441,"type":"if","locations":[{"start":{"line":449,"column":2},"end":{"line":449,"column":2}},{"start":{"line":449,"column":2},"end":{"line":449,"column":2}}]},"17":{"line":453,"type":"if","locations":[{"start":{"line":461,"column":2},"end":{"line":461,"column":2}},{"start":{"line":461,"column":2},"end":{"line":461,"column":2}}]},"18":{"line":457,"type":"cond-expr","locations":[{"start":{"line":465,"column":43},"end":{"line":465,"column":48}},{"start":{"line":465,"column":51},"end":{"line":465,"column":55}}]},"19":{"line":469,"type":"if","locations":[{"start":{"line":477,"column":2},"end":{"line":477,"column":2}},{"start":{"line":477,"column":2},"end":{"line":477,"column":2}}]},"20":{"line":471,"type":"if","locations":[{"start":{"line":479,"column":9},"end":{"line":479,"column":9}},{"start":{"line":479,"column":9},"end":{"line":479,"column":9}}]}},"code":["var extend = require('extend');","var Request = require('./Request');","var utils = require('./Utils');","var JWTUtils = require('./JWTUtils');","","/**"," * Create a new upload wrapper.  Manages the entire upload of a file."," * @class"," * @param   {object}  options                   Configuration options to override the defaults."," * @param   {object}  options.api               A reference to the parent API instance."," * @param   {object}  options.file              The file to upload."," * @param   {object}  options.upload            REST endpoint for creating an input."," * @param   {object}  options.sign              REST endpoint for signing a blob before upload."," * @param   {object}  options.uploadComplete    REST endpoint to notify the API that the upload is complete."," * @param   {object}  options.uploadAbort       REST endpoint to abort the upload."," */","function Upload (options) {","","  this.defaults = {","    api: null,","    file: null,","    upload: '/encoding/inputs/<%=id%>/upload<%=method%>',","    sign: '/encoding/inputs/<%=id%>/upload/sign<%=method%>',","    uploadComplete: '/encoding/inputs/<%=id%>/upload/complete',","    uploadAbort: '/encoding/inputs/<%=id%>/upload/abort<%=method%>',","    uploadMethods: {","      param: '?type=',","      singlePart: 'amazon',","      multiPart: 'amazonMP'","    }","  };","","  // Create a config object by extending the defaults with the pass options.","  this.config = extend(true, {}, this.defaults, options);","","  this.api = this.config.api;","  this.file = this.config.file;","","  this.chunks = [];","  this.chunkSize = 0;","  this.chunkCount = 0;","  this.chunksComplete = 0;","  this.uploadedBytes = 0;","","  this.aborted = false;","  this.paused = false;","  this.created = false;","  this.initialized = false;","","  this.fileRecord = {","    filename: this.file.name,","    type: this.file.type,","    size: this.file.size,","    method: this._checkMultipart(this.file)","  };","","};","","/**"," * Register a function to execute when a chunk completes uploading."," * @param  {Function} callback A callback to execute when progress is made."," */","Upload.prototype.progress = function (callback) {","  this.config.progress = callback.bind(this);","};","","/**"," * Create a new input record and upload the files to amazon."," * @return  {Promise}         A promise which resolves when the new input record is created and uploaded."," */","Upload.prototype.save = function () {","  return this._create(this.fileRecord)","    .then(this._initialize.bind(this))","    .then(this._prepareUpload.bind(this));","};","","/**"," * Call the progress callback and pass the current progress percentage."," * @private"," * @param  {number} message Current progress percentage."," */","Upload.prototype._updateProgress = function (percent, chunkSize) {","","  if (!this.config.progress) {","    return;","  }","","  this.config.progress.call(this, percent, chunkSize);","};","","/**"," * Create a new input record."," * @private"," * @param   {object}  record  A JSON object representing the input record to create."," * @return  {Promise}         A promise which resolves when the new input record is created."," */","Upload.prototype._create = function (record) {","","  if (this.aborted) {","    return utils.promisify(false, 'upload aborted');","  }","","  return this.api.inputs.add([record]).then(this._createSuccess.bind(this));","};","","/**"," * Return the data object from the response."," * @private"," * @param  {JSON}   response  JSON response containing the new input record id."," * @return {string}           new input record id."," */","Upload.prototype._createSuccess = function (response) {","","  this.created = true;","","  this._updateProgress(0);","  this.fileRecord.id = response.data[0].id;","","  return this.fileRecord.id;","};","","/**"," * Initializes an Input for upload"," * @private"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._initialize = function () {","","  var url;","  var tokens;","  var signing = '';","","  if (this.aborted) {","    return utils.promisify(false, 'upload aborted');","  }","","  if (!this.fileRecord.method) {","    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;","  }","","  tokens = {","    id: this.fileRecord.id,","    method: signing","  };","","  url = utils.parseTokens(this.api.config.host + this.config.upload, tokens);","","  return new Request({","    url: url,","    token: this.api.getToken(),","    method: 'POST',","    data: this.fileRecord","  }).then(this._initializeComplete.bind(this));","","};","","/**"," * Store the information returned from the initialize request."," * @private"," */","Upload.prototype._initializeComplete = function (response) {","  this.initialized = true;","  this.fileRecord.key = response.data.key;","  this.fileRecord.uploadId = response.data.uploadId;","  this.chunkSize = response.data.pieceSize;","  this.chunkCount = response.data.pieceCount;","};","","/**"," * Setup the upload depending on its type, single or multi part."," * @return {Promise} A promise which resolves when all of the pieces have completed uploading."," */","Upload.prototype._prepareUpload = function () {","  if (!this.fileRecord.method) {","    // Singlepart.","    return this._uploadFile()","      .then(this._onCompleteUpload.bind(this));","  } else {","    // Multipart.","    return this._createChunks()","      .then(this._completeUpload.bind(this));","  }","};","","/**"," * Break a file into blobs and create a chunk object for each piece."," * @private"," * @return {Promise} A promise which resolves when all of the pieces have completed uploading."," */","Upload.prototype._createChunks = function () {","  var sliceMethod = this._getSliceMethod(this.file);","  var i, blob, chunk,","    chunkPromises = [];","","  if (this.aborted) {","    this.abort();","    return utils.promisify(false, 'upload aborted');","  }","","  for (i = 0; i < this.chunkCount; i++) {","","    blob = this.file[sliceMethod](i * this.chunkSize, (i + 1) * this.chunkSize);","","    chunk = {","      partNumber: i + 1,","      data: blob","    };","","    this.chunks.push(chunk);","","    chunkPromises.push(this._uploadChunk.bind(this, chunk));","","  }","","  // Store a reference for pausing and resuming.","  this.currentUpload = utils.series(chunkPromises, this.paused);","","  return this.currentUpload;","};","","/**"," * Create a promise chain for each chunk to be uploaded."," * @private"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._uploadChunk = function (chunk) {","  return this._signUpload(chunk)","    .then(this._sendUpload.bind(this, chunk))","    .then(this._completeChunk.bind(this, chunk));","};","","/**"," * Create a promise chain for a single part file upload."," * @param  {file}   file    A file reference to upload."," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._uploadFile = function () {","  var chunk = {","    data: this.file","  };","","  return this._signUpload(chunk)","    .then(this._sendUpload.bind(this, chunk))","    .then(this._updateProgress.bind(this, 100));","};","","/**"," * Make a request and sign the chunk to be uploaded."," * @private"," * @param  {object}   chunk           Information about the chunk to be uploaded."," * @return {Promise}                  A promise which resolves when the request is complete."," */","Upload.prototype._signUpload = function (chunk) {","  var url;","  var signing = '';","  var headers = {};","","  // Set the part number for the current chunk.","  if (chunk.partNumber) {","    this.fileRecord.partNumber = chunk.partNumber;","  }","","  headers['Content-Type'] = 'multipart/form-data';","","  if (!this.fileRecord.method) {","    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;","  }","","  url = utils.parseTokens(this.api.config.host + this.config.sign, {","    id: this.fileRecord.id,","    method: signing","  });","","  return new Request({","    url: url,","    token: this.api.getToken(),","    method: 'POST',","    headers: headers,","    data: this.fileRecord","  });","};","","/**"," * Send the upload to the server."," * @private"," * @param   {object} upload  An object representing the upload to send to the server."," * @return  {Promise}       A promise which resolves when the request is complete."," */","Upload.prototype._sendUpload = function (upload, response) {","  var headers = {};","","  var formData = new FormData();","  formData.append('file', upload.data);","","  // Set the proper headers to send with the file.","  headers['Content-Type'] = 'multipart/form-data';","  headers['Authorization'] = response.data.authHeader;","  headers['x-amz-date'] = response.data.dateHeader;","","  return new Request({","    url: response.data.url,","    method: 'PUT',","    headers: headers,","    data: formData","  });","};","","/**"," *  Executed when a chunk is finished uploading."," *  @private"," */","Upload.prototype._completeChunk = function (chunk) {","  var progress;","","  this.chunksComplete++;","  chunk.complete = true;","","  this.uploadedBytes += chunk.data.size;","","  progress = this.uploadedBytes / this.fileRecord.size;","  progress = progress * 100;","  progress = Math.round(progress);","","  this._updateProgress(progress, chunk.data.size);","};","","/**"," * Notify the server that the upload is complete."," *"," * @private"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._completeUpload = function () {","  var url;","  var tokens;","","  if (this.aborted) {","    this.abort();","    return utils.promisify(false, 'upload aborted');","  }","","  tokens = {","    id: this.fileRecord.id","  };","","  url = utils.parseTokens(this.api.config.host + this.config.uploadComplete, tokens);","","  return new Request({","    url: url,","    token: this.api.getToken(),","    method: 'POST',","    data: this.fileRecord","  }).then(this._onCompleteUpload.bind(this));","};","","/**"," * Return the id for the current file record."," * @private"," * @return {string} ID for the input record that was created."," */","Upload.prototype._onCompleteUpload = function () {","  this.currentUpload = null;","  return this.fileRecord.id;","};","","/**"," * Aborts an input upload"," *"," * @param {boolean} async A flag to indicate whether or not the request to delete the input should be async."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype.abort = function (async) {","  var url;","  var tokens;","  var signing = '';","","  if (typeof async === 'undefined') {","    async = true;","  }","","  this.aborted = true;","","  // If initialize hasn't been called yet there is no need to abort the upload as it doesn't","  // exist yet.","  if (!this.initialized) {","","    if (this.created) {","      // If the input has been created simply return early with a","      // promise to delete the created input record.","      return this.api.inputs.delete(this.fileRecord.id, async);","    } else {","      // Resolve as a successful promise. This case would be fulfilled when an upload","      // has been created but save() hasn't yet been called.","      return utils.promisify(true);","    }","","  }","","  if (this.currentUpload) {","    this.currentUpload.pause();","    this.currentUpload = null;","  }","","  if (!this.fileRecord.method) {","    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;","  }","","  tokens = {","    id: this.fileRecord.id,","    method: signing","  };","","  url = utils.parseTokens(this.api.config.host + this.config.uploadAbort, tokens);","","  return new Request({","    url: url,","    async: async,","    token: this.api.getToken(),","    method: 'POST',","    data: this.fileRecord","  }).then(this._abortComplete.bind(this, async));","};","","/**"," * Delete the input that was created."," * @private"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._abortComplete = function (async) {","  return this.api.inputs.delete(this.fileRecord.id, async);","};","","/**"," * Pause the current upload."," */","Upload.prototype.pause = function () {","  this.paused = true;","  if (this.currentUpload) {","    this.currentUpload.pause();","  }","};","","/**"," * Resume the current upload."," */","Upload.prototype.resume = function () {","  this.paused = false;","  if (this.currentUpload) {","    this.currentUpload.resume();","  }","};","","/**"," * Check the file size to determine if it should be a multipart upload, returns false for singlepart uploads."," * @private"," * @param  {file}   file  The file to evaluate."," * @return {boolean}      True if the file will be uploading using mutlipart upload."," */","Upload.prototype._checkMultipart = function (file) {","  if (!file) {","    return;","  }","","  return (file.size <= (5 * 1024 * 1024) ? false : true);","};","","/**"," * Function that determines the slice method to be used"," * @private"," * @param {object} file - The file object you wish to determine the slice method for"," * @return {string} sliceMethod - The slice method to use."," */","Upload.prototype._getSliceMethod = function (file) {","  var sliceMethod;","","  if ('mozSlice' in file) {","    sliceMethod = 'mozSlice';","  } else if ('webkitSlice' in file) {","    sliceMethod = 'webkitSlice';","  } else {","    sliceMethod = 'slice';","  }","","  return sliceMethod;","};","","module.exports = Upload;",""]};
	}
	__cov_mNy2JPCa8gr4H$6GJv1YUg = __cov_mNy2JPCa8gr4H$6GJv1YUg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Uploader.js'];
	__cov_mNy2JPCa8gr4H$6GJv1YUg.s['1']++;var extend=__webpack_require__(2);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['2']++;var Request=__webpack_require__(3);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['3']++;var utils=__webpack_require__(9);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['4']++;var JWTUtils=__webpack_require__(8);function Upload(options){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['1']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['6']++;this.defaults={api:null,file:null,upload:'/encoding/inputs/<%=id%>/upload<%=method%>',sign:'/encoding/inputs/<%=id%>/upload/sign<%=method%>',uploadComplete:'/encoding/inputs/<%=id%>/upload/complete',uploadAbort:'/encoding/inputs/<%=id%>/upload/abort<%=method%>',uploadMethods:{param:'?type=',singlePart:'amazon',multiPart:'amazonMP'}};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['7']++;this.config=extend(true,{},this.defaults,options);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['8']++;this.api=this.config.api;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['9']++;this.file=this.config.file;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['10']++;this.chunks=[];__cov_mNy2JPCa8gr4H$6GJv1YUg.s['11']++;this.chunkSize=0;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['12']++;this.chunkCount=0;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['13']++;this.chunksComplete=0;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['14']++;this.uploadedBytes=0;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['15']++;this.aborted=false;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['16']++;this.paused=false;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['17']++;this.created=false;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['18']++;this.initialized=false;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['19']++;this.fileRecord={filename:this.file.name,type:this.file.type,size:this.file.size,method:this._checkMultipart(this.file)};};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['20']++;Upload.prototype.progress=function(callback){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['2']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['21']++;this.config.progress=callback.bind(this);};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['22']++;Upload.prototype.save=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['3']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['23']++;return this._create(this.fileRecord).then(this._initialize.bind(this)).then(this._prepareUpload.bind(this));};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['24']++;Upload.prototype._updateProgress=function(percent,chunkSize){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['4']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['25']++;if(!this.config.progress){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['1'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['26']++;return;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['1'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['27']++;this.config.progress.call(this,percent,chunkSize);};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['28']++;Upload.prototype._create=function(record){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['5']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['29']++;if(this.aborted){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['2'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['30']++;return utils.promisify(false,'upload aborted');}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['2'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['31']++;return this.api.inputs.add([record]).then(this._createSuccess.bind(this));};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['32']++;Upload.prototype._createSuccess=function(response){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['6']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['33']++;this.created=true;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['34']++;this._updateProgress(0);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['35']++;this.fileRecord.id=response.data[0].id;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['36']++;return this.fileRecord.id;};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['37']++;Upload.prototype._initialize=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['7']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['38']++;var url;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['39']++;var tokens;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['40']++;var signing='';__cov_mNy2JPCa8gr4H$6GJv1YUg.s['41']++;if(this.aborted){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['3'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['42']++;return utils.promisify(false,'upload aborted');}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['3'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['43']++;if(!this.fileRecord.method){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['4'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['44']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['4'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['45']++;tokens={id:this.fileRecord.id,method:signing};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['46']++;url=utils.parseTokens(this.api.config.host+this.config.upload,tokens);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['47']++;return new Request({url:url,token:this.api.getToken(),method:'POST',data:this.fileRecord}).then(this._initializeComplete.bind(this));};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['48']++;Upload.prototype._initializeComplete=function(response){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['8']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['49']++;this.initialized=true;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['50']++;this.fileRecord.key=response.data.key;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['51']++;this.fileRecord.uploadId=response.data.uploadId;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['52']++;this.chunkSize=response.data.pieceSize;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['53']++;this.chunkCount=response.data.pieceCount;};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['54']++;Upload.prototype._prepareUpload=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['9']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['55']++;if(!this.fileRecord.method){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['5'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['56']++;return this._uploadFile().then(this._onCompleteUpload.bind(this));}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['5'][1]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['57']++;return this._createChunks().then(this._completeUpload.bind(this));}};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['58']++;Upload.prototype._createChunks=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['10']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['59']++;var sliceMethod=this._getSliceMethod(this.file);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['60']++;var i,blob,chunk,chunkPromises=[];__cov_mNy2JPCa8gr4H$6GJv1YUg.s['61']++;if(this.aborted){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['6'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['62']++;this.abort();__cov_mNy2JPCa8gr4H$6GJv1YUg.s['63']++;return utils.promisify(false,'upload aborted');}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['6'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['64']++;for(i=0;i<this.chunkCount;i++){__cov_mNy2JPCa8gr4H$6GJv1YUg.s['65']++;blob=this.file[sliceMethod](i*this.chunkSize,(i+1)*this.chunkSize);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['66']++;chunk={partNumber:i+1,data:blob};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['67']++;this.chunks.push(chunk);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['68']++;chunkPromises.push(this._uploadChunk.bind(this,chunk));}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['69']++;this.currentUpload=utils.series(chunkPromises,this.paused);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['70']++;return this.currentUpload;};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['71']++;Upload.prototype._uploadChunk=function(chunk){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['11']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['72']++;return this._signUpload(chunk).then(this._sendUpload.bind(this,chunk)).then(this._completeChunk.bind(this,chunk));};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['73']++;Upload.prototype._uploadFile=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['12']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['74']++;var chunk={data:this.file};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['75']++;return this._signUpload(chunk).then(this._sendUpload.bind(this,chunk)).then(this._updateProgress.bind(this,100));};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['76']++;Upload.prototype._signUpload=function(chunk){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['13']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['77']++;var url;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['78']++;var signing='';__cov_mNy2JPCa8gr4H$6GJv1YUg.s['79']++;var headers={};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['80']++;if(chunk.partNumber){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['7'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['81']++;this.fileRecord.partNumber=chunk.partNumber;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['7'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['82']++;headers['Content-Type']='multipart/form-data';__cov_mNy2JPCa8gr4H$6GJv1YUg.s['83']++;if(!this.fileRecord.method){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['8'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['84']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['8'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['85']++;url=utils.parseTokens(this.api.config.host+this.config.sign,{id:this.fileRecord.id,method:signing});__cov_mNy2JPCa8gr4H$6GJv1YUg.s['86']++;return new Request({url:url,token:this.api.getToken(),method:'POST',headers:headers,data:this.fileRecord});};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['87']++;Upload.prototype._sendUpload=function(upload,response){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['14']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['88']++;var headers={};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['89']++;var formData=new FormData();__cov_mNy2JPCa8gr4H$6GJv1YUg.s['90']++;formData.append('file',upload.data);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['91']++;headers['Content-Type']='multipart/form-data';__cov_mNy2JPCa8gr4H$6GJv1YUg.s['92']++;headers['Authorization']=response.data.authHeader;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['93']++;headers['x-amz-date']=response.data.dateHeader;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['94']++;return new Request({url:response.data.url,method:'PUT',headers:headers,data:formData});};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['95']++;Upload.prototype._completeChunk=function(chunk){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['15']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['96']++;var progress;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['97']++;this.chunksComplete++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['98']++;chunk.complete=true;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['99']++;this.uploadedBytes+=chunk.data.size;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['100']++;progress=this.uploadedBytes/this.fileRecord.size;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['101']++;progress=progress*100;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['102']++;progress=Math.round(progress);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['103']++;this._updateProgress(progress,chunk.data.size);};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['104']++;Upload.prototype._completeUpload=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['16']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['105']++;var url;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['106']++;var tokens;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['107']++;if(this.aborted){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['9'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['108']++;this.abort();__cov_mNy2JPCa8gr4H$6GJv1YUg.s['109']++;return utils.promisify(false,'upload aborted');}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['9'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['110']++;tokens={id:this.fileRecord.id};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['111']++;url=utils.parseTokens(this.api.config.host+this.config.uploadComplete,tokens);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['112']++;return new Request({url:url,token:this.api.getToken(),method:'POST',data:this.fileRecord}).then(this._onCompleteUpload.bind(this));};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['113']++;Upload.prototype._onCompleteUpload=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['17']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['114']++;this.currentUpload=null;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['115']++;return this.fileRecord.id;};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['116']++;Upload.prototype.abort=function(async){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['18']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['117']++;var url;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['118']++;var tokens;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['119']++;var signing='';__cov_mNy2JPCa8gr4H$6GJv1YUg.s['120']++;if(typeof async==='undefined'){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['10'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['121']++;async=true;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['10'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['122']++;this.aborted=true;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['123']++;if(!this.initialized){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['11'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['124']++;if(this.created){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['12'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['125']++;return this.api.inputs['delete'](this.fileRecord.id,async);}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['12'][1]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['126']++;return utils.promisify(true);}}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['11'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['127']++;if(this.currentUpload){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['13'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['128']++;this.currentUpload.pause();__cov_mNy2JPCa8gr4H$6GJv1YUg.s['129']++;this.currentUpload=null;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['13'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['130']++;if(!this.fileRecord.method){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['14'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['131']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['14'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['132']++;tokens={id:this.fileRecord.id,method:signing};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['133']++;url=utils.parseTokens(this.api.config.host+this.config.uploadAbort,tokens);__cov_mNy2JPCa8gr4H$6GJv1YUg.s['134']++;return new Request({url:url,async:async,token:this.api.getToken(),method:'POST',data:this.fileRecord}).then(this._abortComplete.bind(this,async));};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['135']++;Upload.prototype._abortComplete=function(async){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['19']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['136']++;return this.api.inputs['delete'](this.fileRecord.id,async);};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['137']++;Upload.prototype.pause=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['20']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['138']++;this.paused=true;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['139']++;if(this.currentUpload){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['15'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['140']++;this.currentUpload.pause();}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['15'][1]++;}};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['141']++;Upload.prototype.resume=function(){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['21']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['142']++;this.paused=false;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['143']++;if(this.currentUpload){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['16'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['144']++;this.currentUpload.resume();}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['16'][1]++;}};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['145']++;Upload.prototype._checkMultipart=function(file){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['22']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['146']++;if(!file){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['17'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['147']++;return;}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['17'][1]++;}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['148']++;return file.size<=5*1024*1024?(__cov_mNy2JPCa8gr4H$6GJv1YUg.b['18'][0]++,false):(__cov_mNy2JPCa8gr4H$6GJv1YUg.b['18'][1]++,true);};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['149']++;Upload.prototype._getSliceMethod=function(file){__cov_mNy2JPCa8gr4H$6GJv1YUg.f['23']++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['150']++;var sliceMethod;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['151']++;if('mozSlice'in file){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['19'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['152']++;sliceMethod='mozSlice';}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['19'][1]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['153']++;if('webkitSlice'in file){__cov_mNy2JPCa8gr4H$6GJv1YUg.b['20'][0]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['154']++;sliceMethod='webkitSlice';}else{__cov_mNy2JPCa8gr4H$6GJv1YUg.b['20'][1]++;__cov_mNy2JPCa8gr4H$6GJv1YUg.s['155']++;sliceMethod='slice';}}__cov_mNy2JPCa8gr4H$6GJv1YUg.s['156']++;return sliceMethod;};__cov_mNy2JPCa8gr4H$6GJv1YUg.s['157']++;module.exports=Upload;


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	var __cov_UHGIFLJINhErqQ5AiFYu$A = (Function('return this'))();
	if (!__cov_UHGIFLJINhErqQ5AiFYu$A.__coverage__) { __cov_UHGIFLJINhErqQ5AiFYu$A.__coverage__ = {}; }
	__cov_UHGIFLJINhErqQ5AiFYu$A = __cov_UHGIFLJINhErqQ5AiFYu$A.__coverage__;
	if (!(__cov_UHGIFLJINhErqQ5AiFYu$A['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Cache.js'])) {
	   __cov_UHGIFLJINhErqQ5AiFYu$A['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Cache.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Cache.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Cache","line":6,"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":49}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":33,"column":27},"end":{"line":33,"column":47}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":45}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":23},"end":{"line":88,"column":50}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":126,"column":23},"end":{"line":126,"column":57}}},"7":{"name":"(anonymous_7)","line":184,"loc":{"start":{"line":187,"column":28},"end":{"line":187,"column":63}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":5,"column":2},"end":{"line":5,"column":27}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":43}},"4":{"start":{"line":14,"column":0},"end":{"line":26,"column":2}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":26}},"6":{"start":{"line":18,"column":2},"end":{"line":24,"column":3}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"11":{"start":{"line":33,"column":0},"end":{"line":61,"column":2}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":11}},"13":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"14":{"start":{"line":36,"column":2},"end":{"line":36,"column":13}},"15":{"start":{"line":38,"column":2},"end":{"line":58,"column":3}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":49}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":28}},"18":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"19":{"start":{"line":44,"column":6},"end":{"line":44,"column":19}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"21":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"22":{"start":{"line":51,"column":6},"end":{"line":51,"column":47}},"23":{"start":{"line":52,"column":6},"end":{"line":52,"column":19}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"25":{"start":{"line":60,"column":2},"end":{"line":60,"column":15}},"26":{"start":{"line":68,"column":0},"end":{"line":79,"column":2}},"27":{"start":{"line":69,"column":2},"end":{"line":69,"column":20}},"28":{"start":{"line":71,"column":2},"end":{"line":76,"column":3}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":45}},"30":{"start":{"line":75,"column":4},"end":{"line":75,"column":19}},"31":{"start":{"line":78,"column":2},"end":{"line":78,"column":16}},"32":{"start":{"line":88,"column":0},"end":{"line":108,"column":2}},"33":{"start":{"line":89,"column":2},"end":{"line":89,"column":20}},"34":{"start":{"line":90,"column":2},"end":{"line":90,"column":16}},"35":{"start":{"line":91,"column":2},"end":{"line":91,"column":17}},"36":{"start":{"line":93,"column":2},"end":{"line":105,"column":3}},"37":{"start":{"line":95,"column":4},"end":{"line":95,"column":45}},"38":{"start":{"line":96,"column":4},"end":{"line":96,"column":23}},"39":{"start":{"line":98,"column":4},"end":{"line":98,"column":38}},"40":{"start":{"line":100,"column":4},"end":{"line":100,"column":54}},"41":{"start":{"line":104,"column":4},"end":{"line":104,"column":19}},"42":{"start":{"line":107,"column":2},"end":{"line":107,"column":16}},"43":{"start":{"line":126,"column":0},"end":{"line":176,"column":2}},"44":{"start":{"line":127,"column":2},"end":{"line":127,"column":48}},"45":{"start":{"line":128,"column":2},"end":{"line":128,"column":29}},"46":{"start":{"line":129,"column":2},"end":{"line":129,"column":41}},"47":{"start":{"line":130,"column":2},"end":{"line":130,"column":18}},"48":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"49":{"start":{"line":133,"column":4},"end":{"line":133,"column":33}},"50":{"start":{"line":136,"column":2},"end":{"line":136,"column":33}},"51":{"start":{"line":137,"column":2},"end":{"line":137,"column":39}},"52":{"start":{"line":139,"column":2},"end":{"line":142,"column":3}},"53":{"start":{"line":141,"column":4},"end":{"line":141,"column":16}},"54":{"start":{"line":145,"column":2},"end":{"line":164,"column":3}},"55":{"start":{"line":146,"column":4},"end":{"line":146,"column":29}},"56":{"start":{"line":149,"column":4},"end":{"line":154,"column":5}},"57":{"start":{"line":150,"column":6},"end":{"line":153,"column":7}},"58":{"start":{"line":152,"column":8},"end":{"line":152,"column":17}},"59":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"60":{"start":{"line":158,"column":6},"end":{"line":158,"column":16}},"61":{"start":{"line":162,"column":4},"end":{"line":162,"column":36}},"62":{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},"63":{"start":{"line":168,"column":4},"end":{"line":171,"column":5}},"64":{"start":{"line":169,"column":6},"end":{"line":169,"column":27}},"65":{"start":{"line":170,"column":6},"end":{"line":170,"column":38}},"66":{"start":{"line":174,"column":2},"end":{"line":174,"column":14}},"67":{"start":{"line":187,"column":0},"end":{"line":209,"column":2}},"68":{"start":{"line":189,"column":2},"end":{"line":189,"column":8}},"69":{"start":{"line":190,"column":2},"end":{"line":190,"column":33}},"70":{"start":{"line":191,"column":2},"end":{"line":191,"column":11}},"71":{"start":{"line":192,"column":2},"end":{"line":192,"column":20}},"72":{"start":{"line":193,"column":2},"end":{"line":193,"column":19}},"73":{"start":{"line":195,"column":2},"end":{"line":205,"column":3}},"74":{"start":{"line":196,"column":4},"end":{"line":196,"column":20}},"75":{"start":{"line":198,"column":4},"end":{"line":198,"column":53}},"76":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"77":{"start":{"line":202,"column":6},"end":{"line":202,"column":27}},"78":{"start":{"line":207,"column":2},"end":{"line":207,"column":17}},"79":{"start":{"line":211,"column":0},"end":{"line":211,"column":23}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":131,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"4":{"line":138,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"5":{"line":148,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"6":{"line":149,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"8":{"line":165,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"9":{"line":198,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]}},"code":["/**"," * A management layer for storing app cache in local storage."," */","var Cache = function (cacheAge) {","  this.cacheAge = cacheAge;","  this.enabled = this._checkCacheSupport();","};","","/**"," * Return true if localStorage is supported."," * @private"," * @return {boolean} True if localStorage is supported."," */","Cache.prototype._checkCacheSupport = function () {","","  var support = 'support';","","  try {","    window.localStorage.setItem(support, support);","    window.localStorage.removeItem(support);","    return true;","  } catch (e) {","    return false;","  }","","};","","/**"," * Retrieve the cached result for the provided cacheKey."," * @param  {string}   cacheKey  Key associated with the cached result."," * @return {object}             Parse results object."," */","Cache.prototype.retrieve = function (cacheKey) {","  var data;","  var value = null;","  var expiry;","","  try {","","    data = window.localStorage.getItem(cacheKey);","    data = JSON.parse(data);","","    if (!data) {","      return value;","    }","","    value = data.value;","","    if (data.expiry < Date.now()) {","      // Cache is expired;","      window.localStorage.removeItem(cacheKey);","      value = null;","    }","","  } catch (error) {","    // Silent capture so that caching never gets in the way of returning a result.","    value = null;","  }","","  return value;","};","","/**"," * Remove a result from the cache."," * @param  {string}   cacheKey  Key associated with the cached result."," * @return {boolean}            A boolean indicating success of the removal."," */","Cache.prototype.remove = function (cacheKey) {","  var result = true;","","  try {","    window.localStorage.removeItem(cacheKey);","  } catch (error) {","    // Silent capture so that caching never gets in the way of returning a result.","    result = false;","  }","","  return result;","};","","/**"," * Save the new result with its expiry date."," * @param  {string}   cacheKey Unique cache key for the request."," * @param  {number}   expiry   Unix timestamp for the expiry."," * @param  {object}   result   Object to be cached."," * @return {boolean}            A boolean indicating success of the save."," */","Cache.prototype.save = function (cacheKey, value) {","  var result = true;","  var data = {};","  var JSONResult;","","  try {","","    data.expiry = Date.now() + this.cacheAge;","    data.value = value;","","    JSONResult = JSON.stringify(data);","","    window.localStorage.setItem(cacheKey, JSONResult);","","  } catch (error) {","    // Silent capture so that caching never gets in the way of returning a result.","    result = false;","  }","","  return result;","};","","/**"," * Return an object representing the differences between the provided object and the cached object."," * @example"," * //'cachedObject' = {id: '12345'};"," * cache.diff('cachedObject', {title: 'test'});"," * // returns {title: 'test'}"," * @example"," * //'cachedObject' = {id: '12345', title: 'test'};"," * cache.diff('cachedObject', {title: 'test2'});"," * // returns {title: 'test2'}"," *"," * @param  {string} cacheKey  Cachekey of the object to compare against."," * @param  {object} item      Object to compare against the cached object."," * @param  {array}  forced    An array of properties to be returned in the resulting object regardless of difference."," * @return {object}           An object containing the differences."," */","Cache.prototype.diff = function (cacheKey, item, forced) {","  var property, properties, propertiesLength, i;","  var force, forcedLength, n;","  var original = this.retrieve(cacheKey);","  var diff = null;","","  if (forced) {","    forcedLength = forced.length;","  }","","  properties = Object.keys(item);","  propertiesLength = properties.length;","","  if (!original) {","    // return the compare object if the original item wasn't found.","    return item;","  }","","  // Walk the object and compare the properties.","  for (i = 0; i < propertiesLength; i++) {","    property = properties[i];","","    // Check the values if both objects have the property.","    if (original.hasOwnProperty(property)) {","      if (item[property] === original[property]) {","        // If the values are the same we don't need to add it to the diff so continue.","        continue;","      }","    }","","    // If the diff item is still null we need to create a new object to store the properties in.","    if (!diff) {","      diff = {};","    }","","    // If we've made it this far the property is either a new one, or the item doesn't match.","    diff[property] = item[property];","","  }","","  // As long as changes were found append the forced properties.","  if (diff) {","    for (n = 0; n < forcedLength; n++) {","      property = forced[n];","      diff[property] = item[property];","    }","  }","","  return diff;","","};","","/**"," * Return an object representing the differences between the provided objects and the cached object."," * Similar to diff, but accepts an array of objects."," *"," * @param  {string} cacheKey  Property on the provided objects that represents the cache key."," * @param  {object} item      Object to compare against the cached object."," * @param  {array}  forced    An array of properties to be returned in the resulting object regardless of difference."," * @return {object}           An object containing the differences."," */","Cache.prototype.diffArray = function (cacheKey, items, forced) {","","  var i;","  var itemsLength = items.length;","  var item;","  var result = null;","  var results = [];","","  for (i = 0; i < itemsLength; i++) {","    item = items[i];","","    result = this.diff(item[cacheKey], item, forced);","","    // Only add it to the result set if changes were found.","    if (result !== null) {","      results.push(result);","    }","","  }","","  return results;","","};","","module.exports = Cache;",""]};
	}
	__cov_UHGIFLJINhErqQ5AiFYu$A = __cov_UHGIFLJINhErqQ5AiFYu$A['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/Cache.js'];
	__cov_UHGIFLJINhErqQ5AiFYu$A.s['1']++;var Cache=function Cache(cacheAge){__cov_UHGIFLJINhErqQ5AiFYu$A.f['1']++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['2']++;this.cacheAge=cacheAge;__cov_UHGIFLJINhErqQ5AiFYu$A.s['3']++;this.enabled=this._checkCacheSupport();};__cov_UHGIFLJINhErqQ5AiFYu$A.s['4']++;Cache.prototype._checkCacheSupport=function(){__cov_UHGIFLJINhErqQ5AiFYu$A.f['2']++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['5']++;var support='support';__cov_UHGIFLJINhErqQ5AiFYu$A.s['6']++;try{__cov_UHGIFLJINhErqQ5AiFYu$A.s['7']++;window.localStorage.setItem(support,support);__cov_UHGIFLJINhErqQ5AiFYu$A.s['8']++;window.localStorage.removeItem(support);__cov_UHGIFLJINhErqQ5AiFYu$A.s['9']++;return true;}catch(e){__cov_UHGIFLJINhErqQ5AiFYu$A.s['10']++;return false;}};__cov_UHGIFLJINhErqQ5AiFYu$A.s['11']++;Cache.prototype.retrieve=function(cacheKey){__cov_UHGIFLJINhErqQ5AiFYu$A.f['3']++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['12']++;var data;__cov_UHGIFLJINhErqQ5AiFYu$A.s['13']++;var value=null;__cov_UHGIFLJINhErqQ5AiFYu$A.s['14']++;var expiry;__cov_UHGIFLJINhErqQ5AiFYu$A.s['15']++;try{__cov_UHGIFLJINhErqQ5AiFYu$A.s['16']++;data=window.localStorage.getItem(cacheKey);__cov_UHGIFLJINhErqQ5AiFYu$A.s['17']++;data=JSON.parse(data);__cov_UHGIFLJINhErqQ5AiFYu$A.s['18']++;if(!data){__cov_UHGIFLJINhErqQ5AiFYu$A.b['1'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['19']++;return value;}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['1'][1]++;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['20']++;value=data.value;__cov_UHGIFLJINhErqQ5AiFYu$A.s['21']++;if(data.expiry<Date.now()){__cov_UHGIFLJINhErqQ5AiFYu$A.b['2'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['22']++;window.localStorage.removeItem(cacheKey);__cov_UHGIFLJINhErqQ5AiFYu$A.s['23']++;value=null;}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['2'][1]++;}}catch(error){__cov_UHGIFLJINhErqQ5AiFYu$A.s['24']++;value=null;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['25']++;return value;};__cov_UHGIFLJINhErqQ5AiFYu$A.s['26']++;Cache.prototype.remove=function(cacheKey){__cov_UHGIFLJINhErqQ5AiFYu$A.f['4']++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['27']++;var result=true;__cov_UHGIFLJINhErqQ5AiFYu$A.s['28']++;try{__cov_UHGIFLJINhErqQ5AiFYu$A.s['29']++;window.localStorage.removeItem(cacheKey);}catch(error){__cov_UHGIFLJINhErqQ5AiFYu$A.s['30']++;result=false;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['31']++;return result;};__cov_UHGIFLJINhErqQ5AiFYu$A.s['32']++;Cache.prototype.save=function(cacheKey,value){__cov_UHGIFLJINhErqQ5AiFYu$A.f['5']++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['33']++;var result=true;__cov_UHGIFLJINhErqQ5AiFYu$A.s['34']++;var data={};__cov_UHGIFLJINhErqQ5AiFYu$A.s['35']++;var JSONResult;__cov_UHGIFLJINhErqQ5AiFYu$A.s['36']++;try{__cov_UHGIFLJINhErqQ5AiFYu$A.s['37']++;data.expiry=Date.now()+this.cacheAge;__cov_UHGIFLJINhErqQ5AiFYu$A.s['38']++;data.value=value;__cov_UHGIFLJINhErqQ5AiFYu$A.s['39']++;JSONResult=JSON.stringify(data);__cov_UHGIFLJINhErqQ5AiFYu$A.s['40']++;window.localStorage.setItem(cacheKey,JSONResult);}catch(error){__cov_UHGIFLJINhErqQ5AiFYu$A.s['41']++;result=false;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['42']++;return result;};__cov_UHGIFLJINhErqQ5AiFYu$A.s['43']++;Cache.prototype.diff=function(cacheKey,item,forced){__cov_UHGIFLJINhErqQ5AiFYu$A.f['6']++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['44']++;var property,properties,propertiesLength,i;__cov_UHGIFLJINhErqQ5AiFYu$A.s['45']++;var force,forcedLength,n;__cov_UHGIFLJINhErqQ5AiFYu$A.s['46']++;var original=this.retrieve(cacheKey);__cov_UHGIFLJINhErqQ5AiFYu$A.s['47']++;var diff=null;__cov_UHGIFLJINhErqQ5AiFYu$A.s['48']++;if(forced){__cov_UHGIFLJINhErqQ5AiFYu$A.b['3'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['49']++;forcedLength=forced.length;}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['3'][1]++;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['50']++;properties=Object.keys(item);__cov_UHGIFLJINhErqQ5AiFYu$A.s['51']++;propertiesLength=properties.length;__cov_UHGIFLJINhErqQ5AiFYu$A.s['52']++;if(!original){__cov_UHGIFLJINhErqQ5AiFYu$A.b['4'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['53']++;return item;}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['4'][1]++;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['54']++;for(i=0;i<propertiesLength;i++){__cov_UHGIFLJINhErqQ5AiFYu$A.s['55']++;property=properties[i];__cov_UHGIFLJINhErqQ5AiFYu$A.s['56']++;if(original.hasOwnProperty(property)){__cov_UHGIFLJINhErqQ5AiFYu$A.b['5'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['57']++;if(item[property]===original[property]){__cov_UHGIFLJINhErqQ5AiFYu$A.b['6'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['58']++;continue;}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['6'][1]++;}}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['5'][1]++;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['59']++;if(!diff){__cov_UHGIFLJINhErqQ5AiFYu$A.b['7'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['60']++;diff={};}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['7'][1]++;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['61']++;diff[property]=item[property];}__cov_UHGIFLJINhErqQ5AiFYu$A.s['62']++;if(diff){__cov_UHGIFLJINhErqQ5AiFYu$A.b['8'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['63']++;for(n=0;n<forcedLength;n++){__cov_UHGIFLJINhErqQ5AiFYu$A.s['64']++;property=forced[n];__cov_UHGIFLJINhErqQ5AiFYu$A.s['65']++;diff[property]=item[property];}}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['8'][1]++;}__cov_UHGIFLJINhErqQ5AiFYu$A.s['66']++;return diff;};__cov_UHGIFLJINhErqQ5AiFYu$A.s['67']++;Cache.prototype.diffArray=function(cacheKey,items,forced){__cov_UHGIFLJINhErqQ5AiFYu$A.f['7']++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['68']++;var i;__cov_UHGIFLJINhErqQ5AiFYu$A.s['69']++;var itemsLength=items.length;__cov_UHGIFLJINhErqQ5AiFYu$A.s['70']++;var item;__cov_UHGIFLJINhErqQ5AiFYu$A.s['71']++;var result=null;__cov_UHGIFLJINhErqQ5AiFYu$A.s['72']++;var results=[];__cov_UHGIFLJINhErqQ5AiFYu$A.s['73']++;for(i=0;i<itemsLength;i++){__cov_UHGIFLJINhErqQ5AiFYu$A.s['74']++;item=items[i];__cov_UHGIFLJINhErqQ5AiFYu$A.s['75']++;result=this.diff(item[cacheKey],item,forced);__cov_UHGIFLJINhErqQ5AiFYu$A.s['76']++;if(result!==null){__cov_UHGIFLJINhErqQ5AiFYu$A.b['9'][0]++;__cov_UHGIFLJINhErqQ5AiFYu$A.s['77']++;results.push(result);}else{__cov_UHGIFLJINhErqQ5AiFYu$A.b['9'][1]++;}}__cov_UHGIFLJINhErqQ5AiFYu$A.s['78']++;return results;};__cov_UHGIFLJINhErqQ5AiFYu$A.s['79']++;module.exports=Cache;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_Qg0ETWLFdBaUfqTS1wPCSw = (Function('return this'))();
	if (!__cov_Qg0ETWLFdBaUfqTS1wPCSw.__coverage__) { __cov_Qg0ETWLFdBaUfqTS1wPCSw.__coverage__ = {}; }
	__cov_Qg0ETWLFdBaUfqTS1wPCSw = __cov_Qg0ETWLFdBaUfqTS1wPCSw.__coverage__;
	if (!(__cov_Qg0ETWLFdBaUfqTS1wPCSw['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Resource.js'])) {
	   __cov_Qg0ETWLFdBaUfqTS1wPCSw['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Resource.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Resource.js","s":{"1":0,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"Resource","line":11,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":46}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":51,"column":28},"end":{"line":51,"column":47}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":68,"column":29},"end":{"line":68,"column":43}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":32},"end":{"line":104,"column":51}}},"6":{"name":"(anonymous_6)","line":121,"loc":{"start":{"line":121,"column":35},"end":{"line":121,"column":49}}},"7":{"name":"(anonymous_7)","line":144,"loc":{"start":{"line":145,"column":25},"end":{"line":145,"column":45}}},"8":{"name":"(anonymous_8)","line":168,"loc":{"start":{"line":170,"column":28},"end":{"line":170,"column":48}}},"9":{"name":"(anonymous_9)","line":187,"loc":{"start":{"line":190,"column":37},"end":{"line":190,"column":57}}},"10":{"name":"(anonymous_10)","line":221,"loc":{"start":{"line":224,"column":42},"end":{"line":224,"column":63}}},"11":{"name":"(anonymous_11)","line":240,"loc":{"start":{"line":243,"column":28},"end":{"line":243,"column":55}}},"12":{"name":"(anonymous_12)","line":263,"loc":{"start":{"line":267,"column":37},"end":{"line":267,"column":64}}},"13":{"name":"(anonymous_13)","line":288,"loc":{"start":{"line":293,"column":37},"end":{"line":293,"column":75}}},"14":{"name":"(anonymous_14)","line":313,"loc":{"start":{"line":318,"column":42},"end":{"line":318,"column":74}}},"15":{"name":"(anonymous_15)","line":336,"loc":{"start":{"line":341,"column":28},"end":{"line":341,"column":54}}},"16":{"name":"(anonymous_16)","line":359,"loc":{"start":{"line":365,"column":27},"end":{"line":365,"column":39}}},"17":{"name":"(anonymous_17)","line":375,"loc":{"start":{"line":381,"column":32},"end":{"line":381,"column":44}}},"18":{"name":"(anonymous_18)","line":393,"loc":{"start":{"line":399,"column":42},"end":{"line":399,"column":62}}},"19":{"name":"(anonymous_19)","line":402,"loc":{"start":{"line":408,"column":43},"end":{"line":408,"column":63}}},"20":{"name":"(anonymous_20)","line":415,"loc":{"start":{"line":421,"column":44},"end":{"line":421,"column":64}}},"21":{"name":"(anonymous_21)","line":436,"loc":{"start":{"line":443,"column":43},"end":{"line":443,"column":67}}},"22":{"name":"(anonymous_22)","line":450,"loc":{"start":{"line":457,"column":44},"end":{"line":457,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":9,"column":0},"end":{"line":29,"column":1}},"5":{"start":{"line":11,"column":2},"end":{"line":23,"column":4}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":57}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":33}},"8":{"start":{"line":36,"column":0},"end":{"line":44,"column":2}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"10":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":44}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":16}},"13":{"start":{"line":51,"column":0},"end":{"line":61,"column":2}},"14":{"start":{"line":52,"column":2},"end":{"line":54,"column":5}},"15":{"start":{"line":56,"column":2},"end":{"line":60,"column":50}},"16":{"start":{"line":68,"column":0},"end":{"line":97,"column":2}},"17":{"start":{"line":69,"column":2},"end":{"line":69,"column":24}},"18":{"start":{"line":71,"column":2},"end":{"line":74,"column":3}},"19":{"start":{"line":72,"column":4},"end":{"line":73,"column":76}},"20":{"start":{"line":76,"column":2},"end":{"line":79,"column":5}},"21":{"start":{"line":81,"column":2},"end":{"line":84,"column":3}},"22":{"start":{"line":83,"column":4},"end":{"line":83,"column":43}},"23":{"start":{"line":87,"column":2},"end":{"line":96,"column":3}},"24":{"start":{"line":88,"column":4},"end":{"line":90,"column":7}},"25":{"start":{"line":92,"column":4},"end":{"line":95,"column":7}},"26":{"start":{"line":104,"column":0},"end":{"line":114,"column":2}},"27":{"start":{"line":105,"column":2},"end":{"line":107,"column":5}},"28":{"start":{"line":109,"column":2},"end":{"line":113,"column":5}},"29":{"start":{"line":121,"column":0},"end":{"line":138,"column":2}},"30":{"start":{"line":122,"column":2},"end":{"line":122,"column":10}},"31":{"start":{"line":124,"column":2},"end":{"line":127,"column":3}},"32":{"start":{"line":125,"column":4},"end":{"line":126,"column":83}},"33":{"start":{"line":129,"column":2},"end":{"line":132,"column":5}},"34":{"start":{"line":134,"column":2},"end":{"line":137,"column":5}},"35":{"start":{"line":145,"column":0},"end":{"line":163,"column":2}},"36":{"start":{"line":146,"column":2},"end":{"line":146,"column":10}},"37":{"start":{"line":148,"column":2},"end":{"line":151,"column":3}},"38":{"start":{"line":149,"column":4},"end":{"line":150,"column":73}},"39":{"start":{"line":153,"column":2},"end":{"line":155,"column":5}},"40":{"start":{"line":157,"column":2},"end":{"line":162,"column":49}},"41":{"start":{"line":170,"column":0},"end":{"line":182,"column":2}},"42":{"start":{"line":171,"column":2},"end":{"line":174,"column":3}},"43":{"start":{"line":172,"column":4},"end":{"line":173,"column":112}},"44":{"start":{"line":177,"column":2},"end":{"line":181,"column":3}},"45":{"start":{"line":178,"column":4},"end":{"line":178,"column":47}},"46":{"start":{"line":180,"column":4},"end":{"line":180,"column":42}},"47":{"start":{"line":190,"column":0},"end":{"line":216,"column":2}},"48":{"start":{"line":191,"column":2},"end":{"line":191,"column":22}},"49":{"start":{"line":193,"column":2},"end":{"line":196,"column":5}},"50":{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},"51":{"start":{"line":199,"column":4},"end":{"line":199,"column":50}},"52":{"start":{"line":203,"column":2},"end":{"line":208,"column":3}},"53":{"start":{"line":205,"column":4},"end":{"line":207,"column":7}},"54":{"start":{"line":210,"column":2},"end":{"line":215,"column":49}},"55":{"start":{"line":224,"column":0},"end":{"line":235,"column":2}},"56":{"start":{"line":225,"column":2},"end":{"line":227,"column":5}},"57":{"start":{"line":229,"column":2},"end":{"line":234,"column":50}},"58":{"start":{"line":243,"column":0},"end":{"line":259,"column":2}},"59":{"start":{"line":244,"column":2},"end":{"line":246,"column":3}},"60":{"start":{"line":245,"column":4},"end":{"line":245,"column":17}},"61":{"start":{"line":248,"column":2},"end":{"line":256,"column":3}},"62":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"63":{"start":{"line":251,"column":6},"end":{"line":251,"column":63}},"64":{"start":{"line":254,"column":4},"end":{"line":255,"column":111}},"65":{"start":{"line":258,"column":2},"end":{"line":258,"column":54}},"66":{"start":{"line":267,"column":0},"end":{"line":283,"column":2}},"67":{"start":{"line":268,"column":2},"end":{"line":270,"column":3}},"68":{"start":{"line":269,"column":4},"end":{"line":269,"column":17}},"69":{"start":{"line":272,"column":2},"end":{"line":280,"column":3}},"70":{"start":{"line":274,"column":4},"end":{"line":276,"column":5}},"71":{"start":{"line":275,"column":6},"end":{"line":275,"column":62}},"72":{"start":{"line":278,"column":4},"end":{"line":279,"column":111}},"73":{"start":{"line":282,"column":2},"end":{"line":282,"column":53}},"74":{"start":{"line":293,"column":0},"end":{"line":309,"column":2}},"75":{"start":{"line":294,"column":2},"end":{"line":297,"column":5}},"76":{"start":{"line":299,"column":2},"end":{"line":301,"column":3}},"77":{"start":{"line":300,"column":4},"end":{"line":300,"column":47}},"78":{"start":{"line":303,"column":2},"end":{"line":308,"column":59}},"79":{"start":{"line":318,"column":0},"end":{"line":333,"column":2}},"80":{"start":{"line":319,"column":2},"end":{"line":321,"column":5}},"81":{"start":{"line":323,"column":2},"end":{"line":325,"column":3}},"82":{"start":{"line":324,"column":4},"end":{"line":324,"column":47}},"83":{"start":{"line":327,"column":2},"end":{"line":332,"column":61}},"84":{"start":{"line":341,"column":0},"end":{"line":359,"column":2}},"85":{"start":{"line":342,"column":2},"end":{"line":342,"column":10}},"86":{"start":{"line":344,"column":2},"end":{"line":347,"column":3}},"87":{"start":{"line":345,"column":4},"end":{"line":346,"column":83}},"88":{"start":{"line":349,"column":2},"end":{"line":352,"column":5}},"89":{"start":{"line":354,"column":2},"end":{"line":358,"column":5}},"90":{"start":{"line":365,"column":0},"end":{"line":375,"column":2}},"91":{"start":{"line":366,"column":2},"end":{"line":368,"column":5}},"92":{"start":{"line":370,"column":2},"end":{"line":374,"column":37}},"93":{"start":{"line":381,"column":0},"end":{"line":391,"column":2}},"94":{"start":{"line":382,"column":2},"end":{"line":384,"column":5}},"95":{"start":{"line":386,"column":2},"end":{"line":390,"column":37}},"96":{"start":{"line":399,"column":0},"end":{"line":401,"column":2}},"97":{"start":{"line":400,"column":2},"end":{"line":400,"column":58}},"98":{"start":{"line":408,"column":0},"end":{"line":414,"column":2}},"99":{"start":{"line":409,"column":2},"end":{"line":411,"column":3}},"100":{"start":{"line":410,"column":4},"end":{"line":410,"column":53}},"101":{"start":{"line":413,"column":2},"end":{"line":413,"column":18}},"102":{"start":{"line":421,"column":0},"end":{"line":435,"column":2}},"103":{"start":{"line":422,"column":2},"end":{"line":422,"column":27}},"104":{"start":{"line":423,"column":2},"end":{"line":423,"column":31}},"105":{"start":{"line":424,"column":2},"end":{"line":424,"column":8}},"106":{"start":{"line":426,"column":2},"end":{"line":432,"column":3}},"107":{"start":{"line":428,"column":4},"end":{"line":430,"column":5}},"108":{"start":{"line":429,"column":6},"end":{"line":429,"column":43}},"109":{"start":{"line":434,"column":2},"end":{"line":434,"column":18}},"110":{"start":{"line":443,"column":0},"end":{"line":449,"column":2}},"111":{"start":{"line":444,"column":2},"end":{"line":446,"column":3}},"112":{"start":{"line":445,"column":4},"end":{"line":445,"column":26}},"113":{"start":{"line":448,"column":2},"end":{"line":448,"column":18}},"114":{"start":{"line":457,"column":0},"end":{"line":470,"column":2}},"115":{"start":{"line":458,"column":2},"end":{"line":458,"column":30}},"116":{"start":{"line":459,"column":2},"end":{"line":459,"column":8}},"117":{"start":{"line":461,"column":2},"end":{"line":467,"column":3}},"118":{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},"119":{"start":{"line":464,"column":6},"end":{"line":464,"column":32}},"120":{"start":{"line":469,"column":2},"end":{"line":469,"column":18}},"121":{"start":{"line":472,"column":0},"end":{"line":472,"column":26}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":72,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"3":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"4":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":16}},{"start":{"line":81,"column":20},"end":{"line":81,"column":38}}]},"5":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"6":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"7":{"line":147,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"8":{"line":169,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"9":{"line":174,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"10":{"line":195,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"11":{"line":195,"type":"binary-expr","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":16}},{"start":{"line":198,"column":20},"end":{"line":198,"column":38}}]},"12":{"line":200,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"13":{"line":241,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"14":{"line":245,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"15":{"line":247,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"16":{"line":264,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"17":{"line":268,"type":"if","locations":[{"start":{"line":272,"column":2},"end":{"line":272,"column":2}},{"start":{"line":272,"column":2},"end":{"line":272,"column":2}}]},"18":{"line":270,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"19":{"line":294,"type":"if","locations":[{"start":{"line":299,"column":2},"end":{"line":299,"column":2}},{"start":{"line":299,"column":2},"end":{"line":299,"column":2}}]},"20":{"line":318,"type":"if","locations":[{"start":{"line":323,"column":2},"end":{"line":323,"column":2}},{"start":{"line":323,"column":2},"end":{"line":323,"column":2}}]},"21":{"line":339,"type":"if","locations":[{"start":{"line":344,"column":2},"end":{"line":344,"column":2}},{"start":{"line":344,"column":2},"end":{"line":344,"column":2}}]},"22":{"line":403,"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":409,"column":2}},{"start":{"line":409,"column":2},"end":{"line":409,"column":2}}]},"23":{"line":403,"type":"binary-expr","locations":[{"start":{"line":409,"column":6},"end":{"line":409,"column":16}},{"start":{"line":409,"column":20},"end":{"line":409,"column":38}}]},"24":{"line":420,"type":"if","locations":[{"start":{"line":426,"column":2},"end":{"line":426,"column":2}},{"start":{"line":426,"column":2},"end":{"line":426,"column":2}}]},"25":{"line":420,"type":"binary-expr","locations":[{"start":{"line":426,"column":6},"end":{"line":426,"column":16}},{"start":{"line":426,"column":20},"end":{"line":426,"column":38}}]},"26":{"line":437,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"27":{"line":437,"type":"binary-expr","locations":[{"start":{"line":444,"column":6},"end":{"line":444,"column":16}},{"start":{"line":444,"column":20},"end":{"line":444,"column":38}}]},"28":{"line":454,"type":"if","locations":[{"start":{"line":461,"column":2},"end":{"line":461,"column":2}},{"start":{"line":461,"column":2},"end":{"line":461,"column":2}}]},"29":{"line":454,"type":"binary-expr","locations":[{"start":{"line":461,"column":6},"end":{"line":461,"column":16}},{"start":{"line":461,"column":20},"end":{"line":461,"column":38}}]}},"code":["var extend = require('extend');","var Request = require('../Request');","var utils = require('../Utils');","","/**"," * Resource Object"," * @class"," */","function Resource (options) {","","  this.defaults = {","    host: 'https://api.ingest.io',","    all: '/<%=resource%>',","    byId: '/<%=resource%>/<%=id%>',","    thumbnails: '/<%=resource%>/<%=id%>/thumbnails',","    trash: '/<%=resource%>?filter=trashed',","    deleteMethods: {","      'permanent': '?permanent=1'","    },","    search: '/<%=resource%>?search=<%=input%>',","    tokenSource: null,","    resource: null","  };","","  this.config = extend(true, {}, this.defaults, options);","","  this.cache = this.config.cache;","","}","","/**"," * Proxy the request to token source to ensure a value is always returned."," * @private"," * @return {string} Auth token."," */","Resource.prototype._tokenSource = function () {","  var result = null;","","  if (this.config.tokenSource) {","    result = this.config.tokenSource.call();","  }","","  return result;","};","","/**"," * Return a list of the requested resource for the current user and network."," * @param  {object}   headers   Object representing headers to apply to the request."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype.getAll = function (headers) {","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  return new Request({","    url: url,","    token: this._tokenSource(),","    headers: headers","  }).then(this._updateCachedResources.bind(this));","};","","/**"," * Return a resource that matches the supplied id."," * @param  {string}   id    Resource id."," * @return {promise}        A promise which resolves when the request is complete."," */","Resource.prototype.getById = function (id) {","  var url, cachedResult;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI Resource getById requires a valid id passed as a string.');","  }","","  url = utils.parseTokens(this.config.host + this.config.byId, {","    resource: this.config.resource,","    id: id","  });","","  if (this.cache && this.cache.enabled) {","    // retrieve the cached item.","    cachedResult = this.cache.retrieve(id);","  }","","  // Return a cached result if we've found one.","  if (cachedResult) {","    return utils.promisify(true, {","      data: cachedResult","    });","  } else {","    return new Request({","      url: url,","      token: this._tokenSource()","    });","  }","};","","/**"," * Return the resources currently in the trash."," * @param  {object} headers Headers to be passed along with the request for pagination."," * @return {promise}         A promise which resolves when the request is complete."," */","Resource.prototype.getTrashed = function (headers) {","  var url = utils.parseTokens(this.config.host + this.config.trash, {","    resource: this.config.resource","  });","","  return new Request({","    url: url,","    token: this._tokenSource(),","    headers: headers","  });","};","","/**"," * Retrieve all thumbnails for a provided resource id."," * @param {string} id ID of the resource to retrieve thumbnails for."," * @return {promise}  A promise which resolves when the request is complete."," */","Resource.prototype.getThumbnails = function (id) {","  var url;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI Resource getThumbnails requires an id to be passed as a string.');","  }","","  url = utils.parseTokens(this.config.host + this.config.thumbnails, {","    resource: this.config.resource,","    id: id","  });","","  return new Request({","    url: url,","    token: this._tokenSource()","  });","};","","/**"," * Add a new resource."," * @param   {object}  resource  An object representing the resource to add."," * @return  {promise}           A promise which resolves when the request is complete."," */","Resource.prototype.add = function (resource) {","  var url;","","  if (typeof resource !== 'object') {","    return utils.promisify(false,","      'IngestAPI Resource add requires a resource passed as an object.');","  }","","  url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'POST',","    data: resource","  }).then(this._updateCachedResource.bind(this));","};","","/**"," * Update an existing resource with new content."," * @param  {object|array} resource  An object or an array of objects representing the resource(s) to be updated."," * @return {promise}                A promise which resolves when the request is complete."," */","Resource.prototype.update = function (resource) {","  if (typeof resource !== 'object') {","    return utils.promisify(false,","      'IngestAPI Resource update requires a resource to be passed either as an object or an array of objects.'); //eslint-disable-line","  }","","  // If they've passed an array fire the updateArray function.","  if (Array.isArray(resource)) {","    return this._updateResourceArray(resource);","  } else {","    return this._updateResource(resource);","  }","};","","/**"," * Update a single resource."," * @private"," * @param  {object}   resource  An object representing the resource to update."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype._updateResource = function (resource) {","  var data = resource;","","  var url = utils.parseTokens(this.config.host + this.config.byId, {","    resource: this.config.resource,","    id: resource.id","  });","","  if (this.cache && this.cache.enabled) {","    data = this.cache.diff(resource.id, resource);","  }","","  // Null is returned in the case that the two objects match.","  if (!data) {","    // Return a fulfilled promise with the cached object.","    return utils.promisify(true, {","      data: this.cache.retrieve(resource.id)","    });","  }","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'PATCH',","    data: data","  }).then(this._updateCachedResource.bind(this));","};","","/**"," * Update an array of resources."," * @private"," * @param  {array} resources  An array of resource objects to be updated."," * @return {promise}          A promise which resolves when the request is complete."," */","Resource.prototype._updateResourceArray = function (resources) {","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'PATCH',","    data: resources","  }).then(this._updateCachedResources.bind(this));","};","","/**"," * Delete an existing resource"," * @param  {object | array} resource The id, or an array of ids for the resource(s) to be deleted."," * @param {boolean}   async       A flag to indicate if this should be an async request to delete."," * @return {promise}          A promise which resolves when the request is complete."," */","Resource.prototype.delete = function (resource, async) {","  if (typeof async === 'undefined') {","    async = true;","  }","","  if (typeof resource !== 'string') {","    // If they've passed an array fire the updateArray function.","    if (Array.isArray(resource)) {","      return this._deleteResourceArray(resource, false, async);","    }","","    return utils.promisify(false,","      'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.'); //eslint-disable-line","  }","","  return this._deleteResource(resource, false, async);","};","","/**"," * Permanently delete an existing resource."," * @param  {object | array} resource The id, or an array of ids for the resource(s) to be deleted."," * @param {boolean}   async       A flag to indicate if this should be an async request to delete."," * @return {promise}          A promise which resolves when the request is complete."," */","Resource.prototype.permanentDelete = function (resource, async) {","  if (typeof async === 'undefined') {","    async = true;","  }","","  if (typeof resource !== 'string') {","    // If they've passed an array fire the updateArray function.","    if (Array.isArray(resource)) {","      return this._deleteResourceArray(resource, true, async);","    }","","    return utils.promisify(false,","      'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.'); //eslint-disable-line","  }","","  return this._deleteResource(resource, true, async);","};","","/**"," * Delete a single resource"," * @private"," * @param  {object}   resource  The id of the resource to be deleted."," * @param {boolean}   permanent  A flag to permanently delete each video."," * @param {boolean}   async       A flag to indicate if this should be an async request to delete."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype._deleteResource = function (resource, permanent, async) {","  var url = utils.parseTokens(this.config.host + this.config.byId, {","    resource: this.config.resource,","    id: resource","  });","","  if (permanent === true) {","    url += this.config.deleteMethods.permanent;","  }","","  return new Request({","    url: url,","    async: async,","    token: this._tokenSource(),","    method: 'DELETE',","  }).then(this._deleteCachedResource.bind(this, resource));","};","","/**"," * Delete an array of resources"," * @private"," * @param  {array}  resources   An array of resource objects to be deleted."," * @param {boolean}  permanent  A flag to permanently delete each video."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype._deleteResourceArray = function (resources, permanent) {","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  if (permanent === true) {","    url += this.config.deleteMethods.permanent;","  }","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'DELETE',","    data: resources","  }).then(this._deleteCachedResources.bind(this, resources));","};","","/**"," * Return a subset of items that match the search terms."," * @param  {string} input    The search terms to match against."," * @param  {object} headers  The headers to be passed to the request."," * @return {Promise}          A promise which resolves when the request is complete."," */","Resource.prototype.search = function (input, headers) {","  var url;","","  if (typeof input !== 'string') {","    return utils.promisify(false,","      'IngestAPI Resource search requires search input to be passed as a string.');","  }","","  url = utils.parseTokens(this.config.host + this.config.search, {","    resource: this.config.resource,","    input: input","  });","","  return new Request({","    url: url,","    token: this._tokenSource(),","    headers: headers","  });","};","","/**"," * Get the total count of resources."," * @return {promise} A promise which resolves when the request is complete."," */","Resource.prototype.count = function () {","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'HEAD'","  }).then(this._handleCountResponse);","};","","/**"," * Get the total count of resources in the trash."," * @return {promise} A promise which resolves when the request is complete."," */","Resource.prototype.trashCount = function () {","  var url = utils.parseTokens(this.config.host + this.config.trash, {","    resource: this.config.resource","  });","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'HEAD'","  }).then(this._handleCountResponse);","};","","/**"," * Return the resource count from the response."," * @private"," * @param  {object} response Request response object."," * @return {number}          The resource count."," */","Resource.prototype._handleCountResponse = function (response) {","  return parseInt(response.headers('Resource-Count'), 10);","};","","/**"," * Update a single cached resource based on the response data."," * @param  {object}   response   Response object from the getAll request."," * @return {response}            Response object from the getAll request."," */","Resource.prototype._updateCachedResource = function (response) {","  if (this.cache && this.cache.enabled) {","    this.cache.save(response.data.id, response.data);","  }","","  return response;","};","","/**"," * Store the returned items in cache."," * @param  {object}   response   Response object from the getAll request."," * @return {response}            Response object from the getAll request."," */","Resource.prototype._updateCachedResources = function (response) {","  var data = response.data;","  var dataLength = data.length;","  var i;","","  if (this.cache && this.cache.enabled) {","","    for (i = 0; i < dataLength; i++) {","      this.cache.save(data[i].id, data[i]);","    }","","  }","","  return response;","};","","/**"," * Delete a single cached resource."," * @param  {string} id            ID of the resource to remove."," * @param  {object}   response    Response object from the getAll request."," * @return {response}             Response object from the getAll request."," */","Resource.prototype._deleteCachedResource = function (id, response) {","  if (this.cache && this.cache.enabled) {","    this.cache.remove(id);","  }","","  return response;","};","","/**"," * Delete an array of cached resources"," * @param  {array}    ids         Array of resource id's to delete from cache."," * @param  {object}   response    Response object from the getAll request."," * @return {response}             Response object from the getAll request."," */","Resource.prototype._deleteCachedResources = function (ids, response) {","  var dataLength = ids.length;","  var i;","","  if (this.cache && this.cache.enabled) {","","    for (i = 0; i < dataLength; i++) {","      this.cache.remove(ids[i]);","    }","","  }","","  return response;","};","","module.exports = Resource;",""]};
	}
	__cov_Qg0ETWLFdBaUfqTS1wPCSw = __cov_Qg0ETWLFdBaUfqTS1wPCSw['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Resource.js'];
	__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['1']++;var extend=__webpack_require__(2);__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['2']++;var Request=__webpack_require__(3);__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['3']++;var utils=__webpack_require__(9);function Resource(options){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['1']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['5']++;this.defaults={host:'https://api.ingest.io',all:'/<%=resource%>',byId:'/<%=resource%>/<%=id%>',thumbnails:'/<%=resource%>/<%=id%>/thumbnails',trash:'/<%=resource%>?filter=trashed',deleteMethods:{'permanent':'?permanent=1'},search:'/<%=resource%>?search=<%=input%>',tokenSource:null,resource:null};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['6']++;this.config=extend(true,{},this.defaults,options);__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['7']++;this.cache=this.config.cache;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['8']++;Resource.prototype._tokenSource=function(){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['2']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['9']++;var result=null;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['10']++;if(this.config.tokenSource){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['1'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['11']++;result=this.config.tokenSource.call();}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['1'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['12']++;return result;};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['13']++;Resource.prototype.getAll=function(headers){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['3']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['14']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['15']++;return new Request({url:url,token:this._tokenSource(),headers:headers}).then(this._updateCachedResources.bind(this));};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['16']++;Resource.prototype.getById=function(id){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['4']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['17']++;var url,cachedResult;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['18']++;if(typeof id!=='string'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['2'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['19']++;return utils.promisify(false,'IngestAPI Resource getById requires a valid id passed as a string.');}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['2'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['20']++;url=utils.parseTokens(this.config.host+this.config.byId,{resource:this.config.resource,id:id});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['21']++;if((__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['4'][0]++,this.cache)&&(__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['4'][1]++,this.cache.enabled)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['3'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['22']++;cachedResult=this.cache.retrieve(id);}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['3'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['23']++;if(cachedResult){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['5'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['24']++;return utils.promisify(true,{data:cachedResult});}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['5'][1]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['25']++;return new Request({url:url,token:this._tokenSource()});}};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['26']++;Resource.prototype.getTrashed=function(headers){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['5']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['27']++;var url=utils.parseTokens(this.config.host+this.config.trash,{resource:this.config.resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['28']++;return new Request({url:url,token:this._tokenSource(),headers:headers});};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['29']++;Resource.prototype.getThumbnails=function(id){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['6']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['30']++;var url;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['31']++;if(typeof id!=='string'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['6'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['32']++;return utils.promisify(false,'IngestAPI Resource getThumbnails requires an id to be passed as a string.');}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['6'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['33']++;url=utils.parseTokens(this.config.host+this.config.thumbnails,{resource:this.config.resource,id:id});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['34']++;return new Request({url:url,token:this._tokenSource()});};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['35']++;Resource.prototype.add=function(resource){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['7']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['36']++;var url;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['37']++;if(typeof resource!=='object'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['7'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['38']++;return utils.promisify(false,'IngestAPI Resource add requires a resource passed as an object.');}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['7'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['39']++;url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['40']++;return new Request({url:url,token:this._tokenSource(),method:'POST',data:resource}).then(this._updateCachedResource.bind(this));};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['41']++;Resource.prototype.update=function(resource){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['8']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['42']++;if(typeof resource!=='object'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['8'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['43']++;return utils.promisify(false,'IngestAPI Resource update requires a resource to be passed either as an object or an array of objects.');}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['8'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['44']++;if(Array.isArray(resource)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['9'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['45']++;return this._updateResourceArray(resource);}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['9'][1]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['46']++;return this._updateResource(resource);}};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['47']++;Resource.prototype._updateResource=function(resource){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['9']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['48']++;var data=resource;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['49']++;var url=utils.parseTokens(this.config.host+this.config.byId,{resource:this.config.resource,id:resource.id});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['50']++;if((__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['11'][0]++,this.cache)&&(__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['11'][1]++,this.cache.enabled)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['10'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['51']++;data=this.cache.diff(resource.id,resource);}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['10'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['52']++;if(!data){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['12'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['53']++;return utils.promisify(true,{data:this.cache.retrieve(resource.id)});}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['12'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['54']++;return new Request({url:url,token:this._tokenSource(),method:'PATCH',data:data}).then(this._updateCachedResource.bind(this));};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['55']++;Resource.prototype._updateResourceArray=function(resources){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['10']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['56']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['57']++;return new Request({url:url,token:this._tokenSource(),method:'PATCH',data:resources}).then(this._updateCachedResources.bind(this));};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['58']++;Resource.prototype['delete']=function(resource,async){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['11']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['59']++;if(typeof async==='undefined'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['13'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['60']++;async=true;}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['13'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['61']++;if(typeof resource!=='string'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['14'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['62']++;if(Array.isArray(resource)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['15'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['63']++;return this._deleteResourceArray(resource,false,async);}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['15'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['64']++;return utils.promisify(false,'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.');}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['14'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['65']++;return this._deleteResource(resource,false,async);};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['66']++;Resource.prototype.permanentDelete=function(resource,async){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['12']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['67']++;if(typeof async==='undefined'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['16'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['68']++;async=true;}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['16'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['69']++;if(typeof resource!=='string'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['17'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['70']++;if(Array.isArray(resource)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['18'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['71']++;return this._deleteResourceArray(resource,true,async);}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['18'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['72']++;return utils.promisify(false,'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.');}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['17'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['73']++;return this._deleteResource(resource,true,async);};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['74']++;Resource.prototype._deleteResource=function(resource,permanent,async){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['13']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['75']++;var url=utils.parseTokens(this.config.host+this.config.byId,{resource:this.config.resource,id:resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['76']++;if(permanent===true){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['19'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['77']++;url+=this.config.deleteMethods.permanent;}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['19'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['78']++;return new Request({url:url,async:async,token:this._tokenSource(),method:'DELETE'}).then(this._deleteCachedResource.bind(this,resource));};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['79']++;Resource.prototype._deleteResourceArray=function(resources,permanent){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['14']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['80']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['81']++;if(permanent===true){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['20'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['82']++;url+=this.config.deleteMethods.permanent;}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['20'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['83']++;return new Request({url:url,token:this._tokenSource(),method:'DELETE',data:resources}).then(this._deleteCachedResources.bind(this,resources));};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['84']++;Resource.prototype.search=function(input,headers){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['15']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['85']++;var url;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['86']++;if(typeof input!=='string'){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['21'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['87']++;return utils.promisify(false,'IngestAPI Resource search requires search input to be passed as a string.');}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['21'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['88']++;url=utils.parseTokens(this.config.host+this.config.search,{resource:this.config.resource,input:input});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['89']++;return new Request({url:url,token:this._tokenSource(),headers:headers});};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['90']++;Resource.prototype.count=function(){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['16']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['91']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['92']++;return new Request({url:url,token:this._tokenSource(),method:'HEAD'}).then(this._handleCountResponse);};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['93']++;Resource.prototype.trashCount=function(){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['17']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['94']++;var url=utils.parseTokens(this.config.host+this.config.trash,{resource:this.config.resource});__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['95']++;return new Request({url:url,token:this._tokenSource(),method:'HEAD'}).then(this._handleCountResponse);};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['96']++;Resource.prototype._handleCountResponse=function(response){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['18']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['97']++;return parseInt(response.headers('Resource-Count'),10);};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['98']++;Resource.prototype._updateCachedResource=function(response){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['19']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['99']++;if((__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['23'][0]++,this.cache)&&(__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['23'][1]++,this.cache.enabled)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['22'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['100']++;this.cache.save(response.data.id,response.data);}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['22'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['101']++;return response;};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['102']++;Resource.prototype._updateCachedResources=function(response){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['20']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['103']++;var data=response.data;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['104']++;var dataLength=data.length;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['105']++;var i;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['106']++;if((__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['25'][0]++,this.cache)&&(__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['25'][1]++,this.cache.enabled)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['24'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['107']++;for(i=0;i<dataLength;i++){__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['108']++;this.cache.save(data[i].id,data[i]);}}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['24'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['109']++;return response;};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['110']++;Resource.prototype._deleteCachedResource=function(id,response){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['21']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['111']++;if((__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['27'][0]++,this.cache)&&(__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['27'][1]++,this.cache.enabled)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['26'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['112']++;this.cache.remove(id);}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['26'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['113']++;return response;};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['114']++;Resource.prototype._deleteCachedResources=function(ids,response){__cov_Qg0ETWLFdBaUfqTS1wPCSw.f['22']++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['115']++;var dataLength=ids.length;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['116']++;var i;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['117']++;if((__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['29'][0]++,this.cache)&&(__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['29'][1]++,this.cache.enabled)){__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['28'][0]++;__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['118']++;for(i=0;i<dataLength;i++){__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['119']++;this.cache.remove(ids[i]);}}else{__cov_Qg0ETWLFdBaUfqTS1wPCSw.b['28'][1]++;}__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['120']++;return response;};__cov_Qg0ETWLFdBaUfqTS1wPCSw.s['121']++;module.exports=Resource;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_uvR$rI6lljOzFTJbLz5vfg = (Function('return this'))();
	if (!__cov_uvR$rI6lljOzFTJbLz5vfg.__coverage__) { __cov_uvR$rI6lljOzFTJbLz5vfg.__coverage__ = {}; }
	__cov_uvR$rI6lljOzFTJbLz5vfg = __cov_uvR$rI6lljOzFTJbLz5vfg.__coverage__;
	if (!(__cov_uvR$rI6lljOzFTJbLz5vfg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Users.js'])) {
	   __cov_uvR$rI6lljOzFTJbLz5vfg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Users.js'] = {"path":"/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Users.js","s":{"1":0,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"Users","line":7,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":20,"column":37},"end":{"line":20,"column":49}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":37,"column":41},"end":{"line":37,"column":65}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":73,"column":27},"end":{"line":73,"column":41}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":102,"column":29},"end":{"line":102,"column":43}}},"6":{"name":"(anonymous_6)","line":126,"loc":{"start":{"line":129,"column":36},"end":{"line":129,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"5":{"start":{"line":7,"column":2},"end":{"line":7,"column":31}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"8":{"start":{"line":20,"column":0},"end":{"line":25,"column":2}},"9":{"start":{"line":21,"column":2},"end":{"line":24,"column":5}},"10":{"start":{"line":37,"column":0},"end":{"line":62,"column":2}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":18}},"12":{"start":{"line":40,"column":2},"end":{"line":43,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":42,"column":82}},"14":{"start":{"line":45,"column":2},"end":{"line":48,"column":3}},"15":{"start":{"line":46,"column":4},"end":{"line":47,"column":84}},"16":{"start":{"line":50,"column":2},"end":{"line":53,"column":4}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":75}},"18":{"start":{"line":57,"column":2},"end":{"line":61,"column":5}},"19":{"start":{"line":73,"column":0},"end":{"line":93,"column":2}},"20":{"start":{"line":74,"column":2},"end":{"line":74,"column":18}},"21":{"start":{"line":76,"column":2},"end":{"line":79,"column":3}},"22":{"start":{"line":77,"column":4},"end":{"line":78,"column":68}},"23":{"start":{"line":81,"column":2},"end":{"line":84,"column":4}},"24":{"start":{"line":86,"column":2},"end":{"line":86,"column":71}},"25":{"start":{"line":88,"column":2},"end":{"line":92,"column":5}},"26":{"start":{"line":102,"column":0},"end":{"line":122,"column":2}},"27":{"start":{"line":103,"column":2},"end":{"line":103,"column":18}},"28":{"start":{"line":105,"column":2},"end":{"line":108,"column":3}},"29":{"start":{"line":106,"column":4},"end":{"line":107,"column":70}},"30":{"start":{"line":110,"column":2},"end":{"line":113,"column":4}},"31":{"start":{"line":115,"column":2},"end":{"line":115,"column":71}},"32":{"start":{"line":117,"column":2},"end":{"line":121,"column":5}},"33":{"start":{"line":129,"column":0},"end":{"line":135,"column":2}},"34":{"start":{"line":130,"column":2},"end":{"line":134,"column":5}},"35":{"start":{"line":137,"column":0},"end":{"line":137,"column":23}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"4":{"line":103,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]}},"code":["var Resource = require('./Resource');","var Request = require('../Request');","var utils = require('../Utils');","","function Users (options) {","","  Resource.call(this, options);","","};","","// This extends the base class of 'Resource'.","Users.prototype = Object.create(Resource.prototype);","Users.prototype.constructor = Users;","","/**"," * Retrieve information for the current user."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.getCurrentUserInfo = function () {","  return new Request({","    url: this.config.host + this.config.currentUser,","    token: this._tokenSource()","  });","};","","/**"," * Transfer all authorship currently under the specified user onto another."," * This includes all videos & playlists."," * This task is commonly used in conjunction with permanently deleting a user."," *"," * @param {string} oldId - The user who currently has authorship."," * @param {string} newId - The user to transfer authorship to."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.transferUserAuthorship = function (oldId, newId) {","  var tokens, url;","","  if (typeof oldId !== 'string') {","    return utils.promisify(false,","      'IngestAPI transferUserAuthorship requires \"oldId\" to be passed a string.');","  }","","  if (typeof newId !== 'string') {","    return utils.promisify(false,","      'IngestAPI transferUserAuthorship requires \"newId\" to be passed as a string');","  }","","  tokens = {","    oldId: oldId,","    newId: newId","  };","","  url = utils.parseTokens(this.config.host + this.config.transfer, tokens);","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'PATCH'","  });","};","","/**"," * Link an existing user to the currently authorized network."," *"," * @param {string} id - The unique ID of the user to link."," *"," * @return {object} - The user object."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.linkUser = function (id) {","  var tokens, url;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI linkUser requires \"id\" to be passed as a string.');","  }","","  tokens = {","    resource: 'users',","    id: id","  };","","  url = utils.parseTokens(this.config.host + this.config.byId, tokens);","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'LINK'","  });","};","","/**"," * Remove the specified user from the currently authorized network."," *"," * @param {string} id - The unique ID of the user to unlink."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.unlinkUser = function (id) {","  var tokens, url;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI unlinkUser requires \"id\" to be passed as a string.');","  }","","  tokens = {","    resource: 'users',","    id: id","  };","","  url = utils.parseTokens(this.config.host + this.config.byId, tokens);","","  return new Request({","    url: url,","    token: this._tokenSource(),","    method: 'UNLINK'","  });","};","","/**"," * Revokes the authorization token for the current user."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.revokeCurrentUser = function () {","  return new Request({","    url: this.config.host + this.config.currentUser + this.config.revoke,","    token: this._tokenSource(),","    method: 'DELETE'","  });","};","","module.exports = Users;",""]};
	}
	__cov_uvR$rI6lljOzFTJbLz5vfg = __cov_uvR$rI6lljOzFTJbLz5vfg['/Users/mcunningham/Development/ingest/ingest-js-sdk/src/resources/Users.js'];
	__cov_uvR$rI6lljOzFTJbLz5vfg.s['1']++;var Resource=__webpack_require__(12);__cov_uvR$rI6lljOzFTJbLz5vfg.s['2']++;var Request=__webpack_require__(3);__cov_uvR$rI6lljOzFTJbLz5vfg.s['3']++;var utils=__webpack_require__(9);function Users(options){__cov_uvR$rI6lljOzFTJbLz5vfg.f['1']++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['5']++;Resource.call(this,options);};__cov_uvR$rI6lljOzFTJbLz5vfg.s['6']++;Users.prototype=Object.create(Resource.prototype);__cov_uvR$rI6lljOzFTJbLz5vfg.s['7']++;Users.prototype.constructor=Users;__cov_uvR$rI6lljOzFTJbLz5vfg.s['8']++;Users.prototype.getCurrentUserInfo=function(){__cov_uvR$rI6lljOzFTJbLz5vfg.f['2']++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['9']++;return new Request({url:this.config.host+this.config.currentUser,token:this._tokenSource()});};__cov_uvR$rI6lljOzFTJbLz5vfg.s['10']++;Users.prototype.transferUserAuthorship=function(oldId,newId){__cov_uvR$rI6lljOzFTJbLz5vfg.f['3']++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['11']++;var tokens,url;__cov_uvR$rI6lljOzFTJbLz5vfg.s['12']++;if(typeof oldId!=='string'){__cov_uvR$rI6lljOzFTJbLz5vfg.b['1'][0]++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['13']++;return utils.promisify(false,'IngestAPI transferUserAuthorship requires "oldId" to be passed a string.');}else{__cov_uvR$rI6lljOzFTJbLz5vfg.b['1'][1]++;}__cov_uvR$rI6lljOzFTJbLz5vfg.s['14']++;if(typeof newId!=='string'){__cov_uvR$rI6lljOzFTJbLz5vfg.b['2'][0]++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['15']++;return utils.promisify(false,'IngestAPI transferUserAuthorship requires "newId" to be passed as a string');}else{__cov_uvR$rI6lljOzFTJbLz5vfg.b['2'][1]++;}__cov_uvR$rI6lljOzFTJbLz5vfg.s['16']++;tokens={oldId:oldId,newId:newId};__cov_uvR$rI6lljOzFTJbLz5vfg.s['17']++;url=utils.parseTokens(this.config.host+this.config.transfer,tokens);__cov_uvR$rI6lljOzFTJbLz5vfg.s['18']++;return new Request({url:url,token:this._tokenSource(),method:'PATCH'});};__cov_uvR$rI6lljOzFTJbLz5vfg.s['19']++;Users.prototype.linkUser=function(id){__cov_uvR$rI6lljOzFTJbLz5vfg.f['4']++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['20']++;var tokens,url;__cov_uvR$rI6lljOzFTJbLz5vfg.s['21']++;if(typeof id!=='string'){__cov_uvR$rI6lljOzFTJbLz5vfg.b['3'][0]++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['22']++;return utils.promisify(false,'IngestAPI linkUser requires "id" to be passed as a string.');}else{__cov_uvR$rI6lljOzFTJbLz5vfg.b['3'][1]++;}__cov_uvR$rI6lljOzFTJbLz5vfg.s['23']++;tokens={resource:'users',id:id};__cov_uvR$rI6lljOzFTJbLz5vfg.s['24']++;url=utils.parseTokens(this.config.host+this.config.byId,tokens);__cov_uvR$rI6lljOzFTJbLz5vfg.s['25']++;return new Request({url:url,token:this._tokenSource(),method:'LINK'});};__cov_uvR$rI6lljOzFTJbLz5vfg.s['26']++;Users.prototype.unlinkUser=function(id){__cov_uvR$rI6lljOzFTJbLz5vfg.f['5']++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['27']++;var tokens,url;__cov_uvR$rI6lljOzFTJbLz5vfg.s['28']++;if(typeof id!=='string'){__cov_uvR$rI6lljOzFTJbLz5vfg.b['4'][0]++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['29']++;return utils.promisify(false,'IngestAPI unlinkUser requires "id" to be passed as a string.');}else{__cov_uvR$rI6lljOzFTJbLz5vfg.b['4'][1]++;}__cov_uvR$rI6lljOzFTJbLz5vfg.s['30']++;tokens={resource:'users',id:id};__cov_uvR$rI6lljOzFTJbLz5vfg.s['31']++;url=utils.parseTokens(this.config.host+this.config.byId,tokens);__cov_uvR$rI6lljOzFTJbLz5vfg.s['32']++;return new Request({url:url,token:this._tokenSource(),method:'UNLINK'});};__cov_uvR$rI6lljOzFTJbLz5vfg.s['33']++;Users.prototype.revokeCurrentUser=function(){__cov_uvR$rI6lljOzFTJbLz5vfg.f['6']++;__cov_uvR$rI6lljOzFTJbLz5vfg.s['34']++;return new Request({url:this.config.host+this.config.currentUser+this.config.revoke,token:this._tokenSource(),method:'DELETE'});};__cov_uvR$rI6lljOzFTJbLz5vfg.s['35']++;module.exports=Users;


/***/ }
/******/ ])
});
;
//# sourceMappingURL=ingest.js.map
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["IngestAPI"] = factory();
	else
		root["IngestAPI"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_xlyUrtUtDuSZ4J05JsyMUw = (Function('return this'))();
	if (!__cov_xlyUrtUtDuSZ4J05JsyMUw.__coverage__) { __cov_xlyUrtUtDuSZ4J05JsyMUw.__coverage__ = {}; }
	__cov_xlyUrtUtDuSZ4J05JsyMUw = __cov_xlyUrtUtDuSZ4J05JsyMUw.__coverage__;
	if (!(__cov_xlyUrtUtDuSZ4J05JsyMUw['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js'])) {
	   __cov_xlyUrtUtDuSZ4J05JsyMUw['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js","s":{"1":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}}},"branchMap":{},"code":["module.exports = require('./src/IngestAPI.js');",""]};
	}
	__cov_xlyUrtUtDuSZ4J05JsyMUw = __cov_xlyUrtUtDuSZ4J05JsyMUw['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js'];
	__cov_xlyUrtUtDuSZ4J05JsyMUw.s['1']++;module.exports=__webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_U7s$mldP4c4$CbCDCMzmBQ = (Function('return this'))();
	if (!__cov_U7s$mldP4c4$CbCDCMzmBQ.__coverage__) { __cov_U7s$mldP4c4$CbCDCMzmBQ.__coverage__ = {}; }
	__cov_U7s$mldP4c4$CbCDCMzmBQ = __cov_U7s$mldP4c4$CbCDCMzmBQ.__coverage__;
	if (!(__cov_U7s$mldP4c4$CbCDCMzmBQ['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js'])) {
	   __cov_U7s$mldP4c4$CbCDCMzmBQ['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"IngestAPI","line":21,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}}},"2":{"name":"(anonymous_2)","line":106,"loc":{"start":{"line":105,"column":31},"end":{"line":105,"column":48}}},"3":{"name":"(anonymous_3)","line":120,"loc":{"start":{"line":119,"column":31},"end":{"line":119,"column":43}}},"4":{"name":"(anonymous_4)","line":130,"loc":{"start":{"line":129,"column":43},"end":{"line":129,"column":55}}},"5":{"name":"(anonymous_5)","line":147,"loc":{"start":{"line":146,"column":42},"end":{"line":146,"column":58}}},"6":{"name":"(anonymous_6)","line":179,"loc":{"start":{"line":180,"column":46},"end":{"line":180,"column":60}}},"7":{"name":"(anonymous_7)","line":207,"loc":{"start":{"line":209,"column":45},"end":{"line":209,"column":61}}},"8":{"name":"(anonymous_8)","line":244,"loc":{"start":{"line":248,"column":49},"end":{"line":248,"column":63}}},"9":{"name":"(anonymous_9)","line":271,"loc":{"start":{"line":277,"column":29},"end":{"line":277,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"10":{"start":{"line":19,"column":0},"end":{"line":99,"column":1}},"11":{"start":{"line":21,"column":2},"end":{"line":38,"column":4}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":57}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":20}},"14":{"start":{"line":45,"column":2},"end":{"line":48,"column":3}},"15":{"start":{"line":47,"column":4},"end":{"line":47,"column":37}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":25}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":27}},"18":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":27}},"20":{"start":{"line":55,"column":2},"end":{"line":55,"column":29}},"21":{"start":{"line":56,"column":2},"end":{"line":56,"column":35}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":27}},"23":{"start":{"line":59,"column":2},"end":{"line":59,"column":47}},"24":{"start":{"line":61,"column":2},"end":{"line":66,"column":5}},"25":{"start":{"line":68,"column":2},"end":{"line":72,"column":5}},"26":{"start":{"line":74,"column":2},"end":{"line":79,"column":5}},"27":{"start":{"line":81,"column":2},"end":{"line":89,"column":5}},"28":{"start":{"line":91,"column":2},"end":{"line":97,"column":5}},"29":{"start":{"line":105,"column":0},"end":{"line":113,"column":2}},"30":{"start":{"line":108,"column":2},"end":{"line":110,"column":3}},"31":{"start":{"line":109,"column":4},"end":{"line":109,"column":86}},"32":{"start":{"line":112,"column":2},"end":{"line":112,"column":21}},"33":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"34":{"start":{"line":120,"column":2},"end":{"line":120,"column":20}},"35":{"start":{"line":129,"column":0},"end":{"line":136,"column":2}},"36":{"start":{"line":130,"column":2},"end":{"line":133,"column":5}},"37":{"start":{"line":135,"column":2},"end":{"line":135,"column":24}},"38":{"start":{"line":146,"column":0},"end":{"line":172,"column":2}},"39":{"start":{"line":147,"column":2},"end":{"line":147,"column":14}},"40":{"start":{"line":149,"column":2},"end":{"line":152,"column":3}},"41":{"start":{"line":150,"column":4},"end":{"line":151,"column":80}},"42":{"start":{"line":155,"column":2},"end":{"line":157,"column":3}},"43":{"start":{"line":156,"column":4},"end":{"line":156,"column":20}},"44":{"start":{"line":159,"column":2},"end":{"line":162,"column":3}},"45":{"start":{"line":160,"column":4},"end":{"line":161,"column":99}},"46":{"start":{"line":164,"column":2},"end":{"line":169,"column":5}},"47":{"start":{"line":171,"column":2},"end":{"line":171,"column":24}},"48":{"start":{"line":180,"column":0},"end":{"line":200,"column":2}},"49":{"start":{"line":181,"column":2},"end":{"line":181,"column":27}},"50":{"start":{"line":183,"column":2},"end":{"line":186,"column":3}},"51":{"start":{"line":184,"column":4},"end":{"line":185,"column":84}},"52":{"start":{"line":188,"column":2},"end":{"line":190,"column":4}},"53":{"start":{"line":192,"column":2},"end":{"line":192,"column":83}},"54":{"start":{"line":194,"column":2},"end":{"line":197,"column":5}},"55":{"start":{"line":199,"column":2},"end":{"line":199,"column":24}},"56":{"start":{"line":209,"column":0},"end":{"line":240,"column":2}},"57":{"start":{"line":210,"column":2},"end":{"line":210,"column":27}},"58":{"start":{"line":212,"column":2},"end":{"line":215,"column":3}},"59":{"start":{"line":213,"column":4},"end":{"line":214,"column":87}},"60":{"start":{"line":217,"column":2},"end":{"line":220,"column":3}},"61":{"start":{"line":218,"column":4},"end":{"line":219,"column":84}},"62":{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},"63":{"start":{"line":223,"column":4},"end":{"line":223,"column":20}},"64":{"start":{"line":226,"column":2},"end":{"line":228,"column":4}},"65":{"start":{"line":230,"column":2},"end":{"line":230,"column":83}},"66":{"start":{"line":232,"column":2},"end":{"line":237,"column":5}},"67":{"start":{"line":239,"column":2},"end":{"line":239,"column":24}},"68":{"start":{"line":248,"column":0},"end":{"line":270,"column":2}},"69":{"start":{"line":249,"column":2},"end":{"line":249,"column":27}},"70":{"start":{"line":251,"column":2},"end":{"line":254,"column":3}},"71":{"start":{"line":252,"column":4},"end":{"line":253,"column":87}},"72":{"start":{"line":256,"column":2},"end":{"line":258,"column":4}},"73":{"start":{"line":260,"column":2},"end":{"line":260,"column":83}},"74":{"start":{"line":262,"column":2},"end":{"line":266,"column":5}},"75":{"start":{"line":268,"column":2},"end":{"line":268,"column":24}},"76":{"start":{"line":277,"column":0},"end":{"line":283,"column":2}},"77":{"start":{"line":278,"column":2},"end":{"line":282,"column":5}},"78":{"start":{"line":285,"column":0},"end":{"line":285,"column":27}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"2":{"line":109,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"3":{"line":150,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"4":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"5":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"6":{"line":182,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"7":{"line":210,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"8":{"line":214,"type":"if","locations":[{"start":{"line":217,"column":2},"end":{"line":217,"column":2}},{"start":{"line":217,"column":2},"end":{"line":217,"column":2}}]},"9":{"line":218,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"10":{"line":247,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]}},"code":["var extend = require('extend');","var Request = require('./Request');","var JWTUtils = require('./JWTUtils');","var utils = require('./Utils');","var Uploader = require('./Uploader');","var Cache = require('./Cache');","","var Resource = require('./resources/Resource');","var Users = require('./resources/Users');","var Networks = require('./resources/Networks');","","/**"," * IngestAPI Object"," * @class"," * @param {object}  options        Options to override the default."," * @param {string}  options.host   Override the default live host."," * @param {string}  options.token  Auth token to use for requests."," */","function IngestAPI (options) {","","  this.defaults = {","    'host': 'https://api.ingest.io',","    'cacheAge': 300000, // 5 minutes","    'networks': '/networks',","    'networksKeys': '/networks/keys',","    'networksKeysById': '/networks/keys/<%=id%>',","    'inputs': '/encoding/inputs',","    'inputsById' : '/encoding/inputs/<%=id%>',","    'inputsUpload': '/encoding/inputs/<%=id%>/upload<%=method%>',","    'inputsUploadSign': '/encoding/inputs/<%=id%>/upload/sign<%=method%>',","    'inputsUploadComplete': '/encoding/inputs/<%=id%>/upload/complete',","    'inputsUploadAbort': '/encoding/inputs/<%=id%>/upload/abort',","    'uploadMethods': {","      'param': '?type=',","      'singlePart': 'amazon',","      'multiPart': 'amazonMP'","    }","  };","","  // Create a config object by extending the defaults with the pass options.","  this.config = extend(true, {}, this.defaults, options);","","  this.token = null;","","  if (this.config.token) {","    // Store the token for future use.","    this.setToken(this.config.token);","  }","","  /* Exposed for testing */","  this.request = Request;","  this.JWTUtils = JWTUtils;","  this.utils = utils;","  this.resource = Resource;","  this.usersResource = Users;","  this.networksResource = Networks;","  this.uploader = Uploader;","","  this.cache = new Cache(this.config.cacheAge);","","  this.videos = new Resource({","    host: this.config.host,","    resource: 'videos',","    tokenSource: this.getToken.bind(this),","    cache: this.cache","  });","","  this.playlists = new Resource({","    host: this.config.host,","    resource: 'playlists',","    tokenSource: this.getToken.bind(this)","  });","","  this.inputs = new Resource({","    host: this.config.host,","    resource: 'encoding/inputs',","    tokenSource: this.getToken.bind(this),","    cache: this.cache","  });","","  this.users = new Users({","    host: this.config.host,","    resource: 'users',","    tokenSource: this.getToken.bind(this),","    cache: this.cache,","    currentUser: '/users/me',","    transfer: '/users/<%=oldId%>/transfer/<%=newId%>',","    revoke: '/revoke'","  });","","  this.networks = new Networks({","    host: this.config.host,","    resource: 'networks',","    tokenSource: this.getToken.bind(this),","    cache: this.cache,","    invite: '/networks/invite'","  });","","}","/** Token **/","/**"," * Set the auth token to use."," * @param   {String}        token Auth token to use."," */","IngestAPI.prototype.setToken = function (token) {","","  // Make sure a valid value is passed.","  if (typeof token !== 'string') {","    throw new Error('IngestAPI requires an authentication token passed as a string.');","  }","","  this.token = token;","};","","/**"," * Return the current auth token."," * @return  {String}        Current auth token, or null if a token has not been set."," */","IngestAPI.prototype.getToken = function () {","  return this.token;","};","","/** Network Information **/","","/**"," * Get the current network primary key in RSA format."," * @return {Promise} Promise/A+ spec which resolves with the primary network key."," */","IngestAPI.prototype.getNetworkSecureKeys = function () {","  var request = new Request({","    url: this.config.host + this.config.networksKeys,","    token: this.getToken()","  });","","  return request.send();","};","","/**"," * Adds a new secure key to the current network."," * @param {object}  data        The object containing data for the secure key entry."," * @param {string}  data.title  Optional. The title of the secure key. Will default to \"Default Key Title\""," * @param {string}  data.key    The public key in RSA format."," *"," * @return {Promise}          A promise which resolves when the request is complete."," */","IngestAPI.prototype.addNetworkSecureKey = function (data) {","  var request;","","  if (typeof data !== 'object') {","    return utils.promisify(false,","      'IngestAPI addNetworkSecureKey requires data to be passed as an object.');","  }","","  // The title must be a string.","  if (typeof data.title !== 'string') {","    data.title = '';","  }","","  if (typeof data.key !== 'string') {","    return utils.promisify(false,","      'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');","  }","","  request = new Request({","    url: this.config.host + this.config.networksKeys,","    token: this.getToken(),","    method: 'POST',","    data: data","  });","","  return request.send();","};","","/**"," * Retrieves a single network secure key entry based on the UUID given."," * @param {string}  id  The UUID of the secure key entry."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.getNetworkSecureKeyById = function (id) {","  var tokens, url, request;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');","  }","","  tokens = {","    id: id","  };","","  url = utils.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  request = new Request({","    url: url,","    token: this.getToken()","  });","","  return request.send();","};","","/**"," * Updates an individual secure key entry in the current network."," * @param {object}  data        The object containing data for the secure key entry."," * @param {string}  data.title  The title for the current network."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.updateNetworkSecureKey = function (data) {","  var tokens, url, request;","","  if (typeof data !== 'object') {","    return utils.promisify(false,","      'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');","  }","","  if (typeof data.id !== 'string') {","    return utils.promisify(false,","      'IngestAPI updateNetworkSecureKeyById requires a param \"id\" to be a string.');","  }","","  if (typeof data.title !== 'string') {","    data.title = '';","  }","","  tokens = {","    id: data.id","  };","","  url = utils.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  request = new Request({","    url: url,","    token: this.getToken(),","    method: 'PATCH',","    data: data","  });","","  return request.send();","};","","/**"," * Deletes a single network secure key entry based on the UUID given."," * @param {string}  id  The UUID of the secure key entry."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.deleteNetworkSecureKeyById = function (id) {","  var tokens, url, request;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');","  }","","  tokens = {","    id: id","  };","","  url = utils.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  request = new Request({","    url: url,","    token: this.getToken(),","    method: 'DELETE'","  });","","  return request.send();","","};","","/**"," * Create a new input and upload a file."," * @param  {File}   file    File to upload."," * @return {Promise} A promise which resolves when the upload is complete."," */","IngestAPI.prototype.upload = function (file) {","  return new Uploader({","    file: file,","    api: this,","    host: this.config.host","  });","};","","module.exports = IngestAPI;",""]};
	}
	__cov_U7s$mldP4c4$CbCDCMzmBQ = __cov_U7s$mldP4c4$CbCDCMzmBQ['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js'];
	__cov_U7s$mldP4c4$CbCDCMzmBQ.s['1']++;var extend=__webpack_require__(2);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['2']++;var Request=__webpack_require__(3);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['3']++;var JWTUtils=__webpack_require__(8);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['4']++;var utils=__webpack_require__(9);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['5']++;var Uploader=__webpack_require__(10);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['6']++;var Cache=__webpack_require__(11);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['7']++;var Resource=__webpack_require__(12);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['8']++;var Users=__webpack_require__(13);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['9']++;var Networks=__webpack_require__(14);function IngestAPI(options){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['1']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['11']++;this.defaults={'host':'https://api.ingest.io','cacheAge':300000,'networks':'/networks','networksKeys':'/networks/keys','networksKeysById':'/networks/keys/<%=id%>','inputs':'/encoding/inputs','inputsById':'/encoding/inputs/<%=id%>','inputsUpload':'/encoding/inputs/<%=id%>/upload<%=method%>','inputsUploadSign':'/encoding/inputs/<%=id%>/upload/sign<%=method%>','inputsUploadComplete':'/encoding/inputs/<%=id%>/upload/complete','inputsUploadAbort':'/encoding/inputs/<%=id%>/upload/abort','uploadMethods':{'param':'?type=','singlePart':'amazon','multiPart':'amazonMP'}};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['12']++;this.config=extend(true,{},this.defaults,options);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['13']++;this.token=null;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['14']++;if(this.config.token){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['1'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['15']++;this.setToken(this.config.token);}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['1'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['16']++;this.request=Request;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['17']++;this.JWTUtils=JWTUtils;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['18']++;this.utils=utils;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['19']++;this.resource=Resource;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['20']++;this.usersResource=Users;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['21']++;this.networksResource=Networks;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['22']++;this.uploader=Uploader;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['23']++;this.cache=new Cache(this.config.cacheAge);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['24']++;this.videos=new Resource({host:this.config.host,resource:'videos',tokenSource:this.getToken.bind(this),cache:this.cache});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['25']++;this.playlists=new Resource({host:this.config.host,resource:'playlists',tokenSource:this.getToken.bind(this)});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['26']++;this.inputs=new Resource({host:this.config.host,resource:'encoding/inputs',tokenSource:this.getToken.bind(this),cache:this.cache});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['27']++;this.users=new Users({host:this.config.host,resource:'users',tokenSource:this.getToken.bind(this),cache:this.cache,currentUser:'/users/me',transfer:'/users/<%=oldId%>/transfer/<%=newId%>',revoke:'/revoke'});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['28']++;this.networks=new Networks({host:this.config.host,resource:'networks',tokenSource:this.getToken.bind(this),cache:this.cache,invite:'/networks/invite'});}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['29']++;IngestAPI.prototype.setToken=function(token){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['2']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['30']++;if(typeof token!=='string'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['2'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['31']++;throw new Error('IngestAPI requires an authentication token passed as a string.');}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['2'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['32']++;this.token=token;};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['33']++;IngestAPI.prototype.getToken=function(){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['3']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['34']++;return this.token;};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['35']++;IngestAPI.prototype.getNetworkSecureKeys=function(){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['4']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['36']++;var request=new Request({url:this.config.host+this.config.networksKeys,token:this.getToken()});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['37']++;return request.send();};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['38']++;IngestAPI.prototype.addNetworkSecureKey=function(data){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['5']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['39']++;var request;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['40']++;if(typeof data!=='object'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['3'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['41']++;return utils.promisify(false,'IngestAPI addNetworkSecureKey requires data to be passed as an object.');}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['3'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['42']++;if(typeof data.title!=='string'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['4'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['43']++;data.title='';}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['4'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['44']++;if(typeof data.key!=='string'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['5'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['45']++;return utils.promisify(false,'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['5'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['46']++;request=new Request({url:this.config.host+this.config.networksKeys,token:this.getToken(),method:'POST',data:data});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['47']++;return request.send();};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['48']++;IngestAPI.prototype.getNetworkSecureKeyById=function(id){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['6']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['49']++;var tokens,url,request;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['50']++;if(typeof id!=='string'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['6'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['51']++;return utils.promisify(false,'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['6'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['52']++;tokens={id:id};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['53']++;url=utils.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['54']++;request=new Request({url:url,token:this.getToken()});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['55']++;return request.send();};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['56']++;IngestAPI.prototype.updateNetworkSecureKey=function(data){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['7']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['57']++;var tokens,url,request;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['58']++;if(typeof data!=='object'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['7'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['59']++;return utils.promisify(false,'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['7'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['60']++;if(typeof data.id!=='string'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['8'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['61']++;return utils.promisify(false,'IngestAPI updateNetworkSecureKeyById requires a param "id" to be a string.');}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['8'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['62']++;if(typeof data.title!=='string'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['9'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['63']++;data.title='';}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['9'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['64']++;tokens={id:data.id};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['65']++;url=utils.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['66']++;request=new Request({url:url,token:this.getToken(),method:'PATCH',data:data});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['67']++;return request.send();};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['68']++;IngestAPI.prototype.deleteNetworkSecureKeyById=function(id){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['8']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['69']++;var tokens,url,request;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['70']++;if(typeof id!=='string'){__cov_U7s$mldP4c4$CbCDCMzmBQ.b['10'][0]++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['71']++;return utils.promisify(false,'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov_U7s$mldP4c4$CbCDCMzmBQ.b['10'][1]++;}__cov_U7s$mldP4c4$CbCDCMzmBQ.s['72']++;tokens={id:id};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['73']++;url=utils.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov_U7s$mldP4c4$CbCDCMzmBQ.s['74']++;request=new Request({url:url,token:this.getToken(),method:'DELETE'});__cov_U7s$mldP4c4$CbCDCMzmBQ.s['75']++;return request.send();};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['76']++;IngestAPI.prototype.upload=function(file){__cov_U7s$mldP4c4$CbCDCMzmBQ.f['9']++;__cov_U7s$mldP4c4$CbCDCMzmBQ.s['77']++;return new Uploader({file:file,api:this,host:this.config.host});};__cov_U7s$mldP4c4$CbCDCMzmBQ.s['78']++;module.exports=IngestAPI;


/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';
	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	
	var isArray = function isArray(arr) {
		if (typeof Array.isArray === 'function') {
			return Array.isArray(arr);
		}
	
		return toStr.call(arr) === '[object Array]';
	};
	
	var isPlainObject = function isPlainObject(obj) {
		if (!obj || toStr.call(obj) !== '[object Object]') {
			return false;
		}
	
		var hasOwnConstructor = hasOwn.call(obj, 'constructor');
		var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
		// Not own constructor property must be Object
		if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
			return false;
		}
	
		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		var key;
		for (key in obj) {/**/}
	
		return typeof key === 'undefined' || hasOwn.call(obj, key);
	};
	
	module.exports = function extend() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0],
			i = 1,
			length = arguments.length,
			deep = false;
	
		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;
			target = arguments[1] || {};
			// skip the boolean and the target
			i = 2;
		} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {
			target = {};
		}
	
		for (; i < length; ++i) {
			options = arguments[i];
			// Only deal with non-null/undefined values
			if (options != null) {
				// Extend the base object
				for (name in options) {
					src = target[name];
					copy = options[name];
	
					// Prevent never-ending loop
					if (target !== copy) {
						// Recurse if we're merging plain objects or arrays
						if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
							if (copyIsArray) {
								copyIsArray = false;
								clone = src && isArray(src) ? src : [];
							} else {
								clone = src && isPlainObject(src) ? src : {};
							}
	
							// Never move original objects, clone them
							target[name] = extend(deep, clone, copy);
	
						// Don't bring in undefined values
						} else if (typeof copy !== 'undefined') {
							target[name] = copy;
						}
					}
				}
			}
		}
	
		// Return the modified object
		return target;
	};
	


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_JMw1OCqc$w3bDCEXNhXu$g = (Function('return this'))();
	if (!__cov_JMw1OCqc$w3bDCEXNhXu$g.__coverage__) { __cov_JMw1OCqc$w3bDCEXNhXu$g.__coverage__ = {}; }
	__cov_JMw1OCqc$w3bDCEXNhXu$g = __cov_JMw1OCqc$w3bDCEXNhXu$g.__coverage__;
	if (!(__cov_JMw1OCqc$w3bDCEXNhXu$g['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js'])) {
	   __cov_JMw1OCqc$w3bDCEXNhXu$g['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"Request","line":17,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":33}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":38,"column":25},"end":{"line":38,"column":37}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":35},"end":{"line":57,"column":47}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":32},"end":{"line":64,"column":44}}},"5":{"name":"(anonymous_5)","line":116,"loc":{"start":{"line":118,"column":36},"end":{"line":118,"column":52}}},"6":{"name":"(anonymous_6)","line":152,"loc":{"start":{"line":155,"column":40},"end":{"line":155,"column":59}}},"7":{"name":"(anonymous_7)","line":169,"loc":{"start":{"line":173,"column":36},"end":{"line":173,"column":56}}},"8":{"name":"(anonymous_8)","line":183,"loc":{"start":{"line":188,"column":36},"end":{"line":188,"column":56}}},"9":{"name":"(anonymous_9)","line":209,"loc":{"start":{"line":215,"column":33},"end":{"line":215,"column":52}}},"10":{"name":"(anonymous_10)","line":217,"loc":{"start":{"line":223,"column":37},"end":{"line":223,"column":49}}},"11":{"name":"(anonymous_11)","line":236,"loc":{"start":{"line":244,"column":40},"end":{"line":244,"column":64}}},"12":{"name":"(anonymous_12)","line":257,"loc":{"start":{"line":267,"column":27},"end":{"line":267,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"5":{"start":{"line":15,"column":0},"end":{"line":32,"column":2}},"6":{"start":{"line":17,"column":2},"end":{"line":21,"column":4}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":38}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":54}},"10":{"start":{"line":38,"column":0},"end":{"line":52,"column":2}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}},"12":{"start":{"line":43,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":23}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":80}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":22}},"16":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":69}},"18":{"start":{"line":64,"column":0},"end":{"line":111,"column":2}},"19":{"start":{"line":66,"column":2},"end":{"line":66,"column":57}},"20":{"start":{"line":67,"column":2},"end":{"line":67,"column":37}},"21":{"start":{"line":68,"column":2},"end":{"line":68,"column":73}},"22":{"start":{"line":70,"column":2},"end":{"line":73,"column":3}},"23":{"start":{"line":71,"column":4},"end":{"line":71,"column":68}},"24":{"start":{"line":72,"column":4},"end":{"line":72,"column":11}},"25":{"start":{"line":75,"column":2},"end":{"line":75,"column":79}},"26":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"27":{"start":{"line":79,"column":4},"end":{"line":79,"column":78}},"28":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"29":{"start":{"line":83,"column":4},"end":{"line":83,"column":38}},"30":{"start":{"line":87,"column":2},"end":{"line":97,"column":3}},"31":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"32":{"start":{"line":91,"column":6},"end":{"line":91,"column":61}},"33":{"start":{"line":92,"column":6},"end":{"line":92,"column":13}},"34":{"start":{"line":95,"column":4},"end":{"line":95,"column":71}},"35":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"36":{"start":{"line":101,"column":4},"end":{"line":101,"column":84}},"37":{"start":{"line":105,"column":2},"end":{"line":109,"column":3}},"38":{"start":{"line":106,"column":4},"end":{"line":106,"column":37}},"39":{"start":{"line":108,"column":4},"end":{"line":108,"column":24}},"40":{"start":{"line":118,"column":0},"end":{"line":149,"column":2}},"41":{"start":{"line":120,"column":2},"end":{"line":124,"column":4}},"42":{"start":{"line":127,"column":2},"end":{"line":130,"column":3}},"43":{"start":{"line":128,"column":4},"end":{"line":128,"column":29}},"44":{"start":{"line":129,"column":4},"end":{"line":129,"column":18}},"45":{"start":{"line":132,"column":2},"end":{"line":135,"column":3}},"46":{"start":{"line":133,"column":4},"end":{"line":133,"column":25}},"47":{"start":{"line":134,"column":4},"end":{"line":134,"column":18}},"48":{"start":{"line":138,"column":2},"end":{"line":145,"column":3}},"49":{"start":{"line":139,"column":4},"end":{"line":144,"column":5}},"50":{"start":{"line":140,"column":6},"end":{"line":140,"column":41}},"51":{"start":{"line":142,"column":6},"end":{"line":142,"column":29}},"52":{"start":{"line":143,"column":6},"end":{"line":143,"column":25}},"53":{"start":{"line":147,"column":2},"end":{"line":147,"column":16}},"54":{"start":{"line":155,"column":0},"end":{"line":167,"column":2}},"55":{"start":{"line":157,"column":2},"end":{"line":157,"column":13}},"56":{"start":{"line":158,"column":2},"end":{"line":158,"column":34}},"57":{"start":{"line":159,"column":2},"end":{"line":159,"column":31}},"58":{"start":{"line":162,"column":2},"end":{"line":165,"column":3}},"59":{"start":{"line":163,"column":4},"end":{"line":163,"column":18}},"60":{"start":{"line":164,"column":4},"end":{"line":164,"column":53}},"61":{"start":{"line":173,"column":0},"end":{"line":181,"column":2}},"62":{"start":{"line":176,"column":2},"end":{"line":176,"column":49}},"63":{"start":{"line":179,"column":2},"end":{"line":179,"column":59}},"64":{"start":{"line":188,"column":0},"end":{"line":209,"column":2}},"65":{"start":{"line":189,"column":2},"end":{"line":189,"column":68}},"66":{"start":{"line":190,"column":2},"end":{"line":190,"column":24}},"67":{"start":{"line":193,"column":2},"end":{"line":201,"column":3}},"68":{"start":{"line":194,"column":4},"end":{"line":200,"column":5}},"69":{"start":{"line":195,"column":6},"end":{"line":195,"column":36}},"70":{"start":{"line":197,"column":6},"end":{"line":199,"column":8}},"71":{"start":{"line":203,"column":2},"end":{"line":207,"column":4}},"72":{"start":{"line":215,"column":0},"end":{"line":218,"column":2}},"73":{"start":{"line":217,"column":2},"end":{"line":217,"column":33}},"74":{"start":{"line":223,"column":0},"end":{"line":237,"column":2}},"75":{"start":{"line":226,"column":2},"end":{"line":235,"column":3}},"76":{"start":{"line":229,"column":4},"end":{"line":233,"column":5}},"77":{"start":{"line":230,"column":6},"end":{"line":230,"column":54}},"78":{"start":{"line":232,"column":6},"end":{"line":232,"column":50}},"79":{"start":{"line":244,"column":0},"end":{"line":262,"column":2}},"80":{"start":{"line":246,"column":2},"end":{"line":248,"column":6}},"81":{"start":{"line":251,"column":2},"end":{"line":258,"column":3}},"82":{"start":{"line":253,"column":4},"end":{"line":256,"column":5}},"83":{"start":{"line":254,"column":6},"end":{"line":254,"column":20}},"84":{"start":{"line":255,"column":6},"end":{"line":255,"column":12}},"85":{"start":{"line":260,"column":2},"end":{"line":260,"column":16}},"86":{"start":{"line":267,"column":0},"end":{"line":272,"column":2}},"87":{"start":{"line":269,"column":2},"end":{"line":269,"column":41}},"88":{"start":{"line":270,"column":2},"end":{"line":270,"column":23}},"89":{"start":{"line":271,"column":2},"end":{"line":271,"column":50}},"90":{"start":{"line":274,"column":0},"end":{"line":274,"column":25}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":23},"end":{"line":68,"column":30}},{"start":{"line":68,"column":34},"end":{"line":68,"column":72}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"5":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"6":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"8":{"line":99,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"9":{"line":99,"type":"binary-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":19}},{"start":{"line":100,"column":23},"end":{"line":100,"column":47}},{"start":{"line":100,"column":51},"end":{"line":100,"column":66}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"11":{"line":125,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"12":{"line":130,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"13":{"line":136,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"14":{"line":188,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"15":{"line":188,"type":"binary-expr","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":18}},{"start":{"line":193,"column":22},"end":{"line":193,"column":57}}]},"16":{"line":220,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"17":{"line":223,"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":229,"column":4}},{"start":{"line":229,"column":4},"end":{"line":229,"column":4}}]},"18":{"line":245,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]}},"code":["var Promise = require('pinkyswear');","var extend = require('extend');","","var JWTUtils = require('./JWTUtils');","","var VALID_RESPONSE_CODES = [200, 201, 202, 204];","","/**"," * A wrapper around the XMLHttpRequest object."," * @param {object}  options         Options for the request."," * @param {boolean} options.async   Whether to perform the request asynchronously"," * @param {string}  options.method  REST verb to use for the request."," * @param {string}  options.url     URL for the request."," */","var Request = function (options) {","","  this.defaults = {","    async: true,","    method: 'GET',","    ignoreAcceptHeader: false","  };","","  // Create the XHR object for this request.","  this.request = new XMLHttpRequest();","","  // Set up event listeners for this request.","  this.setupListeners();","","  // Todo, merge some defaults with this.","  this.options = extend(true, this.defaults, options);","","};","","/**"," * Send the request and return a promise to resolve when the request is complete."," * @return {Promise} A promise which resolves when the request is complete."," */","Request.prototype.send = function () {","","  this.promise = Promise();","","  // Make sure a url is passed before attempting to make the request.","  if (this.options.url) {","    // Make the actual request.","    this.makeRequest();","  } else {","    this.requestError('Request Error : a url is required to make the request.');","  }","","  return this.promise;","","};","","/**"," * Add event listeners to the XMLHttpRequest object."," */","Request.prototype.setupListeners = function () {","  this.request.onreadystatechange = this.readyStateChange.bind(this);","};","","/**"," * Execute the open and send of the XMLHttpRequest"," */","Request.prototype.makeRequest = function () {","","  var postData = this.preparePostData(this.options.data);","  var headers = this.options.headers;","  var hasContentType = headers && headers.hasOwnProperty('Content-Type');","","  if (!postData.success) {","    this.requestError('Request Error : error preparing post data.');","    return;","  }","","  this.request.open(this.options.method, this.options.url, this.options.async);","","  // Set before we apply the headers so it can be overridden on a per request basis.","  if (!this.options.ignoreAcceptHeader) {","    this.request.setRequestHeader('Accept', 'application/vnd.ingest.v1+json');","  }","","  if (headers) {","    this.applyRequestHeaders(headers);","  }","","  // Make the token optional.","  if (this.options.token) {","","    // If there is a token present ensure that it's still valid.","    if (JWTUtils.isExpired(this.options.token)) {","      this.requestError('Request Error : token is expired.');","      return;","    }","","    this.request.setRequestHeader('Authorization', this.options.token);","","  }","","  // Set the default content type when posting data.","  if (postData.data && postData.type === 'JSON' && !hasContentType) {","    this.request.setRequestHeader('Content-Type', 'application/vnd.ingest.v1+json');","  }","","  // If there is data then we need to pass that along with the request.","  if (postData.data) {","    this.request.send(postData.data);","  } else {","    this.request.send();","  }","","};","","/**"," * Stringify the post data if it is present."," * @param  {object} data Object to be parsed."," * @return {object}      Result object with the parsed string, and a success boolean flag."," */","Request.prototype.preparePostData = function (data) {","","  var result = {","    success: true,","    data: data,","    type: 'JSON'","  };","","  // In the case of file uploads, all FormData to be passed to the request.","  if (data instanceof FormData) {","    result.type = 'FormData';","    return result;","  }","","  if (data instanceof Blob) {","    result.type = 'File';","    return result;","  }","","  // If the data is populated, and its not already a string parse it.","  if (data) {","    try {","      result.data = JSON.stringify(data);","    } catch (error) {","      result.success = false;","      result.data = null;","    }","  }","","  return result;","","};","","/**"," * Apply any supplied headers to the request object."," * @param  {object} headers Array of headers to apply to the request object."," */","Request.prototype.applyRequestHeaders = function (headers) {","","  var key, i;","  var keys = Object.keys(headers);","  var keysLength = keys.length;","","  // Loop through and add the keys to the requestHeaders.","  for (i = 0; i < keysLength; i++) {","    key = keys[i];","    this.request.setRequestHeader(key, headers[key]);","  }","","};","","/**"," * Handle the completion of the request and fulfill the promise."," * @param  {String} Response test of the request."," */","Request.prototype.requestComplete = function (response) {","","  // Process the result.","  this.response = this.processResponse(response);","","  // Either resolve or reject the promise.","  this.promise(!this.response.data.error, [this.response]);","","};","","/**"," * Process the response and parse certain content types."," * @param  {*}  response  Response data from request."," * @return {*}            Processed response data."," */","Request.prototype.processResponse = function (response) {","  var responseType = this.request.getResponseHeader('Content-Type');","  var result = response;","","  // Parse JSON if the result is JSON.","  if (responseType && responseType.indexOf('json') !== -1) {","    try {","      result = JSON.parse(response);","    } catch (error) {","      result = {","        error: 'JSON parsing failed. ' + error.stack","      };","    }","  }","","  return {","    data: result,","    headers: this.request.getResponseHeader.bind(this.request),","    statusCode: this.request.status","  };","","};","","/**"," * Resolve the promise."," * @param  {String} message   Error message."," */","Request.prototype.requestError = function (message) {","  // Reject the promise.","  this.promise(false, [message]);","};","","/**"," * Handle ready state change events."," */","Request.prototype.readyStateChange = function () {","","  // Request is complete.","  if (this.request.readyState === 4) {","","    // Check if the final response code is valid.","    if (this.isValidResponseCode(this.request.status)) {","      this.requestComplete(this.request.responseText);","    } else {","      this.requestError('Invalid response code.');","    }","","  }","","};","","/**"," * Validate the current response code to see if the request was a success."," * @param  {String}  responseCode Response Code."," * @return {Boolean}              Should this be treated as a successful response code."," */","Request.prototype.isValidResponseCode = function (responseCode) {","","  var result = false,","    responseCodeCount = VALID_RESPONSE_CODES.length,","    i;","","  // Check if the supplied code is in our list of valid codes.","  for (i = 0; i < responseCodeCount; i++) {","","    if (responseCode === VALID_RESPONSE_CODES[i]) {","      result = true;","      break;","    }","","  }","","  return result;","","};","","/**"," * Cancel the current XHR request."," */","Request.prototype.cancel = function () {","  // Remove the event listener.","  this.request.onreadystatechange = null;","  this.request.abort();","  this.requestError('Request has been canceled.');","};","","module.exports = Request;",""]};
	}
	__cov_JMw1OCqc$w3bDCEXNhXu$g = __cov_JMw1OCqc$w3bDCEXNhXu$g['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js'];
	__cov_JMw1OCqc$w3bDCEXNhXu$g.s['1']++;var Promise=__webpack_require__(4);__cov_JMw1OCqc$w3bDCEXNhXu$g.s['2']++;var extend=__webpack_require__(2);__cov_JMw1OCqc$w3bDCEXNhXu$g.s['3']++;var JWTUtils=__webpack_require__(8);__cov_JMw1OCqc$w3bDCEXNhXu$g.s['4']++;var VALID_RESPONSE_CODES=[200,201,202,204];__cov_JMw1OCqc$w3bDCEXNhXu$g.s['5']++;var Request=function Request(options){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['1']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['6']++;this.defaults={async:true,method:'GET',ignoreAcceptHeader:false};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['7']++;this.request=new XMLHttpRequest();__cov_JMw1OCqc$w3bDCEXNhXu$g.s['8']++;this.setupListeners();__cov_JMw1OCqc$w3bDCEXNhXu$g.s['9']++;this.options=extend(true,this.defaults,options);};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['10']++;Request.prototype.send=function(){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['2']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['11']++;this.promise=Promise();__cov_JMw1OCqc$w3bDCEXNhXu$g.s['12']++;if(this.options.url){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['1'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['13']++;this.makeRequest();}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['1'][1]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['14']++;this.requestError('Request Error : a url is required to make the request.');}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['15']++;return this.promise;};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['16']++;Request.prototype.setupListeners=function(){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['3']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['17']++;this.request.onreadystatechange=this.readyStateChange.bind(this);};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['18']++;Request.prototype.makeRequest=function(){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['4']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['19']++;var postData=this.preparePostData(this.options.data);__cov_JMw1OCqc$w3bDCEXNhXu$g.s['20']++;var headers=this.options.headers;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['21']++;var hasContentType=(__cov_JMw1OCqc$w3bDCEXNhXu$g.b['2'][0]++,headers)&&(__cov_JMw1OCqc$w3bDCEXNhXu$g.b['2'][1]++,headers.hasOwnProperty('Content-Type'));__cov_JMw1OCqc$w3bDCEXNhXu$g.s['22']++;if(!postData.success){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['3'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['23']++;this.requestError('Request Error : error preparing post data.');__cov_JMw1OCqc$w3bDCEXNhXu$g.s['24']++;return;}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['3'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['25']++;this.request.open(this.options.method,this.options.url,this.options.async);__cov_JMw1OCqc$w3bDCEXNhXu$g.s['26']++;if(!this.options.ignoreAcceptHeader){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['4'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['27']++;this.request.setRequestHeader('Accept','application/vnd.ingest.v1+json');}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['4'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['28']++;if(headers){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['5'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['29']++;this.applyRequestHeaders(headers);}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['5'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['30']++;if(this.options.token){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['6'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['31']++;if(JWTUtils.isExpired(this.options.token)){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['7'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['32']++;this.requestError('Request Error : token is expired.');__cov_JMw1OCqc$w3bDCEXNhXu$g.s['33']++;return;}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['7'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['34']++;this.request.setRequestHeader('Authorization',this.options.token);}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['6'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['35']++;if((__cov_JMw1OCqc$w3bDCEXNhXu$g.b['9'][0]++,postData.data)&&(__cov_JMw1OCqc$w3bDCEXNhXu$g.b['9'][1]++,postData.type==='JSON')&&(__cov_JMw1OCqc$w3bDCEXNhXu$g.b['9'][2]++,!hasContentType)){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['8'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['36']++;this.request.setRequestHeader('Content-Type','application/vnd.ingest.v1+json');}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['8'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['37']++;if(postData.data){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['10'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['38']++;this.request.send(postData.data);}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['10'][1]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['39']++;this.request.send();}};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['40']++;Request.prototype.preparePostData=function(data){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['5']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['41']++;var result={success:true,data:data,type:'JSON'};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['42']++;if(data instanceof FormData){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['11'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['43']++;result.type='FormData';__cov_JMw1OCqc$w3bDCEXNhXu$g.s['44']++;return result;}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['11'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['45']++;if(data instanceof Blob){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['12'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['46']++;result.type='File';__cov_JMw1OCqc$w3bDCEXNhXu$g.s['47']++;return result;}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['12'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['48']++;if(data){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['13'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['49']++;try{__cov_JMw1OCqc$w3bDCEXNhXu$g.s['50']++;result.data=JSON.stringify(data);}catch(error){__cov_JMw1OCqc$w3bDCEXNhXu$g.s['51']++;result.success=false;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['52']++;result.data=null;}}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['13'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['53']++;return result;};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['54']++;Request.prototype.applyRequestHeaders=function(headers){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['6']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['55']++;var key,i;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['56']++;var keys=Object.keys(headers);__cov_JMw1OCqc$w3bDCEXNhXu$g.s['57']++;var keysLength=keys.length;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['58']++;for(i=0;i<keysLength;i++){__cov_JMw1OCqc$w3bDCEXNhXu$g.s['59']++;key=keys[i];__cov_JMw1OCqc$w3bDCEXNhXu$g.s['60']++;this.request.setRequestHeader(key,headers[key]);}};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['61']++;Request.prototype.requestComplete=function(response){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['7']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['62']++;this.response=this.processResponse(response);__cov_JMw1OCqc$w3bDCEXNhXu$g.s['63']++;this.promise(!this.response.data.error,[this.response]);};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['64']++;Request.prototype.processResponse=function(response){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['8']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['65']++;var responseType=this.request.getResponseHeader('Content-Type');__cov_JMw1OCqc$w3bDCEXNhXu$g.s['66']++;var result=response;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['67']++;if((__cov_JMw1OCqc$w3bDCEXNhXu$g.b['15'][0]++,responseType)&&(__cov_JMw1OCqc$w3bDCEXNhXu$g.b['15'][1]++,responseType.indexOf('json')!==-1)){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['14'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['68']++;try{__cov_JMw1OCqc$w3bDCEXNhXu$g.s['69']++;result=JSON.parse(response);}catch(error){__cov_JMw1OCqc$w3bDCEXNhXu$g.s['70']++;result={error:'JSON parsing failed. '+error.stack};}}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['14'][1]++;}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['71']++;return{data:result,headers:this.request.getResponseHeader.bind(this.request),statusCode:this.request.status};};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['72']++;Request.prototype.requestError=function(message){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['9']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['73']++;this.promise(false,[message]);};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['74']++;Request.prototype.readyStateChange=function(){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['10']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['75']++;if(this.request.readyState===4){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['16'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['76']++;if(this.isValidResponseCode(this.request.status)){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['17'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['77']++;this.requestComplete(this.request.responseText);}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['17'][1]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['78']++;this.requestError('Invalid response code.');}}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['16'][1]++;}};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['79']++;Request.prototype.isValidResponseCode=function(responseCode){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['11']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['80']++;var result=false,responseCodeCount=VALID_RESPONSE_CODES.length,i;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['81']++;for(i=0;i<responseCodeCount;i++){__cov_JMw1OCqc$w3bDCEXNhXu$g.s['82']++;if(responseCode===VALID_RESPONSE_CODES[i]){__cov_JMw1OCqc$w3bDCEXNhXu$g.b['18'][0]++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['83']++;result=true;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['84']++;break;}else{__cov_JMw1OCqc$w3bDCEXNhXu$g.b['18'][1]++;}}__cov_JMw1OCqc$w3bDCEXNhXu$g.s['85']++;return result;};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['86']++;Request.prototype.cancel=function(){__cov_JMw1OCqc$w3bDCEXNhXu$g.f['12']++;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['87']++;this.request.onreadystatechange=null;__cov_JMw1OCqc$w3bDCEXNhXu$g.s['88']++;this.request.abort();__cov_JMw1OCqc$w3bDCEXNhXu$g.s['89']++;this.requestError('Request has been canceled.');};__cov_JMw1OCqc$w3bDCEXNhXu$g.s['90']++;module.exports=Request;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module, setImmediate, process) {/*
	 * PinkySwear.js 2.2.2 - Minimalistic implementation of the Promises/A+ spec
	 * 
	 * Public Domain. Use, modify and distribute it any way you like. No attribution required.
	 *
	 * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
	 *
	 * PinkySwear is a very small implementation of the Promises/A+ specification. After compilation with the
	 * Google Closure Compiler and gzipping it weighs less than 500 bytes. It is based on the implementation for 
	 * Minified.js and should be perfect for embedding. 
	 *
	 *
	 * PinkySwear has just three functions.
	 *
	 * To create a new promise in pending state, call pinkySwear():
	 *         var promise = pinkySwear();
	 *
	 * The returned object has a Promises/A+ compatible then() implementation:
	 *          promise.then(function(value) { alert("Success!"); }, function(value) { alert("Failure!"); });
	 *
	 *
	 * The promise returned by pinkySwear() is a function. To fulfill the promise, call the function with true as first argument and
	 * an optional array of values to pass to the then() handler. By putting more than one value in the array, you can pass more than one
	 * value to the then() handlers. Here an example to fulfill a promsise, this time with only one argument: 
	 *         promise(true, [42]);
	 *
	 * When the promise has been rejected, call it with false. Again, there may be more than one argument for the then() handler:
	 *         promise(true, [6, 6, 6]);
	 *         
	 * You can obtain the promise's current state by calling the function without arguments. It will be true if fulfilled,
	 * false if rejected, and otherwise undefined.
	 * 		   var state = promise(); 
	 * 
	 * https://github.com/timjansen/PinkySwear.js
	 */
	(function(target) {
		var undef;
	
		function isFunction(f) {
			return typeof f == 'function';
		}
		function isObject(f) {
			return typeof f == 'object';
		}
		function defer(callback) {
			if (typeof setImmediate != 'undefined')
				setImmediate(callback);
			else if (typeof process != 'undefined' && process['nextTick'])
				process['nextTick'](callback);
			else
				setTimeout(callback, 0);
		}
	
		target[0][target[1]] = function pinkySwear(extend) {
			var state;           // undefined/null = pending, true = fulfilled, false = rejected
			var values = [];     // an array of values as arguments for the then() handlers
			var deferred = [];   // functions to call when set() is invoked
	
			var set = function(newState, newValues) {
				if (state == null && newState != null) {
					state = newState;
					values = newValues;
					if (deferred.length)
						defer(function() {
							for (var i = 0; i < deferred.length; i++)
								deferred[i]();
						});
				}
				return state;
			};
	
			set['then'] = function (onFulfilled, onRejected) {
				var promise2 = pinkySwear(extend);
				var callCallbacks = function() {
		    		try {
		    			var f = (state ? onFulfilled : onRejected);
		    			if (isFunction(f)) {
			   				function resolve(x) {
							    var then, cbCalled = 0;
			   					try {
					   				if (x && (isObject(x) || isFunction(x)) && isFunction(then = x['then'])) {
											if (x === promise2)
												throw new TypeError();
											then['call'](x,
												function() { if (!cbCalled++) resolve.apply(undef,arguments); } ,
												function(value){ if (!cbCalled++) promise2(false,[value]);});
					   				}
					   				else
					   					promise2(true, arguments);
			   					}
			   					catch(e) {
			   						if (!cbCalled++)
			   							promise2(false, [e]);
			   					}
			   				}
			   				resolve(f.apply(undef, values || []));
			   			}
			   			else
			   				promise2(state, values);
					}
					catch (e) {
						promise2(false, [e]);
					}
				};
				if (state != null)
					defer(callCallbacks);
				else
					deferred.push(callCallbacks);
				return promise2;
			};
	        if(extend){
	            set = extend(set);
	        }
			return set;
		};
	})( false ? [window, 'pinkySwear'] : [module, 'exports']);
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), __webpack_require__(6).setImmediate, __webpack_require__(7)))

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(7).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);
	
	  immediateIds[id] = true;
	
	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });
	
	  return id;
	};
	
	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).setImmediate, __webpack_require__(6).clearImmediate))

/***/ },
/* 7 */
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";
	var __cov_Am0pO3ueQ2RGNz2sQSLU9w = (Function('return this'))();
	if (!__cov_Am0pO3ueQ2RGNz2sQSLU9w.__coverage__) { __cov_Am0pO3ueQ2RGNz2sQSLU9w.__coverage__ = {}; }
	__cov_Am0pO3ueQ2RGNz2sQSLU9w = __cov_Am0pO3ueQ2RGNz2sQSLU9w.__coverage__;
	if (!(__cov_Am0pO3ueQ2RGNz2sQSLU9w['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/JWTUtils.js'])) {
	   __cov_Am0pO3ueQ2RGNz2sQSLU9w['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/JWTUtils.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/JWTUtils.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"parseTokenPayload","line":12,"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":41}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":32,"column":27},"end":{"line":32,"column":44}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":25,"column":2}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":31}},"3":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":32}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"8":{"start":{"line":32,"column":0},"end":{"line":61,"column":2}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":29}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":16}},"12":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":18}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":17}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":29}},"17":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":18}},"19":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":19}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":16}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]}},"code":["/**"," * UTILS for dealing with jwt tokens."," */","","/**"," * Parse the payload out of the JWT token."," * @param  {string} token JWT Token."," * @return {object}       Parsed payload object."," */","var parseTokenPayload = function (token) {","  var parts = token.split('.');","","  // Return false if the token is invalid.","  if (parts.length <= 1) {","    return false;","  }","","  // decode the payload portion.","  var payload = window.atob(parts[1]);","","  // parse it as JSON","  payload = JSON.parse(payload);","","  return payload;","};","","/**"," * Return true if the provided token has expired."," * @param  {string}  token JWT Token"," * @return {Boolean}       True if expired."," */","module.exports.isExpired = function (token) {","  var data, exp, result, now;","","  data = parseTokenPayload(token);","","  result = true;","","  // Return true if the token does not parse properly.","  if (!data) {","    return result;","  }","","  exp = data.exp;","","  // Get the unix timestamp in seconds.","  now = new Date();","  now = now.getTime() / 1000;","","  if (!exp) {","    return result;","  }","","  // If the expiry data is still in the future.","  if (now < exp) {","    result = false;","  }","","  return result;","","};",""]};
	}
	__cov_Am0pO3ueQ2RGNz2sQSLU9w = __cov_Am0pO3ueQ2RGNz2sQSLU9w['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/JWTUtils.js'];
	__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['1']++;var parseTokenPayload=function parseTokenPayload(token){__cov_Am0pO3ueQ2RGNz2sQSLU9w.f['1']++;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['2']++;var parts=token.split('.');__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['3']++;if(parts.length<=1){__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['1'][0]++;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['4']++;return false;}else{__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['1'][1]++;}__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['5']++;var payload=window.atob(parts[1]);__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['6']++;payload=JSON.parse(payload);__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['7']++;return payload;};__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['8']++;module.exports.isExpired=function(token){__cov_Am0pO3ueQ2RGNz2sQSLU9w.f['2']++;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['9']++;var data,exp,result,now;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['10']++;data=parseTokenPayload(token);__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['11']++;result=true;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['12']++;if(!data){__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['2'][0]++;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['13']++;return result;}else{__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['2'][1]++;}__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['14']++;exp=data.exp;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['15']++;now=new Date();__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['16']++;now=now.getTime()/1000;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['17']++;if(!exp){__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['3'][0]++;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['18']++;return result;}else{__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['3'][1]++;}__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['19']++;if(now<exp){__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['4'][0]++;__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['20']++;result=false;}else{__cov_Am0pO3ueQ2RGNz2sQSLU9w.b['4'][1]++;}__cov_Am0pO3ueQ2RGNz2sQSLU9w.s['21']++;return result;};


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_Of47py8ROej7NDBBlvlfiA = (Function('return this'))();
	if (!__cov_Of47py8ROej7NDBBlvlfiA.__coverage__) { __cov_Of47py8ROej7NDBBlvlfiA.__coverage__ = {}; }
	__cov_Of47py8ROej7NDBBlvlfiA = __cov_Of47py8ROej7NDBBlvlfiA.__coverage__;
	if (!(__cov_Of47py8ROej7NDBBlvlfiA['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Utils.js'])) {
	   __cov_Of47py8ROej7NDBBlvlfiA['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Utils.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Utils.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":19,"column":20},"end":{"line":19,"column":46}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":41,"column":18},"end":{"line":41,"column":42}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":55,"column":15},"end":{"line":55,"column":43}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":86,"column":27},"end":{"line":86,"column":58}}},"5":{"name":"(anonymous_5)","line":101,"loc":{"start":{"line":101,"column":24},"end":{"line":101,"column":56}}},"6":{"name":"(anonymous_6)","line":128,"loc":{"start":{"line":129,"column":21},"end":{"line":129,"column":50}}},"7":{"name":"(anonymous_7)","line":137,"loc":{"start":{"line":138,"column":21},"end":{"line":138,"column":43}}},"8":{"name":"(anonymous_8)","line":146,"loc":{"start":{"line":147,"column":22},"end":{"line":147,"column":44}}},"9":{"name":"(anonymous_9)","line":159,"loc":{"start":{"line":160,"column":22},"end":{"line":160,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":15}},"3":{"start":{"line":19,"column":0},"end":{"line":33,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":8}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}},"9":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":71}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"12":{"start":{"line":41,"column":0},"end":{"line":47,"column":2}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":26}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":17}},"16":{"start":{"line":55,"column":0},"end":{"line":79,"column":2}},"17":{"start":{"line":57,"column":2},"end":{"line":57,"column":38}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":22}},"19":{"start":{"line":60,"column":2},"end":{"line":66,"column":4}},"20":{"start":{"line":68,"column":2},"end":{"line":68,"column":61}},"21":{"start":{"line":69,"column":2},"end":{"line":69,"column":63}},"22":{"start":{"line":70,"column":2},"end":{"line":70,"column":89}},"23":{"start":{"line":72,"column":2},"end":{"line":75,"column":3}},"24":{"start":{"line":73,"column":4},"end":{"line":73,"column":25}},"25":{"start":{"line":74,"column":4},"end":{"line":74,"column":54}},"26":{"start":{"line":77,"column":2},"end":{"line":77,"column":13}},"27":{"start":{"line":86,"column":0},"end":{"line":92,"column":2}},"28":{"start":{"line":88,"column":2},"end":{"line":91,"column":3}},"29":{"start":{"line":89,"column":4},"end":{"line":90,"column":54}},"30":{"start":{"line":101,"column":0},"end":{"line":121,"column":2}},"31":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"32":{"start":{"line":105,"column":4},"end":{"line":105,"column":11}},"33":{"start":{"line":109,"column":2},"end":{"line":109,"column":19}},"34":{"start":{"line":110,"column":2},"end":{"line":110,"column":33}},"35":{"start":{"line":112,"column":2},"end":{"line":119,"column":3}},"36":{"start":{"line":113,"column":4},"end":{"line":113,"column":31}},"37":{"start":{"line":115,"column":4},"end":{"line":118,"column":5}},"38":{"start":{"line":117,"column":6},"end":{"line":117,"column":75}},"39":{"start":{"line":129,"column":0},"end":{"line":131,"column":2}},"40":{"start":{"line":130,"column":2},"end":{"line":130,"column":22}},"41":{"start":{"line":138,"column":0},"end":{"line":140,"column":2}},"42":{"start":{"line":139,"column":2},"end":{"line":139,"column":22}},"43":{"start":{"line":147,"column":0},"end":{"line":153,"column":2}},"44":{"start":{"line":148,"column":2},"end":{"line":148,"column":23}},"45":{"start":{"line":150,"column":2},"end":{"line":152,"column":3}},"46":{"start":{"line":151,"column":4},"end":{"line":151,"column":73}},"47":{"start":{"line":160,"column":0},"end":{"line":163,"column":2}},"48":{"start":{"line":161,"column":2},"end":{"line":161,"column":24}},"49":{"start":{"line":162,"column":2},"end":{"line":162,"column":16}},"50":{"start":{"line":165,"column":0},"end":{"line":165,"column":23}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":74,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"4":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"5":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"7":{"line":149,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]}},"code":["var Promise = require('pinkyswear');","var Utils = {};","/**"," * Replace all tokens within a given template based on the given key/value pair."," * @param  {string}     template    Template for the url."," * @param  {object}     hash        Key/Value pair for replacing tokens in the template."," *"," * @example"," * var tokens = {"," *  keyInTemplate: 'replacedWith'"," * };"," *"," * var template = '<%=keyInTemplate%>';"," *"," * var result = parseTokens(template, tokens);  // 'replacedWith'"," *"," * @return {string}                 Parsed string."," */","Utils.parseTokens = function (template, hash) {","  if (!template) {","    return null;","  }","","  var keys = Object.keys(hash);","  var i;","  var length = keys.length;","","  for (i = 0; i < length; i++) {","    template = template.replace('<%=' + keys[i] + '%>', hash[keys[i]]);","  }","","  return template;","};","","/**"," * Wrapper function to wrap a value in either a reject or resolve."," * @param  {boolean} state Rejection or Approval."," * @param  {*}       value Value to pass back to the promise."," * @return {Promise}       Promise/A+ spec promise."," */","Utils.promisify = function (state, value) {","  var promise = Promise();","","  promise(state, [value]);","","  return promise;","};","","/**"," * Wrap an array of promises and return when they have all completed."," * @param   {Array}     promises  An array of promises to manage."," * @param   {boolean}   paused    A boolean to pause the execution of the promises."," * @return  {Promise}             A promise that is resolved when all of the promises have fulfilled."," */","Utils.series = function (promises, paused) {","","  var promisesCount = promises.length;","  var all = Promise();","","  var state = {","    total: promisesCount,","    complete: 0,","    responses: [],","    promises: promises,","    paused: true","  };","","  all.pause = Utils._seriesPause.bind(undefined, all, state);","  all.resume = Utils._seriesResume.bind(undefined, all, state);","  all.cancel = Utils._seriesCancel.bind(undefined, all, 'The Series has been canceled.');","","  if (!paused) {","    state.paused = false;","    Utils._seriesCallPromise(promises[0], state, all);","  }","","  return all;","","};","","/**"," * Call a promise and pass the complete and error functions."," * @param  {Promise} promise Promise to execute on."," * @param  {Object} state   Persistent state of the series of promises."," */","Utils._seriesCallPromise = function (promise, state, all) {","  // call the promise;","  if (!state.paused) {","    promise().then(Utils._seriesComplete.bind(undefined, all, state),","      Utils._seriesError.bind(undefined, all, state));","  }","};","","/**"," * Manage the progress of the promises."," * @private"," * @param  {Promise} all      All promise."," * @param  {Object}  state    State object used to persist the promise count."," * @param  {Object}  response Response of the promise being fulfilled."," */","Utils._seriesComplete = function (all, state, response) {","","  // Early return if this has been canceled.","  if (state.canceled) {","    return;","  }","","  // Increment the complete promises.","  state.complete++;","  state.responses.push(response);","","  if (state.complete >= state.total) {","    all(true, state.responses);","  } else {","    if (!state.paused) {","      // Execute the next promise.","      Utils._seriesCallPromise(state.promises[state.complete], state, all);","    }","  }","","};","","/**"," * Immediately reject the promise if there is an error."," * @param  {Promise} all  All promise."," * @param  {Object}  state    State object used to persist the promise count."," * @param  {Object}  response Response of the promise being fulfilled."," */","Utils._seriesError = function (all, state, error) {","  all(false, [error]);","};","","/**"," * Pause the current series of promises."," * @param  {Promise} all  All promise."," * @param  {Object}  state    State object used to persist the promise count."," */","Utils._seriesPause = function (all, state) {","  state.paused = true;","};","","/**"," * Resume the current series of promises."," * @param  {Promise} all  All promise."," * @param  {Object}  state    State object used to persist the promise count."," */","Utils._seriesResume = function (all, state) {","  state.paused = false;","","  if (state.complete !== state.total) {","    Utils._seriesCallPromise(state.promises[state.complete], state, all);","  }","};","","/**"," * Resolve the promise but return an empty response."," * @param  {Promise}  all     All promise."," * @param  {Object}   state   State object used to persist the promise count."," */","Utils._seriesCancel = function (all, state) {","  state.canceled = true;","  all(true, []);","};","","module.exports = Utils;",""]};
	}
	__cov_Of47py8ROej7NDBBlvlfiA = __cov_Of47py8ROej7NDBBlvlfiA['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Utils.js'];
	__cov_Of47py8ROej7NDBBlvlfiA.s['1']++;var Promise=__webpack_require__(4);__cov_Of47py8ROej7NDBBlvlfiA.s['2']++;var Utils={};__cov_Of47py8ROej7NDBBlvlfiA.s['3']++;Utils.parseTokens=function(template,hash){__cov_Of47py8ROej7NDBBlvlfiA.f['1']++;__cov_Of47py8ROej7NDBBlvlfiA.s['4']++;if(!template){__cov_Of47py8ROej7NDBBlvlfiA.b['1'][0]++;__cov_Of47py8ROej7NDBBlvlfiA.s['5']++;return null;}else{__cov_Of47py8ROej7NDBBlvlfiA.b['1'][1]++;}__cov_Of47py8ROej7NDBBlvlfiA.s['6']++;var keys=Object.keys(hash);__cov_Of47py8ROej7NDBBlvlfiA.s['7']++;var i;__cov_Of47py8ROej7NDBBlvlfiA.s['8']++;var length=keys.length;__cov_Of47py8ROej7NDBBlvlfiA.s['9']++;for(i=0;i<length;i++){__cov_Of47py8ROej7NDBBlvlfiA.s['10']++;template=template.replace('<%='+keys[i]+'%>',hash[keys[i]]);}__cov_Of47py8ROej7NDBBlvlfiA.s['11']++;return template;};__cov_Of47py8ROej7NDBBlvlfiA.s['12']++;Utils.promisify=function(state,value){__cov_Of47py8ROej7NDBBlvlfiA.f['2']++;__cov_Of47py8ROej7NDBBlvlfiA.s['13']++;var promise=Promise();__cov_Of47py8ROej7NDBBlvlfiA.s['14']++;promise(state,[value]);__cov_Of47py8ROej7NDBBlvlfiA.s['15']++;return promise;};__cov_Of47py8ROej7NDBBlvlfiA.s['16']++;Utils.series=function(promises,paused){__cov_Of47py8ROej7NDBBlvlfiA.f['3']++;__cov_Of47py8ROej7NDBBlvlfiA.s['17']++;var promisesCount=promises.length;__cov_Of47py8ROej7NDBBlvlfiA.s['18']++;var all=Promise();__cov_Of47py8ROej7NDBBlvlfiA.s['19']++;var state={total:promisesCount,complete:0,responses:[],promises:promises,paused:true};__cov_Of47py8ROej7NDBBlvlfiA.s['20']++;all.pause=Utils._seriesPause.bind(undefined,all,state);__cov_Of47py8ROej7NDBBlvlfiA.s['21']++;all.resume=Utils._seriesResume.bind(undefined,all,state);__cov_Of47py8ROej7NDBBlvlfiA.s['22']++;all.cancel=Utils._seriesCancel.bind(undefined,all,'The Series has been canceled.');__cov_Of47py8ROej7NDBBlvlfiA.s['23']++;if(!paused){__cov_Of47py8ROej7NDBBlvlfiA.b['2'][0]++;__cov_Of47py8ROej7NDBBlvlfiA.s['24']++;state.paused=false;__cov_Of47py8ROej7NDBBlvlfiA.s['25']++;Utils._seriesCallPromise(promises[0],state,all);}else{__cov_Of47py8ROej7NDBBlvlfiA.b['2'][1]++;}__cov_Of47py8ROej7NDBBlvlfiA.s['26']++;return all;};__cov_Of47py8ROej7NDBBlvlfiA.s['27']++;Utils._seriesCallPromise=function(promise,state,all){__cov_Of47py8ROej7NDBBlvlfiA.f['4']++;__cov_Of47py8ROej7NDBBlvlfiA.s['28']++;if(!state.paused){__cov_Of47py8ROej7NDBBlvlfiA.b['3'][0]++;__cov_Of47py8ROej7NDBBlvlfiA.s['29']++;promise().then(Utils._seriesComplete.bind(undefined,all,state),Utils._seriesError.bind(undefined,all,state));}else{__cov_Of47py8ROej7NDBBlvlfiA.b['3'][1]++;}};__cov_Of47py8ROej7NDBBlvlfiA.s['30']++;Utils._seriesComplete=function(all,state,response){__cov_Of47py8ROej7NDBBlvlfiA.f['5']++;__cov_Of47py8ROej7NDBBlvlfiA.s['31']++;if(state.canceled){__cov_Of47py8ROej7NDBBlvlfiA.b['4'][0]++;__cov_Of47py8ROej7NDBBlvlfiA.s['32']++;return;}else{__cov_Of47py8ROej7NDBBlvlfiA.b['4'][1]++;}__cov_Of47py8ROej7NDBBlvlfiA.s['33']++;state.complete++;__cov_Of47py8ROej7NDBBlvlfiA.s['34']++;state.responses.push(response);__cov_Of47py8ROej7NDBBlvlfiA.s['35']++;if(state.complete>=state.total){__cov_Of47py8ROej7NDBBlvlfiA.b['5'][0]++;__cov_Of47py8ROej7NDBBlvlfiA.s['36']++;all(true,state.responses);}else{__cov_Of47py8ROej7NDBBlvlfiA.b['5'][1]++;__cov_Of47py8ROej7NDBBlvlfiA.s['37']++;if(!state.paused){__cov_Of47py8ROej7NDBBlvlfiA.b['6'][0]++;__cov_Of47py8ROej7NDBBlvlfiA.s['38']++;Utils._seriesCallPromise(state.promises[state.complete],state,all);}else{__cov_Of47py8ROej7NDBBlvlfiA.b['6'][1]++;}}};__cov_Of47py8ROej7NDBBlvlfiA.s['39']++;Utils._seriesError=function(all,state,error){__cov_Of47py8ROej7NDBBlvlfiA.f['6']++;__cov_Of47py8ROej7NDBBlvlfiA.s['40']++;all(false,[error]);};__cov_Of47py8ROej7NDBBlvlfiA.s['41']++;Utils._seriesPause=function(all,state){__cov_Of47py8ROej7NDBBlvlfiA.f['7']++;__cov_Of47py8ROej7NDBBlvlfiA.s['42']++;state.paused=true;};__cov_Of47py8ROej7NDBBlvlfiA.s['43']++;Utils._seriesResume=function(all,state){__cov_Of47py8ROej7NDBBlvlfiA.f['8']++;__cov_Of47py8ROej7NDBBlvlfiA.s['44']++;state.paused=false;__cov_Of47py8ROej7NDBBlvlfiA.s['45']++;if(state.complete!==state.total){__cov_Of47py8ROej7NDBBlvlfiA.b['7'][0]++;__cov_Of47py8ROej7NDBBlvlfiA.s['46']++;Utils._seriesCallPromise(state.promises[state.complete],state,all);}else{__cov_Of47py8ROej7NDBBlvlfiA.b['7'][1]++;}};__cov_Of47py8ROej7NDBBlvlfiA.s['47']++;Utils._seriesCancel=function(all,state){__cov_Of47py8ROej7NDBBlvlfiA.f['9']++;__cov_Of47py8ROej7NDBBlvlfiA.s['48']++;state.canceled=true;__cov_Of47py8ROej7NDBBlvlfiA.s['49']++;all(true,[]);};__cov_Of47py8ROej7NDBBlvlfiA.s['50']++;module.exports=Utils;


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_A8PhaNnj9wOCdm460FFv4Q = (Function('return this'))();
	if (!__cov_A8PhaNnj9wOCdm460FFv4Q.__coverage__) { __cov_A8PhaNnj9wOCdm460FFv4Q.__coverage__ = {}; }
	__cov_A8PhaNnj9wOCdm460FFv4Q = __cov_A8PhaNnj9wOCdm460FFv4Q.__coverage__;
	if (!(__cov_A8PhaNnj9wOCdm460FFv4Q['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Uploader.js'])) {
	   __cov_A8PhaNnj9wOCdm460FFv4Q['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Uploader.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Uploader.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"Upload","line":20,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"2":{"name":"(anonymous_2)","line":68,"loc":{"start":{"line":67,"column":28},"end":{"line":67,"column":48}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":75,"column":24},"end":{"line":75,"column":36}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":86,"column":35},"end":{"line":86,"column":65}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":101,"column":27},"end":{"line":101,"column":45}}},"6":{"name":"(anonymous_6)","line":115,"loc":{"start":{"line":116,"column":34},"end":{"line":116,"column":54}}},"7":{"name":"(anonymous_7)","line":130,"loc":{"start":{"line":131,"column":31},"end":{"line":131,"column":43}}},"8":{"name":"(anonymous_8)","line":166,"loc":{"start":{"line":169,"column":39},"end":{"line":169,"column":59}}},"9":{"name":"(anonymous_9)","line":178,"loc":{"start":{"line":181,"column":34},"end":{"line":181,"column":46}}},"10":{"name":"(anonymous_10)","line":193,"loc":{"start":{"line":198,"column":33},"end":{"line":198,"column":45}}},"11":{"name":"(anonymous_11)","line":236,"loc":{"start":{"line":238,"column":32},"end":{"line":238,"column":49}}},"12":{"name":"(anonymous_12)","line":250,"loc":{"start":{"line":254,"column":31},"end":{"line":254,"column":43}}},"13":{"name":"(anonymous_13)","line":270,"loc":{"start":{"line":278,"column":39},"end":{"line":278,"column":51}}},"14":{"name":"(anonymous_14)","line":280,"loc":{"start":{"line":288,"column":31},"end":{"line":288,"column":48}}},"15":{"name":"(anonymous_15)","line":319,"loc":{"start":{"line":327,"column":31},"end":{"line":327,"column":59}}},"16":{"name":"(anonymous_16)","line":344,"loc":{"start":{"line":352,"column":43},"end":{"line":352,"column":55}}},"17":{"name":"(anonymous_17)","line":355,"loc":{"start":{"line":363,"column":34},"end":{"line":363,"column":60}}},"18":{"name":"(anonymous_18)","line":385,"loc":{"start":{"line":393,"column":35},"end":{"line":393,"column":47}}},"19":{"name":"(anonymous_19)","line":416,"loc":{"start":{"line":425,"column":37},"end":{"line":425,"column":49}}},"20":{"name":"(anonymous_20)","line":433,"loc":{"start":{"line":442,"column":25},"end":{"line":442,"column":42}}},"21":{"name":"(anonymous_21)","line":497,"loc":{"start":{"line":508,"column":34},"end":{"line":508,"column":51}}},"22":{"name":"(anonymous_22)","line":504,"loc":{"start":{"line":515,"column":25},"end":{"line":515,"column":37}}},"23":{"name":"(anonymous_23)","line":531,"loc":{"start":{"line":544,"column":26},"end":{"line":544,"column":38}}},"24":{"name":"(anonymous_24)","line":550,"loc":{"start":{"line":564,"column":35},"end":{"line":564,"column":51}}},"25":{"name":"(anonymous_25)","line":564,"loc":{"start":{"line":578,"column":35},"end":{"line":578,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"6":{"start":{"line":18,"column":0},"end":{"line":61,"column":1}},"7":{"start":{"line":20,"column":2},"end":{"line":32,"column":4}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":57}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":29}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":31}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":19}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":22}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}},"15":{"start":{"line":44,"column":2},"end":{"line":44,"column":25}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":23}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":22}},"18":{"start":{"line":48,"column":2},"end":{"line":48,"column":23}},"19":{"start":{"line":49,"column":2},"end":{"line":49,"column":27}},"20":{"start":{"line":52,"column":2},"end":{"line":52,"column":30}},"21":{"start":{"line":54,"column":2},"end":{"line":59,"column":4}},"22":{"start":{"line":67,"column":0},"end":{"line":69,"column":2}},"23":{"start":{"line":68,"column":2},"end":{"line":68,"column":45}},"24":{"start":{"line":75,"column":0},"end":{"line":79,"column":2}},"25":{"start":{"line":76,"column":2},"end":{"line":78,"column":42}},"26":{"start":{"line":86,"column":0},"end":{"line":93,"column":2}},"27":{"start":{"line":88,"column":2},"end":{"line":90,"column":3}},"28":{"start":{"line":89,"column":4},"end":{"line":89,"column":11}},"29":{"start":{"line":92,"column":2},"end":{"line":92,"column":54}},"30":{"start":{"line":101,"column":0},"end":{"line":108,"column":2}},"31":{"start":{"line":103,"column":2},"end":{"line":105,"column":3}},"32":{"start":{"line":104,"column":4},"end":{"line":104,"column":52}},"33":{"start":{"line":107,"column":2},"end":{"line":107,"column":76}},"34":{"start":{"line":116,"column":0},"end":{"line":124,"column":2}},"35":{"start":{"line":118,"column":2},"end":{"line":118,"column":22}},"36":{"start":{"line":120,"column":2},"end":{"line":120,"column":29}},"37":{"start":{"line":121,"column":2},"end":{"line":121,"column":43}},"38":{"start":{"line":123,"column":2},"end":{"line":123,"column":28}},"39":{"start":{"line":131,"column":0},"end":{"line":163,"column":2}},"40":{"start":{"line":133,"column":2},"end":{"line":133,"column":10}},"41":{"start":{"line":134,"column":2},"end":{"line":134,"column":13}},"42":{"start":{"line":135,"column":2},"end":{"line":135,"column":19}},"43":{"start":{"line":136,"column":2},"end":{"line":136,"column":14}},"44":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"45":{"start":{"line":139,"column":4},"end":{"line":139,"column":52}},"46":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"47":{"start":{"line":143,"column":4},"end":{"line":143,"column":85}},"48":{"start":{"line":146,"column":2},"end":{"line":149,"column":4}},"49":{"start":{"line":151,"column":2},"end":{"line":151,"column":77}},"50":{"start":{"line":153,"column":2},"end":{"line":158,"column":5}},"51":{"start":{"line":160,"column":2},"end":{"line":161,"column":53}},"52":{"start":{"line":169,"column":0},"end":{"line":175,"column":2}},"53":{"start":{"line":170,"column":2},"end":{"line":170,"column":26}},"54":{"start":{"line":171,"column":2},"end":{"line":171,"column":42}},"55":{"start":{"line":172,"column":2},"end":{"line":172,"column":52}},"56":{"start":{"line":173,"column":2},"end":{"line":173,"column":43}},"57":{"start":{"line":174,"column":2},"end":{"line":174,"column":45}},"58":{"start":{"line":181,"column":0},"end":{"line":191,"column":2}},"59":{"start":{"line":182,"column":2},"end":{"line":190,"column":3}},"60":{"start":{"line":184,"column":4},"end":{"line":185,"column":47}},"61":{"start":{"line":188,"column":4},"end":{"line":189,"column":45}},"62":{"start":{"line":198,"column":0},"end":{"line":231,"column":2}},"63":{"start":{"line":199,"column":2},"end":{"line":199,"column":52}},"64":{"start":{"line":200,"column":2},"end":{"line":201,"column":23}},"65":{"start":{"line":203,"column":2},"end":{"line":206,"column":3}},"66":{"start":{"line":204,"column":4},"end":{"line":204,"column":17}},"67":{"start":{"line":205,"column":4},"end":{"line":205,"column":52}},"68":{"start":{"line":208,"column":2},"end":{"line":225,"column":3}},"69":{"start":{"line":210,"column":4},"end":{"line":210,"column":31}},"70":{"start":{"line":212,"column":4},"end":{"line":212,"column":67}},"71":{"start":{"line":214,"column":4},"end":{"line":214,"column":46}},"72":{"start":{"line":216,"column":4},"end":{"line":219,"column":6}},"73":{"start":{"line":221,"column":4},"end":{"line":221,"column":28}},"74":{"start":{"line":223,"column":4},"end":{"line":223,"column":60}},"75":{"start":{"line":228,"column":2},"end":{"line":228,"column":67}},"76":{"start":{"line":230,"column":2},"end":{"line":230,"column":31}},"77":{"start":{"line":238,"column":0},"end":{"line":247,"column":2}},"78":{"start":{"line":239,"column":2},"end":{"line":239,"column":26}},"79":{"start":{"line":242,"column":2},"end":{"line":244,"column":58}},"80":{"start":{"line":246,"column":2},"end":{"line":246,"column":17}},"81":{"start":{"line":254,"column":0},"end":{"line":273,"column":2}},"82":{"start":{"line":255,"column":2},"end":{"line":257,"column":4}},"83":{"start":{"line":260,"column":2},"end":{"line":262,"column":3}},"84":{"start":{"line":261,"column":4},"end":{"line":261,"column":39}},"85":{"start":{"line":266,"column":2},"end":{"line":270,"column":47}},"86":{"start":{"line":272,"column":2},"end":{"line":272,"column":32}},"87":{"start":{"line":278,"column":0},"end":{"line":280,"column":2}},"88":{"start":{"line":279,"column":2},"end":{"line":279,"column":35}},"89":{"start":{"line":288,"column":0},"end":{"line":319,"column":2}},"90":{"start":{"line":289,"column":2},"end":{"line":289,"column":10}},"91":{"start":{"line":290,"column":2},"end":{"line":290,"column":19}},"92":{"start":{"line":291,"column":2},"end":{"line":291,"column":19}},"93":{"start":{"line":292,"column":2},"end":{"line":292,"column":14}},"94":{"start":{"line":295,"column":2},"end":{"line":297,"column":3}},"95":{"start":{"line":296,"column":4},"end":{"line":296,"column":50}},"96":{"start":{"line":299,"column":2},"end":{"line":299,"column":50}},"97":{"start":{"line":301,"column":2},"end":{"line":303,"column":3}},"98":{"start":{"line":302,"column":4},"end":{"line":302,"column":85}},"99":{"start":{"line":305,"column":2},"end":{"line":308,"column":5}},"100":{"start":{"line":310,"column":2},"end":{"line":316,"column":5}},"101":{"start":{"line":318,"column":2},"end":{"line":318,"column":24}},"102":{"start":{"line":327,"column":0},"end":{"line":347,"column":2}},"103":{"start":{"line":328,"column":2},"end":{"line":328,"column":19}},"104":{"start":{"line":329,"column":2},"end":{"line":329,"column":14}},"105":{"start":{"line":332,"column":2},"end":{"line":332,"column":50}},"106":{"start":{"line":333,"column":2},"end":{"line":333,"column":51}},"107":{"start":{"line":334,"column":2},"end":{"line":334,"column":51}},"108":{"start":{"line":336,"column":2},"end":{"line":342,"column":5}},"109":{"start":{"line":344,"column":2},"end":{"line":344,"column":32}},"110":{"start":{"line":346,"column":2},"end":{"line":346,"column":24}},"111":{"start":{"line":352,"column":0},"end":{"line":355,"column":2}},"112":{"start":{"line":353,"column":2},"end":{"line":353,"column":29}},"113":{"start":{"line":354,"column":2},"end":{"line":354,"column":44}},"114":{"start":{"line":363,"column":0},"end":{"line":385,"column":2}},"115":{"start":{"line":364,"column":2},"end":{"line":364,"column":15}},"116":{"start":{"line":366,"column":2},"end":{"line":366,"column":24}},"117":{"start":{"line":367,"column":2},"end":{"line":367,"column":24}},"118":{"start":{"line":369,"column":2},"end":{"line":369,"column":40}},"119":{"start":{"line":372,"column":2},"end":{"line":374,"column":3}},"120":{"start":{"line":373,"column":4},"end":{"line":373,"column":31}},"121":{"start":{"line":376,"column":2},"end":{"line":376,"column":55}},"122":{"start":{"line":378,"column":2},"end":{"line":378,"column":27}},"123":{"start":{"line":379,"column":2},"end":{"line":379,"column":34}},"124":{"start":{"line":381,"column":2},"end":{"line":381,"column":50}},"125":{"start":{"line":384,"column":2},"end":{"line":384,"column":20}},"126":{"start":{"line":393,"column":0},"end":{"line":418,"column":2}},"127":{"start":{"line":394,"column":2},"end":{"line":394,"column":10}},"128":{"start":{"line":395,"column":2},"end":{"line":395,"column":13}},"129":{"start":{"line":396,"column":2},"end":{"line":396,"column":14}},"130":{"start":{"line":399,"column":2},"end":{"line":401,"column":3}},"131":{"start":{"line":400,"column":4},"end":{"line":400,"column":11}},"132":{"start":{"line":403,"column":2},"end":{"line":405,"column":4}},"133":{"start":{"line":407,"column":2},"end":{"line":407,"column":85}},"134":{"start":{"line":409,"column":2},"end":{"line":414,"column":5}},"135":{"start":{"line":416,"column":2},"end":{"line":417,"column":51}},"136":{"start":{"line":425,"column":0},"end":{"line":433,"column":2}},"137":{"start":{"line":427,"column":2},"end":{"line":427,"column":28}},"138":{"start":{"line":429,"column":2},"end":{"line":429,"column":31}},"139":{"start":{"line":430,"column":2},"end":{"line":430,"column":29}},"140":{"start":{"line":431,"column":2},"end":{"line":431,"column":32}},"141":{"start":{"line":432,"column":2},"end":{"line":432,"column":28}},"142":{"start":{"line":442,"column":0},"end":{"line":501,"column":2}},"143":{"start":{"line":443,"column":2},"end":{"line":443,"column":10}},"144":{"start":{"line":444,"column":2},"end":{"line":444,"column":13}},"145":{"start":{"line":445,"column":2},"end":{"line":445,"column":14}},"146":{"start":{"line":447,"column":2},"end":{"line":449,"column":3}},"147":{"start":{"line":448,"column":4},"end":{"line":448,"column":17}},"148":{"start":{"line":451,"column":2},"end":{"line":451,"column":22}},"149":{"start":{"line":455,"column":2},"end":{"line":467,"column":3}},"150":{"start":{"line":457,"column":4},"end":{"line":465,"column":5}},"151":{"start":{"line":460,"column":6},"end":{"line":460,"column":63}},"152":{"start":{"line":464,"column":6},"end":{"line":464,"column":35}},"153":{"start":{"line":470,"column":2},"end":{"line":473,"column":3}},"154":{"start":{"line":471,"column":4},"end":{"line":471,"column":33}},"155":{"start":{"line":472,"column":4},"end":{"line":472,"column":31}},"156":{"start":{"line":475,"column":2},"end":{"line":479,"column":3}},"157":{"start":{"line":476,"column":4},"end":{"line":476,"column":34}},"158":{"start":{"line":478,"column":4},"end":{"line":478,"column":38}},"159":{"start":{"line":481,"column":2},"end":{"line":481,"column":33}},"160":{"start":{"line":482,"column":2},"end":{"line":482,"column":31}},"161":{"start":{"line":484,"column":2},"end":{"line":487,"column":4}},"162":{"start":{"line":489,"column":2},"end":{"line":489,"column":82}},"163":{"start":{"line":491,"column":2},"end":{"line":497,"column":5}},"164":{"start":{"line":499,"column":2},"end":{"line":500,"column":55}},"165":{"start":{"line":508,"column":0},"end":{"line":510,"column":2}},"166":{"start":{"line":509,"column":2},"end":{"line":509,"column":59}},"167":{"start":{"line":515,"column":0},"end":{"line":539,"column":2}},"168":{"start":{"line":519,"column":2},"end":{"line":521,"column":3}},"169":{"start":{"line":520,"column":4},"end":{"line":520,"column":11}},"170":{"start":{"line":523,"column":2},"end":{"line":523,"column":21}},"171":{"start":{"line":526,"column":2},"end":{"line":537,"column":3}},"172":{"start":{"line":529,"column":4},"end":{"line":529,"column":34}},"173":{"start":{"line":532,"column":4},"end":{"line":532,"column":33}},"174":{"start":{"line":534,"column":9},"end":{"line":537,"column":3}},"175":{"start":{"line":536,"column":4},"end":{"line":536,"column":33}},"176":{"start":{"line":544,"column":0},"end":{"line":556,"column":2}},"177":{"start":{"line":545,"column":2},"end":{"line":545,"column":22}},"178":{"start":{"line":548,"column":2},"end":{"line":554,"column":3}},"179":{"start":{"line":550,"column":4},"end":{"line":550,"column":35}},"180":{"start":{"line":551,"column":9},"end":{"line":554,"column":3}},"181":{"start":{"line":553,"column":4},"end":{"line":553,"column":23}},"182":{"start":{"line":564,"column":0},"end":{"line":570,"column":2}},"183":{"start":{"line":565,"column":2},"end":{"line":567,"column":3}},"184":{"start":{"line":566,"column":4},"end":{"line":566,"column":11}},"185":{"start":{"line":569,"column":2},"end":{"line":569,"column":57}},"186":{"start":{"line":578,"column":0},"end":{"line":590,"column":2}},"187":{"start":{"line":579,"column":2},"end":{"line":579,"column":18}},"188":{"start":{"line":581,"column":2},"end":{"line":587,"column":3}},"189":{"start":{"line":582,"column":4},"end":{"line":582,"column":29}},"190":{"start":{"line":583,"column":9},"end":{"line":587,"column":3}},"191":{"start":{"line":584,"column":4},"end":{"line":584,"column":32}},"192":{"start":{"line":586,"column":4},"end":{"line":586,"column":26}},"193":{"start":{"line":589,"column":2},"end":{"line":589,"column":21}},"194":{"start":{"line":592,"column":0},"end":{"line":592,"column":24}}},"branchMap":{"1":{"line":87,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"2":{"line":102,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"3":{"line":137,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"4":{"line":141,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"5":{"line":179,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"6":{"line":202,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"7":{"line":256,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"8":{"line":287,"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":295,"column":2}},{"start":{"line":295,"column":2},"end":{"line":295,"column":2}}]},"9":{"line":293,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]},"10":{"line":364,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"11":{"line":391,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"12":{"line":438,"type":"if","locations":[{"start":{"line":447,"column":2},"end":{"line":447,"column":2}},{"start":{"line":447,"column":2},"end":{"line":447,"column":2}}]},"13":{"line":446,"type":"if","locations":[{"start":{"line":455,"column":2},"end":{"line":455,"column":2}},{"start":{"line":455,"column":2},"end":{"line":455,"column":2}}]},"14":{"line":448,"type":"if","locations":[{"start":{"line":457,"column":4},"end":{"line":457,"column":4}},{"start":{"line":457,"column":4},"end":{"line":457,"column":4}}]},"15":{"line":460,"type":"if","locations":[{"start":{"line":470,"column":2},"end":{"line":470,"column":2}},{"start":{"line":470,"column":2},"end":{"line":470,"column":2}}]},"16":{"line":465,"type":"if","locations":[{"start":{"line":475,"column":2},"end":{"line":475,"column":2}},{"start":{"line":475,"column":2},"end":{"line":475,"column":2}}]},"17":{"line":508,"type":"if","locations":[{"start":{"line":519,"column":2},"end":{"line":519,"column":2}},{"start":{"line":519,"column":2},"end":{"line":519,"column":2}}]},"18":{"line":515,"type":"if","locations":[{"start":{"line":526,"column":2},"end":{"line":526,"column":2}},{"start":{"line":526,"column":2},"end":{"line":526,"column":2}}]},"19":{"line":522,"type":"if","locations":[{"start":{"line":534,"column":9},"end":{"line":534,"column":9}},{"start":{"line":534,"column":9},"end":{"line":534,"column":9}}]},"20":{"line":535,"type":"if","locations":[{"start":{"line":548,"column":2},"end":{"line":548,"column":2}},{"start":{"line":548,"column":2},"end":{"line":548,"column":2}}]},"21":{"line":538,"type":"if","locations":[{"start":{"line":551,"column":9},"end":{"line":551,"column":9}},{"start":{"line":551,"column":9},"end":{"line":551,"column":9}}]},"22":{"line":551,"type":"if","locations":[{"start":{"line":565,"column":2},"end":{"line":565,"column":2}},{"start":{"line":565,"column":2},"end":{"line":565,"column":2}}]},"23":{"line":555,"type":"cond-expr","locations":[{"start":{"line":569,"column":43},"end":{"line":569,"column":48}},{"start":{"line":569,"column":51},"end":{"line":569,"column":55}}]},"24":{"line":567,"type":"if","locations":[{"start":{"line":581,"column":2},"end":{"line":581,"column":2}},{"start":{"line":581,"column":2},"end":{"line":581,"column":2}}]},"25":{"line":569,"type":"if","locations":[{"start":{"line":583,"column":9},"end":{"line":583,"column":9}},{"start":{"line":583,"column":9},"end":{"line":583,"column":9}}]}},"code":["var extend = require('extend');","var Request = require('./Request');","var Promise = require('pinkyswear');","var utils = require('./Utils');","var JWTUtils = require('./JWTUtils');","","/**"," * Create a new upload wrapper.  Manages the entire upload of a file."," * @class"," * @param   {object}  options                   Configuration options to override the defaults."," * @param   {object}  options.api               A reference to the parent API instance."," * @param   {object}  options.file              The file to upload."," * @param   {object}  options.upload            REST endpoint for creating an input."," * @param   {object}  options.sign              REST endpoint for signing a blob before upload."," * @param   {object}  options.uploadComplete    REST endpoint to notify the API that the upload is complete."," * @param   {object}  options.uploadAbort       REST endpoint to abort the upload."," */","function Upload (options) {","","  this.defaults = {","    api: null,","    file: null,","    upload: '/encoding/inputs/<%=id%>/upload<%=method%>',","    sign: '/encoding/inputs/<%=id%>/upload/sign<%=method%>',","    uploadComplete: '/encoding/inputs/<%=id%>/upload/complete',","    uploadAbort: '/encoding/inputs/<%=id%>/upload/abort<%=method%>',","    uploadMethods: {","      param: '?type=',","      singlePart: 'amazon',","      multiPart: 'amazonMP'","    }","  };","","  // Create a config object by extending the defaults with the pass options.","  this.config = extend(true, {}, this.defaults, options);","","  this.api = this.config.api;","  this.file = this.config.file;","","  this.chunks = [];","  this.chunkSize = 0;","  this.chunkCount = 0;","  this.chunksComplete = 0;","  this.uploadedBytes = 0;","","  this.aborted = false;","  this.paused = false;","  this.created = false;","  this.initialized = false;","","  // Set to true when all the chunks are uploaded, but before the complete call is made.","  this.uploadComplete = false;","","  this.fileRecord = {","    filename: this.file.name,","    type: this.file.type,","    size: this.file.size,","    method: this._checkMultipart(this.file)","  };","","};","","/**"," * Register a function to execute when a chunk completes uploading."," * @param  {Function} callback A callback to execute when progress is made."," */","Upload.prototype.progress = function (callback) {","  this.config.progress = callback.bind(this);","};","","/**"," * Create a new input record and upload the files to amazon."," * @return  {Promise}         A promise which resolves when the new input record is created and uploaded."," */","Upload.prototype.save = function () {","  return this._create(this.fileRecord)","    .then(this._initialize.bind(this))","    .then(this._prepareUpload.bind(this));","};","","/**"," * Call the progress callback and pass the current progress percentage."," * @private"," * @param  {number} message Current progress percentage."," */","Upload.prototype._updateProgress = function (percent, chunkSize) {","","  if (!this.config.progress) {","    return;","  }","","  this.config.progress.call(this, percent, chunkSize);","};","","/**"," * Create a new input record."," * @private"," * @param   {object}  record  A JSON object representing the input record to create."," * @return  {Promise}         A promise which resolves when the new input record is created."," */","Upload.prototype._create = function (record) {","","  if (this.aborted) {","    return utils.promisify(false, 'upload aborted');","  }","","  return this.api.inputs.add([record]).then(this._createSuccess.bind(this));","};","","/**"," * Return the data object from the response."," * @private"," * @param  {JSON}   response  JSON response containing the new input record id."," * @return {string}           new input record id."," */","Upload.prototype._createSuccess = function (response) {","","  this.created = true;","","  this._updateProgress(0, 0);","  this.fileRecord.id = response.data[0].id;","","  return this.fileRecord.id;","};","","/**"," * Initializes an Input for upload"," * @private"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._initialize = function () {","","  var url;","  var tokens;","  var signing = '';","  var request;","","  if (this.aborted) {","    return utils.promisify(false, 'upload aborted');","  }","","  if (!this.fileRecord.method) {","    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;","  }","","  tokens = {","    id: this.fileRecord.id,","    method: signing","  };","","  url = utils.parseTokens(this.api.config.host + this.config.upload, tokens);","","  request = new Request({","    url: url,","    token: this.api.getToken(),","    method: 'POST',","    data: this.fileRecord","  });","","  return request.send()","          .then(this._initializeComplete.bind(this));","","};","","/**"," * Store the information returned from the initialize request."," * @private"," */","Upload.prototype._initializeComplete = function (response) {","  this.initialized = true;","  this.fileRecord.key = response.data.key;","  this.fileRecord.uploadId = response.data.uploadId;","  this.chunkSize = response.data.pieceSize;","  this.chunkCount = response.data.pieceCount;","};","","/**"," * Setup the upload depending on its type, single or multi part."," * @return {Promise} A promise which resolves when all of the pieces have completed uploading."," */","Upload.prototype._prepareUpload = function () {","  if (!this.fileRecord.method) {","    // Singlepart.","    return this._uploadFile()","      .then(this._onCompleteUpload.bind(this));","  } else {","    // Multipart.","    return this._createChunks()","      .then(this._completeUpload.bind(this));","  }","};","","/**"," * Break a file into blobs and create a chunk object for each piece."," * @private"," * @return {Promise} A promise which resolves when all of the pieces have completed uploading."," */","Upload.prototype._createChunks = function () {","  var sliceMethod = this._getSliceMethod(this.file);","  var i, blob, chunk, start, end,","    chunkPromises = [];","","  if (this.aborted) {","    this.abort();","    return utils.promisify(false, 'upload aborted');","  }","","  for (i = 0; i < this.chunkCount; i++) {","","    start = i * this.chunkSize;","    // Choose the smaller value, so that we don't go over the filesize.","    end = Math.min((i + 1) * this.chunkSize, this.fileRecord.size);","","    blob = this.file[sliceMethod](start, end);","","    chunk = {","      partNumber: i + 1,","      data: blob","    };","","    this.chunks.push(chunk);","","    chunkPromises.push(this._uploadChunk.bind(this, chunk));","","  }","","  // Store a reference for pausing and resuming.","  this.multiPartPromise = utils.series(chunkPromises, this.paused);","","  return this.multiPartPromise;","};","","/**"," * Create a promise chain for each chunk to be uploaded."," * @private"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._uploadChunk = function (chunk) {","  var promise = Promise();","","  // Break the promise chain.","  this._signUpload(chunk)","    .then(this._sendUpload.bind(this, chunk))","    .then(this._completeChunk.bind(this, chunk, promise));","","  return promise;","};","","/**"," * Create a promise chain for a single part file upload."," * @param  {file}   file    A file reference to upload."," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._uploadFile = function () {","  var chunk = {","    data: this.file","  };","","  // Create a new promise if one doesn't exist.","  if (!this.singlePartPromise) {","    this.singlePartPromise = Promise();","  }","","  // Broken off the chain, this will allow us to cancel single part uploads without breaking the","  // initial chain.","  this._signUpload(chunk)","    .then(this._sendUpload.bind(this, chunk))","    .then(this._sendSinglepartComplete.bind(this))","    .then(this._updateProgress.bind(this, 100, this.fileRecord.size))","    .then(this._uploadFileComplete.bind(this));","","  return this.singlePartPromise;","};","","/**"," *  Resolve the single part upload promise;"," */","Upload.prototype._uploadFileComplete = function () {","  this.singlePartPromise(true, []);","};","","/**"," * Make a request and sign the chunk to be uploaded."," * @private"," * @param  {object}   chunk           Information about the chunk to be uploaded."," * @return {Promise}                  A promise which resolves when the request is complete."," */","Upload.prototype._signUpload = function (chunk) {","  var url;","  var signing = '';","  var headers = {};","  var request;","","  // Set the part number for the current chunk.","  if (chunk.partNumber) {","    this.fileRecord.partNumber = chunk.partNumber;","  }","","  headers['Content-Type'] = 'multipart/form-data';","","  if (!this.fileRecord.method) {","    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;","  }","","  url = utils.parseTokens(this.api.config.host + this.config.sign, {","    id: this.fileRecord.id,","    method: signing","  });","","  request = new Request({","    url: url,","    token: this.api.getToken(),","    method: 'POST',","    headers: headers,","    data: this.fileRecord","  });","","  return request.send();","};","","/**"," * Send the upload to the server."," * @private"," * @param   {object} upload  An object representing the upload to send to the server."," * @return  {Promise}       A promise which resolves when the request is complete."," */","Upload.prototype._sendUpload = function (upload, response) {","  var headers = {};","  var request;","","  // Set the proper headers to send with the file.","  headers['Content-Type'] = 'multipart/form-data';","  headers.authorization = response.data.authHeader;","  headers['x-amz-date'] = response.data.dateHeader;","","  request = new Request({","    url: response.data.url,","    method: 'PUT',","    headers: headers,","    data: upload.data,","    ignoreAcceptHeader: true","  });","","  this.requestPromise = request;","","  return request.send();","};","","/**"," * Update the upload bytes value when a single part file is uploaded."," */","Upload.prototype._sendSinglepartComplete = function () {","  this.uploadComplete = true;","  this.uploadedBytes = this.fileRecord.size;","};","","/**"," *  Executed when a chunk is finished uploading."," *  @private"," *  @param {object}   chunk   The current chunk that was uploaded."," *  @param {Promise}  promise The promise to resolve when the chunk is complete."," */","Upload.prototype._completeChunk = function (chunk, promise) {","  var progress;","","  this.chunksComplete++;","  chunk.complete = true;","","  this.uploadedBytes += chunk.data.size;","","  // Upload is complete.","  if (this.chunksComplete === this.chunkCount) {","    this.uploadComplete = true;","  }","","  progress = this.uploadedBytes / this.fileRecord.size;","  // 0 - 99 for actual upload progress, 1% for the complete call.","  progress = progress * 99;","  progress = Math.round(progress);","","  this._updateProgress(progress, chunk.data.size);","","  // Resolve the promise.","  promise(true, []);","};","","/**"," * Notify the server that the upload is complete."," *"," * @private"," * @return  {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._completeUpload = function () {","  var url;","  var tokens;","  var request;","","  // Early return so we don't process any of the complete information on an aborted upload.","  if (this.aborted) {","    return;","  }","","  tokens = {","    id: this.fileRecord.id","  };","","  url = utils.parseTokens(this.api.config.host + this.config.uploadComplete, tokens);","","  request = new Request({","    url: url,","    token: this.api.getToken(),","    method: 'POST',","    data: this.fileRecord","  });","","  return request.send()","          .then(this._onCompleteUpload.bind(this));","};","","/**"," * Return the id for the current file record."," * @private"," * @return {string} ID for the input record that was created."," */","Upload.prototype._onCompleteUpload = function () {","  // Send the final progress update once the upload is actually complete.","  this._updateProgress(100);","","  this.multiPartPromise = null;","  this.requestPromise = null;","  this.singlePartPromise = null;","  return this.fileRecord.id;","};","","/**"," * Aborts an input upload"," *"," * @param {boolean} async A flag to indicate whether or not the request to delete the input should be async."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype.abort = function (async) {","  var url;","  var tokens;","  var request;","","  if (typeof async === 'undefined') {","    async = true;","  }","","  this.aborted = true;","","  // If initialize hasn't been called yet there is no need to abort the upload as it doesn't","  // exist yet.","  if (!this.initialized) {","","    if (this.created) {","      // If the input has been created simply return early with a","      // promise to delete the created input record.","      return this.api.inputs.delete(this.fileRecord.id, async);","    } else {","      // Resolve as a successful promise. This case would be fulfilled when an upload","      // has been created but save() hasn't yet been called.","      return utils.promisify(true);","    }","","  }","","  // Cancel the current request.","  if (this.requestPromise) {","    this.requestPromise.cancel();","    this.requestPromise = null;","  }","","  if (this.singlePartPromise) {","    this.singelPartPromise = null;","    // return here because there is no need to abort a single part upload.","    return this._abortComplete(async);","  }","","  this.multiPartPromise.cancel();","  this.multiPartPromise = null;","","  tokens = {","    id: this.fileRecord.id,","    method: ''","  };","","  url = utils.parseTokens(this.api.config.host + this.config.uploadAbort, tokens);","","  request = new Request({","    url: url,","    async: async,","    token: this.api.getToken(),","    method: 'POST',","    data: this.fileRecord","  });","","  return request.send()","          .then(this._abortComplete.bind(this, async));","};","","/**"," * Delete the input that was created."," * @private"," * @return {Promise} A promise which resolves when the request is complete."," */","Upload.prototype._abortComplete = function (async) {","  return this.api.inputs.delete(this.fileRecord.id, async);","};","","/**"," * Pause the current upload."," */","Upload.prototype.pause = function () {","  // Return early if the upload portion is complete.","  // The work is done by now so we might as well fire the","  // complete call.","  if (this.uploadComplete) {","    return;","  }","","  this.paused = true;","","  // Is there an upload","  if (this.multiPartPromise) {","","    // Pause the series if its a multipart upload.","    this.multiPartPromise.pause();","","    // Cancel the http request for this chunk.","    this.requestPromise.cancel();","","  } else if (this.requestPromise) {","    // Abort the upload if its a singlepart upload.","    this.requestPromise.cancel();","  }","","};","","/**"," * Resume the current upload."," */","Upload.prototype.resume = function () {","  this.paused = false;","","  // resume the series if its multi part.","  if (this.multiPartPromise) {","    // resume the series if its multipart.","    this.multiPartPromise.resume();","  } else if (this.requestPromise) {","    // Restart the file upload.","    this._uploadFile();","  }","","};","","/**"," * Check the file size to determine if it should be a multipart upload, returns false for singlepart uploads."," * @private"," * @param  {file}   file  The file to evaluate."," * @return {boolean}      True if the file will be uploading using mutlipart upload."," */","Upload.prototype._checkMultipart = function (file) {","  if (!file) {","    return;","  }","","  return (file.size <= (5 * 1024 * 1024) ? false : true);","};","","/**"," * Function that determines the slice method to be used"," * @private"," * @param {object} file - The file object you wish to determine the slice method for"," * @return {string} sliceMethod - The slice method to use."," */","Upload.prototype._getSliceMethod = function (file) {","  var sliceMethod;","","  if ('mozSlice' in file) {","    sliceMethod = 'mozSlice';","  } else if ('webkitSlice' in file) {","    sliceMethod = 'webkitSlice';","  } else {","    sliceMethod = 'slice';","  }","","  return sliceMethod;","};","","module.exports = Upload;",""]};
	}
	__cov_A8PhaNnj9wOCdm460FFv4Q = __cov_A8PhaNnj9wOCdm460FFv4Q['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Uploader.js'];
	__cov_A8PhaNnj9wOCdm460FFv4Q.s['1']++;var extend=__webpack_require__(2);__cov_A8PhaNnj9wOCdm460FFv4Q.s['2']++;var Request=__webpack_require__(3);__cov_A8PhaNnj9wOCdm460FFv4Q.s['3']++;var Promise=__webpack_require__(4);__cov_A8PhaNnj9wOCdm460FFv4Q.s['4']++;var utils=__webpack_require__(9);__cov_A8PhaNnj9wOCdm460FFv4Q.s['5']++;var JWTUtils=__webpack_require__(8);function Upload(options){__cov_A8PhaNnj9wOCdm460FFv4Q.f['1']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['7']++;this.defaults={api:null,file:null,upload:'/encoding/inputs/<%=id%>/upload<%=method%>',sign:'/encoding/inputs/<%=id%>/upload/sign<%=method%>',uploadComplete:'/encoding/inputs/<%=id%>/upload/complete',uploadAbort:'/encoding/inputs/<%=id%>/upload/abort<%=method%>',uploadMethods:{param:'?type=',singlePart:'amazon',multiPart:'amazonMP'}};__cov_A8PhaNnj9wOCdm460FFv4Q.s['8']++;this.config=extend(true,{},this.defaults,options);__cov_A8PhaNnj9wOCdm460FFv4Q.s['9']++;this.api=this.config.api;__cov_A8PhaNnj9wOCdm460FFv4Q.s['10']++;this.file=this.config.file;__cov_A8PhaNnj9wOCdm460FFv4Q.s['11']++;this.chunks=[];__cov_A8PhaNnj9wOCdm460FFv4Q.s['12']++;this.chunkSize=0;__cov_A8PhaNnj9wOCdm460FFv4Q.s['13']++;this.chunkCount=0;__cov_A8PhaNnj9wOCdm460FFv4Q.s['14']++;this.chunksComplete=0;__cov_A8PhaNnj9wOCdm460FFv4Q.s['15']++;this.uploadedBytes=0;__cov_A8PhaNnj9wOCdm460FFv4Q.s['16']++;this.aborted=false;__cov_A8PhaNnj9wOCdm460FFv4Q.s['17']++;this.paused=false;__cov_A8PhaNnj9wOCdm460FFv4Q.s['18']++;this.created=false;__cov_A8PhaNnj9wOCdm460FFv4Q.s['19']++;this.initialized=false;__cov_A8PhaNnj9wOCdm460FFv4Q.s['20']++;this.uploadComplete=false;__cov_A8PhaNnj9wOCdm460FFv4Q.s['21']++;this.fileRecord={filename:this.file.name,type:this.file.type,size:this.file.size,method:this._checkMultipart(this.file)};};__cov_A8PhaNnj9wOCdm460FFv4Q.s['22']++;Upload.prototype.progress=function(callback){__cov_A8PhaNnj9wOCdm460FFv4Q.f['2']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['23']++;this.config.progress=callback.bind(this);};__cov_A8PhaNnj9wOCdm460FFv4Q.s['24']++;Upload.prototype.save=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['3']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['25']++;return this._create(this.fileRecord).then(this._initialize.bind(this)).then(this._prepareUpload.bind(this));};__cov_A8PhaNnj9wOCdm460FFv4Q.s['26']++;Upload.prototype._updateProgress=function(percent,chunkSize){__cov_A8PhaNnj9wOCdm460FFv4Q.f['4']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['27']++;if(!this.config.progress){__cov_A8PhaNnj9wOCdm460FFv4Q.b['1'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['28']++;return;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['1'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['29']++;this.config.progress.call(this,percent,chunkSize);};__cov_A8PhaNnj9wOCdm460FFv4Q.s['30']++;Upload.prototype._create=function(record){__cov_A8PhaNnj9wOCdm460FFv4Q.f['5']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['31']++;if(this.aborted){__cov_A8PhaNnj9wOCdm460FFv4Q.b['2'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['32']++;return utils.promisify(false,'upload aborted');}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['2'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['33']++;return this.api.inputs.add([record]).then(this._createSuccess.bind(this));};__cov_A8PhaNnj9wOCdm460FFv4Q.s['34']++;Upload.prototype._createSuccess=function(response){__cov_A8PhaNnj9wOCdm460FFv4Q.f['6']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['35']++;this.created=true;__cov_A8PhaNnj9wOCdm460FFv4Q.s['36']++;this._updateProgress(0,0);__cov_A8PhaNnj9wOCdm460FFv4Q.s['37']++;this.fileRecord.id=response.data[0].id;__cov_A8PhaNnj9wOCdm460FFv4Q.s['38']++;return this.fileRecord.id;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['39']++;Upload.prototype._initialize=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['7']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['40']++;var url;__cov_A8PhaNnj9wOCdm460FFv4Q.s['41']++;var tokens;__cov_A8PhaNnj9wOCdm460FFv4Q.s['42']++;var signing='';__cov_A8PhaNnj9wOCdm460FFv4Q.s['43']++;var request;__cov_A8PhaNnj9wOCdm460FFv4Q.s['44']++;if(this.aborted){__cov_A8PhaNnj9wOCdm460FFv4Q.b['3'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['45']++;return utils.promisify(false,'upload aborted');}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['3'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['46']++;if(!this.fileRecord.method){__cov_A8PhaNnj9wOCdm460FFv4Q.b['4'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['47']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['4'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['48']++;tokens={id:this.fileRecord.id,method:signing};__cov_A8PhaNnj9wOCdm460FFv4Q.s['49']++;url=utils.parseTokens(this.api.config.host+this.config.upload,tokens);__cov_A8PhaNnj9wOCdm460FFv4Q.s['50']++;request=new Request({url:url,token:this.api.getToken(),method:'POST',data:this.fileRecord});__cov_A8PhaNnj9wOCdm460FFv4Q.s['51']++;return request.send().then(this._initializeComplete.bind(this));};__cov_A8PhaNnj9wOCdm460FFv4Q.s['52']++;Upload.prototype._initializeComplete=function(response){__cov_A8PhaNnj9wOCdm460FFv4Q.f['8']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['53']++;this.initialized=true;__cov_A8PhaNnj9wOCdm460FFv4Q.s['54']++;this.fileRecord.key=response.data.key;__cov_A8PhaNnj9wOCdm460FFv4Q.s['55']++;this.fileRecord.uploadId=response.data.uploadId;__cov_A8PhaNnj9wOCdm460FFv4Q.s['56']++;this.chunkSize=response.data.pieceSize;__cov_A8PhaNnj9wOCdm460FFv4Q.s['57']++;this.chunkCount=response.data.pieceCount;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['58']++;Upload.prototype._prepareUpload=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['9']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['59']++;if(!this.fileRecord.method){__cov_A8PhaNnj9wOCdm460FFv4Q.b['5'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['60']++;return this._uploadFile().then(this._onCompleteUpload.bind(this));}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['5'][1]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['61']++;return this._createChunks().then(this._completeUpload.bind(this));}};__cov_A8PhaNnj9wOCdm460FFv4Q.s['62']++;Upload.prototype._createChunks=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['10']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['63']++;var sliceMethod=this._getSliceMethod(this.file);__cov_A8PhaNnj9wOCdm460FFv4Q.s['64']++;var i,blob,chunk,start,end,chunkPromises=[];__cov_A8PhaNnj9wOCdm460FFv4Q.s['65']++;if(this.aborted){__cov_A8PhaNnj9wOCdm460FFv4Q.b['6'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['66']++;this.abort();__cov_A8PhaNnj9wOCdm460FFv4Q.s['67']++;return utils.promisify(false,'upload aborted');}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['6'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['68']++;for(i=0;i<this.chunkCount;i++){__cov_A8PhaNnj9wOCdm460FFv4Q.s['69']++;start=i*this.chunkSize;__cov_A8PhaNnj9wOCdm460FFv4Q.s['70']++;end=Math.min((i+1)*this.chunkSize,this.fileRecord.size);__cov_A8PhaNnj9wOCdm460FFv4Q.s['71']++;blob=this.file[sliceMethod](start,end);__cov_A8PhaNnj9wOCdm460FFv4Q.s['72']++;chunk={partNumber:i+1,data:blob};__cov_A8PhaNnj9wOCdm460FFv4Q.s['73']++;this.chunks.push(chunk);__cov_A8PhaNnj9wOCdm460FFv4Q.s['74']++;chunkPromises.push(this._uploadChunk.bind(this,chunk));}__cov_A8PhaNnj9wOCdm460FFv4Q.s['75']++;this.multiPartPromise=utils.series(chunkPromises,this.paused);__cov_A8PhaNnj9wOCdm460FFv4Q.s['76']++;return this.multiPartPromise;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['77']++;Upload.prototype._uploadChunk=function(chunk){__cov_A8PhaNnj9wOCdm460FFv4Q.f['11']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['78']++;var promise=Promise();__cov_A8PhaNnj9wOCdm460FFv4Q.s['79']++;this._signUpload(chunk).then(this._sendUpload.bind(this,chunk)).then(this._completeChunk.bind(this,chunk,promise));__cov_A8PhaNnj9wOCdm460FFv4Q.s['80']++;return promise;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['81']++;Upload.prototype._uploadFile=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['12']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['82']++;var chunk={data:this.file};__cov_A8PhaNnj9wOCdm460FFv4Q.s['83']++;if(!this.singlePartPromise){__cov_A8PhaNnj9wOCdm460FFv4Q.b['7'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['84']++;this.singlePartPromise=Promise();}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['7'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['85']++;this._signUpload(chunk).then(this._sendUpload.bind(this,chunk)).then(this._sendSinglepartComplete.bind(this)).then(this._updateProgress.bind(this,100,this.fileRecord.size)).then(this._uploadFileComplete.bind(this));__cov_A8PhaNnj9wOCdm460FFv4Q.s['86']++;return this.singlePartPromise;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['87']++;Upload.prototype._uploadFileComplete=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['13']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['88']++;this.singlePartPromise(true,[]);};__cov_A8PhaNnj9wOCdm460FFv4Q.s['89']++;Upload.prototype._signUpload=function(chunk){__cov_A8PhaNnj9wOCdm460FFv4Q.f['14']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['90']++;var url;__cov_A8PhaNnj9wOCdm460FFv4Q.s['91']++;var signing='';__cov_A8PhaNnj9wOCdm460FFv4Q.s['92']++;var headers={};__cov_A8PhaNnj9wOCdm460FFv4Q.s['93']++;var request;__cov_A8PhaNnj9wOCdm460FFv4Q.s['94']++;if(chunk.partNumber){__cov_A8PhaNnj9wOCdm460FFv4Q.b['8'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['95']++;this.fileRecord.partNumber=chunk.partNumber;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['8'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['96']++;headers['Content-Type']='multipart/form-data';__cov_A8PhaNnj9wOCdm460FFv4Q.s['97']++;if(!this.fileRecord.method){__cov_A8PhaNnj9wOCdm460FFv4Q.b['9'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['98']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['9'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['99']++;url=utils.parseTokens(this.api.config.host+this.config.sign,{id:this.fileRecord.id,method:signing});__cov_A8PhaNnj9wOCdm460FFv4Q.s['100']++;request=new Request({url:url,token:this.api.getToken(),method:'POST',headers:headers,data:this.fileRecord});__cov_A8PhaNnj9wOCdm460FFv4Q.s['101']++;return request.send();};__cov_A8PhaNnj9wOCdm460FFv4Q.s['102']++;Upload.prototype._sendUpload=function(upload,response){__cov_A8PhaNnj9wOCdm460FFv4Q.f['15']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['103']++;var headers={};__cov_A8PhaNnj9wOCdm460FFv4Q.s['104']++;var request;__cov_A8PhaNnj9wOCdm460FFv4Q.s['105']++;headers['Content-Type']='multipart/form-data';__cov_A8PhaNnj9wOCdm460FFv4Q.s['106']++;headers.authorization=response.data.authHeader;__cov_A8PhaNnj9wOCdm460FFv4Q.s['107']++;headers['x-amz-date']=response.data.dateHeader;__cov_A8PhaNnj9wOCdm460FFv4Q.s['108']++;request=new Request({url:response.data.url,method:'PUT',headers:headers,data:upload.data,ignoreAcceptHeader:true});__cov_A8PhaNnj9wOCdm460FFv4Q.s['109']++;this.requestPromise=request;__cov_A8PhaNnj9wOCdm460FFv4Q.s['110']++;return request.send();};__cov_A8PhaNnj9wOCdm460FFv4Q.s['111']++;Upload.prototype._sendSinglepartComplete=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['16']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['112']++;this.uploadComplete=true;__cov_A8PhaNnj9wOCdm460FFv4Q.s['113']++;this.uploadedBytes=this.fileRecord.size;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['114']++;Upload.prototype._completeChunk=function(chunk,promise){__cov_A8PhaNnj9wOCdm460FFv4Q.f['17']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['115']++;var progress;__cov_A8PhaNnj9wOCdm460FFv4Q.s['116']++;this.chunksComplete++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['117']++;chunk.complete=true;__cov_A8PhaNnj9wOCdm460FFv4Q.s['118']++;this.uploadedBytes+=chunk.data.size;__cov_A8PhaNnj9wOCdm460FFv4Q.s['119']++;if(this.chunksComplete===this.chunkCount){__cov_A8PhaNnj9wOCdm460FFv4Q.b['10'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['120']++;this.uploadComplete=true;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['10'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['121']++;progress=this.uploadedBytes/this.fileRecord.size;__cov_A8PhaNnj9wOCdm460FFv4Q.s['122']++;progress=progress*99;__cov_A8PhaNnj9wOCdm460FFv4Q.s['123']++;progress=Math.round(progress);__cov_A8PhaNnj9wOCdm460FFv4Q.s['124']++;this._updateProgress(progress,chunk.data.size);__cov_A8PhaNnj9wOCdm460FFv4Q.s['125']++;promise(true,[]);};__cov_A8PhaNnj9wOCdm460FFv4Q.s['126']++;Upload.prototype._completeUpload=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['18']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['127']++;var url;__cov_A8PhaNnj9wOCdm460FFv4Q.s['128']++;var tokens;__cov_A8PhaNnj9wOCdm460FFv4Q.s['129']++;var request;__cov_A8PhaNnj9wOCdm460FFv4Q.s['130']++;if(this.aborted){__cov_A8PhaNnj9wOCdm460FFv4Q.b['11'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['131']++;return;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['11'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['132']++;tokens={id:this.fileRecord.id};__cov_A8PhaNnj9wOCdm460FFv4Q.s['133']++;url=utils.parseTokens(this.api.config.host+this.config.uploadComplete,tokens);__cov_A8PhaNnj9wOCdm460FFv4Q.s['134']++;request=new Request({url:url,token:this.api.getToken(),method:'POST',data:this.fileRecord});__cov_A8PhaNnj9wOCdm460FFv4Q.s['135']++;return request.send().then(this._onCompleteUpload.bind(this));};__cov_A8PhaNnj9wOCdm460FFv4Q.s['136']++;Upload.prototype._onCompleteUpload=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['19']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['137']++;this._updateProgress(100);__cov_A8PhaNnj9wOCdm460FFv4Q.s['138']++;this.multiPartPromise=null;__cov_A8PhaNnj9wOCdm460FFv4Q.s['139']++;this.requestPromise=null;__cov_A8PhaNnj9wOCdm460FFv4Q.s['140']++;this.singlePartPromise=null;__cov_A8PhaNnj9wOCdm460FFv4Q.s['141']++;return this.fileRecord.id;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['142']++;Upload.prototype.abort=function(async){__cov_A8PhaNnj9wOCdm460FFv4Q.f['20']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['143']++;var url;__cov_A8PhaNnj9wOCdm460FFv4Q.s['144']++;var tokens;__cov_A8PhaNnj9wOCdm460FFv4Q.s['145']++;var request;__cov_A8PhaNnj9wOCdm460FFv4Q.s['146']++;if(typeof async==='undefined'){__cov_A8PhaNnj9wOCdm460FFv4Q.b['12'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['147']++;async=true;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['12'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['148']++;this.aborted=true;__cov_A8PhaNnj9wOCdm460FFv4Q.s['149']++;if(!this.initialized){__cov_A8PhaNnj9wOCdm460FFv4Q.b['13'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['150']++;if(this.created){__cov_A8PhaNnj9wOCdm460FFv4Q.b['14'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['151']++;return this.api.inputs['delete'](this.fileRecord.id,async);}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['14'][1]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['152']++;return utils.promisify(true);}}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['13'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['153']++;if(this.requestPromise){__cov_A8PhaNnj9wOCdm460FFv4Q.b['15'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['154']++;this.requestPromise.cancel();__cov_A8PhaNnj9wOCdm460FFv4Q.s['155']++;this.requestPromise=null;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['15'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['156']++;if(this.singlePartPromise){__cov_A8PhaNnj9wOCdm460FFv4Q.b['16'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['157']++;this.singelPartPromise=null;__cov_A8PhaNnj9wOCdm460FFv4Q.s['158']++;return this._abortComplete(async);}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['16'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['159']++;this.multiPartPromise.cancel();__cov_A8PhaNnj9wOCdm460FFv4Q.s['160']++;this.multiPartPromise=null;__cov_A8PhaNnj9wOCdm460FFv4Q.s['161']++;tokens={id:this.fileRecord.id,method:''};__cov_A8PhaNnj9wOCdm460FFv4Q.s['162']++;url=utils.parseTokens(this.api.config.host+this.config.uploadAbort,tokens);__cov_A8PhaNnj9wOCdm460FFv4Q.s['163']++;request=new Request({url:url,async:async,token:this.api.getToken(),method:'POST',data:this.fileRecord});__cov_A8PhaNnj9wOCdm460FFv4Q.s['164']++;return request.send().then(this._abortComplete.bind(this,async));};__cov_A8PhaNnj9wOCdm460FFv4Q.s['165']++;Upload.prototype._abortComplete=function(async){__cov_A8PhaNnj9wOCdm460FFv4Q.f['21']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['166']++;return this.api.inputs['delete'](this.fileRecord.id,async);};__cov_A8PhaNnj9wOCdm460FFv4Q.s['167']++;Upload.prototype.pause=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['22']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['168']++;if(this.uploadComplete){__cov_A8PhaNnj9wOCdm460FFv4Q.b['17'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['169']++;return;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['17'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['170']++;this.paused=true;__cov_A8PhaNnj9wOCdm460FFv4Q.s['171']++;if(this.multiPartPromise){__cov_A8PhaNnj9wOCdm460FFv4Q.b['18'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['172']++;this.multiPartPromise.pause();__cov_A8PhaNnj9wOCdm460FFv4Q.s['173']++;this.requestPromise.cancel();}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['18'][1]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['174']++;if(this.requestPromise){__cov_A8PhaNnj9wOCdm460FFv4Q.b['19'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['175']++;this.requestPromise.cancel();}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['19'][1]++;}}};__cov_A8PhaNnj9wOCdm460FFv4Q.s['176']++;Upload.prototype.resume=function(){__cov_A8PhaNnj9wOCdm460FFv4Q.f['23']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['177']++;this.paused=false;__cov_A8PhaNnj9wOCdm460FFv4Q.s['178']++;if(this.multiPartPromise){__cov_A8PhaNnj9wOCdm460FFv4Q.b['20'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['179']++;this.multiPartPromise.resume();}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['20'][1]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['180']++;if(this.requestPromise){__cov_A8PhaNnj9wOCdm460FFv4Q.b['21'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['181']++;this._uploadFile();}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['21'][1]++;}}};__cov_A8PhaNnj9wOCdm460FFv4Q.s['182']++;Upload.prototype._checkMultipart=function(file){__cov_A8PhaNnj9wOCdm460FFv4Q.f['24']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['183']++;if(!file){__cov_A8PhaNnj9wOCdm460FFv4Q.b['22'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['184']++;return;}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['22'][1]++;}__cov_A8PhaNnj9wOCdm460FFv4Q.s['185']++;return file.size<=5*1024*1024?(__cov_A8PhaNnj9wOCdm460FFv4Q.b['23'][0]++,false):(__cov_A8PhaNnj9wOCdm460FFv4Q.b['23'][1]++,true);};__cov_A8PhaNnj9wOCdm460FFv4Q.s['186']++;Upload.prototype._getSliceMethod=function(file){__cov_A8PhaNnj9wOCdm460FFv4Q.f['25']++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['187']++;var sliceMethod;__cov_A8PhaNnj9wOCdm460FFv4Q.s['188']++;if('mozSlice'in file){__cov_A8PhaNnj9wOCdm460FFv4Q.b['24'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['189']++;sliceMethod='mozSlice';}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['24'][1]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['190']++;if('webkitSlice'in file){__cov_A8PhaNnj9wOCdm460FFv4Q.b['25'][0]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['191']++;sliceMethod='webkitSlice';}else{__cov_A8PhaNnj9wOCdm460FFv4Q.b['25'][1]++;__cov_A8PhaNnj9wOCdm460FFv4Q.s['192']++;sliceMethod='slice';}}__cov_A8PhaNnj9wOCdm460FFv4Q.s['193']++;return sliceMethod;};__cov_A8PhaNnj9wOCdm460FFv4Q.s['194']++;module.exports=Upload;


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	var __cov_KZ1FCClN1msSQ3c7QwTFPg = (Function('return this'))();
	if (!__cov_KZ1FCClN1msSQ3c7QwTFPg.__coverage__) { __cov_KZ1FCClN1msSQ3c7QwTFPg.__coverage__ = {}; }
	__cov_KZ1FCClN1msSQ3c7QwTFPg = __cov_KZ1FCClN1msSQ3c7QwTFPg.__coverage__;
	if (!(__cov_KZ1FCClN1msSQ3c7QwTFPg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Cache.js'])) {
	   __cov_KZ1FCClN1msSQ3c7QwTFPg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Cache.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Cache.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Cache","line":6,"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":49}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":33,"column":27},"end":{"line":33,"column":47}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":45}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":23},"end":{"line":88,"column":50}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":126,"column":23},"end":{"line":126,"column":57}}},"7":{"name":"(anonymous_7)","line":184,"loc":{"start":{"line":187,"column":28},"end":{"line":187,"column":63}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":5,"column":2},"end":{"line":5,"column":27}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":43}},"4":{"start":{"line":14,"column":0},"end":{"line":26,"column":2}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":26}},"6":{"start":{"line":18,"column":2},"end":{"line":24,"column":3}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"11":{"start":{"line":33,"column":0},"end":{"line":61,"column":2}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":11}},"13":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"14":{"start":{"line":36,"column":2},"end":{"line":36,"column":13}},"15":{"start":{"line":38,"column":2},"end":{"line":58,"column":3}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":49}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":28}},"18":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"19":{"start":{"line":44,"column":6},"end":{"line":44,"column":19}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"21":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"22":{"start":{"line":51,"column":6},"end":{"line":51,"column":47}},"23":{"start":{"line":52,"column":6},"end":{"line":52,"column":19}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"25":{"start":{"line":60,"column":2},"end":{"line":60,"column":15}},"26":{"start":{"line":68,"column":0},"end":{"line":79,"column":2}},"27":{"start":{"line":69,"column":2},"end":{"line":69,"column":20}},"28":{"start":{"line":71,"column":2},"end":{"line":76,"column":3}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":45}},"30":{"start":{"line":75,"column":4},"end":{"line":75,"column":19}},"31":{"start":{"line":78,"column":2},"end":{"line":78,"column":16}},"32":{"start":{"line":88,"column":0},"end":{"line":108,"column":2}},"33":{"start":{"line":89,"column":2},"end":{"line":89,"column":20}},"34":{"start":{"line":90,"column":2},"end":{"line":90,"column":16}},"35":{"start":{"line":91,"column":2},"end":{"line":91,"column":17}},"36":{"start":{"line":93,"column":2},"end":{"line":105,"column":3}},"37":{"start":{"line":95,"column":4},"end":{"line":95,"column":45}},"38":{"start":{"line":96,"column":4},"end":{"line":96,"column":23}},"39":{"start":{"line":98,"column":4},"end":{"line":98,"column":38}},"40":{"start":{"line":100,"column":4},"end":{"line":100,"column":54}},"41":{"start":{"line":104,"column":4},"end":{"line":104,"column":19}},"42":{"start":{"line":107,"column":2},"end":{"line":107,"column":16}},"43":{"start":{"line":126,"column":0},"end":{"line":176,"column":2}},"44":{"start":{"line":127,"column":2},"end":{"line":127,"column":48}},"45":{"start":{"line":128,"column":2},"end":{"line":128,"column":29}},"46":{"start":{"line":129,"column":2},"end":{"line":129,"column":41}},"47":{"start":{"line":130,"column":2},"end":{"line":130,"column":18}},"48":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"49":{"start":{"line":133,"column":4},"end":{"line":133,"column":33}},"50":{"start":{"line":136,"column":2},"end":{"line":136,"column":33}},"51":{"start":{"line":137,"column":2},"end":{"line":137,"column":39}},"52":{"start":{"line":139,"column":2},"end":{"line":142,"column":3}},"53":{"start":{"line":141,"column":4},"end":{"line":141,"column":16}},"54":{"start":{"line":145,"column":2},"end":{"line":164,"column":3}},"55":{"start":{"line":146,"column":4},"end":{"line":146,"column":29}},"56":{"start":{"line":149,"column":4},"end":{"line":154,"column":5}},"57":{"start":{"line":150,"column":6},"end":{"line":153,"column":7}},"58":{"start":{"line":152,"column":8},"end":{"line":152,"column":17}},"59":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"60":{"start":{"line":158,"column":6},"end":{"line":158,"column":16}},"61":{"start":{"line":162,"column":4},"end":{"line":162,"column":36}},"62":{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},"63":{"start":{"line":168,"column":4},"end":{"line":171,"column":5}},"64":{"start":{"line":169,"column":6},"end":{"line":169,"column":27}},"65":{"start":{"line":170,"column":6},"end":{"line":170,"column":38}},"66":{"start":{"line":174,"column":2},"end":{"line":174,"column":14}},"67":{"start":{"line":187,"column":0},"end":{"line":209,"column":2}},"68":{"start":{"line":189,"column":2},"end":{"line":189,"column":8}},"69":{"start":{"line":190,"column":2},"end":{"line":190,"column":33}},"70":{"start":{"line":191,"column":2},"end":{"line":191,"column":11}},"71":{"start":{"line":192,"column":2},"end":{"line":192,"column":20}},"72":{"start":{"line":193,"column":2},"end":{"line":193,"column":19}},"73":{"start":{"line":195,"column":2},"end":{"line":205,"column":3}},"74":{"start":{"line":196,"column":4},"end":{"line":196,"column":20}},"75":{"start":{"line":198,"column":4},"end":{"line":198,"column":53}},"76":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"77":{"start":{"line":202,"column":6},"end":{"line":202,"column":27}},"78":{"start":{"line":207,"column":2},"end":{"line":207,"column":17}},"79":{"start":{"line":211,"column":0},"end":{"line":211,"column":23}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":131,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"4":{"line":138,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"5":{"line":148,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"6":{"line":149,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"8":{"line":165,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"9":{"line":198,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]}},"code":["/**"," * A management layer for storing app cache in local storage."," */","var Cache = function (cacheAge) {","  this.cacheAge = cacheAge;","  this.enabled = this._checkCacheSupport();","};","","/**"," * Return true if localStorage is supported."," * @private"," * @return {boolean} True if localStorage is supported."," */","Cache.prototype._checkCacheSupport = function () {","","  var support = 'support';","","  try {","    window.localStorage.setItem(support, support);","    window.localStorage.removeItem(support);","    return true;","  } catch (e) {","    return false;","  }","","};","","/**"," * Retrieve the cached result for the provided cacheKey."," * @param  {string}   cacheKey  Key associated with the cached result."," * @return {object}             Parse results object."," */","Cache.prototype.retrieve = function (cacheKey) {","  var data;","  var value = null;","  var expiry;","","  try {","","    data = window.localStorage.getItem(cacheKey);","    data = JSON.parse(data);","","    if (!data) {","      return value;","    }","","    value = data.value;","","    if (data.expiry < Date.now()) {","      // Cache is expired;","      window.localStorage.removeItem(cacheKey);","      value = null;","    }","","  } catch (error) {","    // Silent capture so that caching never gets in the way of returning a result.","    value = null;","  }","","  return value;","};","","/**"," * Remove a result from the cache."," * @param  {string}   cacheKey  Key associated with the cached result."," * @return {boolean}            A boolean indicating success of the removal."," */","Cache.prototype.remove = function (cacheKey) {","  var result = true;","","  try {","    window.localStorage.removeItem(cacheKey);","  } catch (error) {","    // Silent capture so that caching never gets in the way of returning a result.","    result = false;","  }","","  return result;","};","","/**"," * Save the new result with its expiry date."," * @param  {string}   cacheKey Unique cache key for the request."," * @param  {number}   expiry   Unix timestamp for the expiry."," * @param  {object}   result   Object to be cached."," * @return {boolean}            A boolean indicating success of the save."," */","Cache.prototype.save = function (cacheKey, value) {","  var result = true;","  var data = {};","  var JSONResult;","","  try {","","    data.expiry = Date.now() + this.cacheAge;","    data.value = value;","","    JSONResult = JSON.stringify(data);","","    window.localStorage.setItem(cacheKey, JSONResult);","","  } catch (error) {","    // Silent capture so that caching never gets in the way of returning a result.","    result = false;","  }","","  return result;","};","","/**"," * Return an object representing the differences between the provided object and the cached object."," * @example"," * //'cachedObject' = {id: '12345'};"," * cache.diff('cachedObject', {title: 'test'});"," * // returns {title: 'test'}"," * @example"," * //'cachedObject' = {id: '12345', title: 'test'};"," * cache.diff('cachedObject', {title: 'test2'});"," * // returns {title: 'test2'}"," *"," * @param  {string} cacheKey  Cachekey of the object to compare against."," * @param  {object} item      Object to compare against the cached object."," * @param  {array}  forced    An array of properties to be returned in the resulting object regardless of difference."," * @return {object}           An object containing the differences."," */","Cache.prototype.diff = function (cacheKey, item, forced) {","  var property, properties, propertiesLength, i;","  var force, forcedLength, n;","  var original = this.retrieve(cacheKey);","  var diff = null;","","  if (forced) {","    forcedLength = forced.length;","  }","","  properties = Object.keys(item);","  propertiesLength = properties.length;","","  if (!original) {","    // return the compare object if the original item wasn't found.","    return item;","  }","","  // Walk the object and compare the properties.","  for (i = 0; i < propertiesLength; i++) {","    property = properties[i];","","    // Check the values if both objects have the property.","    if (original.hasOwnProperty(property)) {","      if (item[property] === original[property]) {","        // If the values are the same we don't need to add it to the diff so continue.","        continue;","      }","    }","","    // If the diff item is still null we need to create a new object to store the properties in.","    if (!diff) {","      diff = {};","    }","","    // If we've made it this far the property is either a new one, or the item doesn't match.","    diff[property] = item[property];","","  }","","  // As long as changes were found append the forced properties.","  if (diff) {","    for (n = 0; n < forcedLength; n++) {","      property = forced[n];","      diff[property] = item[property];","    }","  }","","  return diff;","","};","","/**"," * Return an object representing the differences between the provided objects and the cached object."," * Similar to diff, but accepts an array of objects."," *"," * @param  {string} cacheKey  Property on the provided objects that represents the cache key."," * @param  {object} item      Object to compare against the cached object."," * @param  {array}  forced    An array of properties to be returned in the resulting object regardless of difference."," * @return {object}           An object containing the differences."," */","Cache.prototype.diffArray = function (cacheKey, items, forced) {","","  var i;","  var itemsLength = items.length;","  var item;","  var result = null;","  var results = [];","","  for (i = 0; i < itemsLength; i++) {","    item = items[i];","","    result = this.diff(item[cacheKey], item, forced);","","    // Only add it to the result set if changes were found.","    if (result !== null) {","      results.push(result);","    }","","  }","","  return results;","","};","","module.exports = Cache;",""]};
	}
	__cov_KZ1FCClN1msSQ3c7QwTFPg = __cov_KZ1FCClN1msSQ3c7QwTFPg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Cache.js'];
	__cov_KZ1FCClN1msSQ3c7QwTFPg.s['1']++;var Cache=function Cache(cacheAge){__cov_KZ1FCClN1msSQ3c7QwTFPg.f['1']++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['2']++;this.cacheAge=cacheAge;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['3']++;this.enabled=this._checkCacheSupport();};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['4']++;Cache.prototype._checkCacheSupport=function(){__cov_KZ1FCClN1msSQ3c7QwTFPg.f['2']++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['5']++;var support='support';__cov_KZ1FCClN1msSQ3c7QwTFPg.s['6']++;try{__cov_KZ1FCClN1msSQ3c7QwTFPg.s['7']++;window.localStorage.setItem(support,support);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['8']++;window.localStorage.removeItem(support);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['9']++;return true;}catch(e){__cov_KZ1FCClN1msSQ3c7QwTFPg.s['10']++;return false;}};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['11']++;Cache.prototype.retrieve=function(cacheKey){__cov_KZ1FCClN1msSQ3c7QwTFPg.f['3']++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['12']++;var data;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['13']++;var value=null;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['14']++;var expiry;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['15']++;try{__cov_KZ1FCClN1msSQ3c7QwTFPg.s['16']++;data=window.localStorage.getItem(cacheKey);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['17']++;data=JSON.parse(data);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['18']++;if(!data){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['1'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['19']++;return value;}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['1'][1]++;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['20']++;value=data.value;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['21']++;if(data.expiry<Date.now()){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['2'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['22']++;window.localStorage.removeItem(cacheKey);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['23']++;value=null;}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['2'][1]++;}}catch(error){__cov_KZ1FCClN1msSQ3c7QwTFPg.s['24']++;value=null;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['25']++;return value;};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['26']++;Cache.prototype.remove=function(cacheKey){__cov_KZ1FCClN1msSQ3c7QwTFPg.f['4']++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['27']++;var result=true;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['28']++;try{__cov_KZ1FCClN1msSQ3c7QwTFPg.s['29']++;window.localStorage.removeItem(cacheKey);}catch(error){__cov_KZ1FCClN1msSQ3c7QwTFPg.s['30']++;result=false;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['31']++;return result;};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['32']++;Cache.prototype.save=function(cacheKey,value){__cov_KZ1FCClN1msSQ3c7QwTFPg.f['5']++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['33']++;var result=true;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['34']++;var data={};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['35']++;var JSONResult;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['36']++;try{__cov_KZ1FCClN1msSQ3c7QwTFPg.s['37']++;data.expiry=Date.now()+this.cacheAge;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['38']++;data.value=value;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['39']++;JSONResult=JSON.stringify(data);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['40']++;window.localStorage.setItem(cacheKey,JSONResult);}catch(error){__cov_KZ1FCClN1msSQ3c7QwTFPg.s['41']++;result=false;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['42']++;return result;};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['43']++;Cache.prototype.diff=function(cacheKey,item,forced){__cov_KZ1FCClN1msSQ3c7QwTFPg.f['6']++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['44']++;var property,properties,propertiesLength,i;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['45']++;var force,forcedLength,n;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['46']++;var original=this.retrieve(cacheKey);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['47']++;var diff=null;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['48']++;if(forced){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['3'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['49']++;forcedLength=forced.length;}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['3'][1]++;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['50']++;properties=Object.keys(item);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['51']++;propertiesLength=properties.length;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['52']++;if(!original){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['4'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['53']++;return item;}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['4'][1]++;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['54']++;for(i=0;i<propertiesLength;i++){__cov_KZ1FCClN1msSQ3c7QwTFPg.s['55']++;property=properties[i];__cov_KZ1FCClN1msSQ3c7QwTFPg.s['56']++;if(original.hasOwnProperty(property)){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['5'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['57']++;if(item[property]===original[property]){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['6'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['58']++;continue;}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['6'][1]++;}}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['5'][1]++;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['59']++;if(!diff){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['7'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['60']++;diff={};}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['7'][1]++;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['61']++;diff[property]=item[property];}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['62']++;if(diff){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['8'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['63']++;for(n=0;n<forcedLength;n++){__cov_KZ1FCClN1msSQ3c7QwTFPg.s['64']++;property=forced[n];__cov_KZ1FCClN1msSQ3c7QwTFPg.s['65']++;diff[property]=item[property];}}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['8'][1]++;}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['66']++;return diff;};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['67']++;Cache.prototype.diffArray=function(cacheKey,items,forced){__cov_KZ1FCClN1msSQ3c7QwTFPg.f['7']++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['68']++;var i;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['69']++;var itemsLength=items.length;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['70']++;var item;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['71']++;var result=null;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['72']++;var results=[];__cov_KZ1FCClN1msSQ3c7QwTFPg.s['73']++;for(i=0;i<itemsLength;i++){__cov_KZ1FCClN1msSQ3c7QwTFPg.s['74']++;item=items[i];__cov_KZ1FCClN1msSQ3c7QwTFPg.s['75']++;result=this.diff(item[cacheKey],item,forced);__cov_KZ1FCClN1msSQ3c7QwTFPg.s['76']++;if(result!==null){__cov_KZ1FCClN1msSQ3c7QwTFPg.b['9'][0]++;__cov_KZ1FCClN1msSQ3c7QwTFPg.s['77']++;results.push(result);}else{__cov_KZ1FCClN1msSQ3c7QwTFPg.b['9'][1]++;}}__cov_KZ1FCClN1msSQ3c7QwTFPg.s['78']++;return results;};__cov_KZ1FCClN1msSQ3c7QwTFPg.s['79']++;module.exports=Cache;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_OS1fgrT6itv_d1WvIkW2Cg = (Function('return this'))();
	if (!__cov_OS1fgrT6itv_d1WvIkW2Cg.__coverage__) { __cov_OS1fgrT6itv_d1WvIkW2Cg.__coverage__ = {}; }
	__cov_OS1fgrT6itv_d1WvIkW2Cg = __cov_OS1fgrT6itv_d1WvIkW2Cg.__coverage__;
	if (!(__cov_OS1fgrT6itv_d1WvIkW2Cg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Resource.js'])) {
	   __cov_OS1fgrT6itv_d1WvIkW2Cg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Resource.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Resource.js","s":{"1":0,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"Resource","line":11,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":46}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":51,"column":28},"end":{"line":51,"column":47}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":29},"end":{"line":72,"column":43}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":51}}},"6":{"name":"(anonymous_6)","line":130,"loc":{"start":{"line":132,"column":35},"end":{"line":132,"column":49}}},"7":{"name":"(anonymous_7)","line":155,"loc":{"start":{"line":158,"column":25},"end":{"line":158,"column":45}}},"8":{"name":"(anonymous_8)","line":181,"loc":{"start":{"line":186,"column":28},"end":{"line":186,"column":48}}},"9":{"name":"(anonymous_9)","line":200,"loc":{"start":{"line":206,"column":37},"end":{"line":206,"column":57}}},"10":{"name":"(anonymous_10)","line":237,"loc":{"start":{"line":244,"column":42},"end":{"line":244,"column":63}}},"11":{"name":"(anonymous_11)","line":259,"loc":{"start":{"line":267,"column":28},"end":{"line":267,"column":55}}},"12":{"name":"(anonymous_12)","line":282,"loc":{"start":{"line":291,"column":37},"end":{"line":291,"column":64}}},"13":{"name":"(anonymous_13)","line":307,"loc":{"start":{"line":317,"column":37},"end":{"line":317,"column":75}}},"14":{"name":"(anonymous_14)","line":335,"loc":{"start":{"line":346,"column":42},"end":{"line":346,"column":74}}},"15":{"name":"(anonymous_15)","line":361,"loc":{"start":{"line":373,"column":28},"end":{"line":373,"column":54}}},"16":{"name":"(anonymous_16)","line":386,"loc":{"start":{"line":399,"column":27},"end":{"line":399,"column":39}}},"17":{"name":"(anonymous_17)","line":405,"loc":{"start":{"line":419,"column":32},"end":{"line":419,"column":44}}},"18":{"name":"(anonymous_18)","line":426,"loc":{"start":{"line":441,"column":42},"end":{"line":441,"column":62}}},"19":{"name":"(anonymous_19)","line":435,"loc":{"start":{"line":450,"column":43},"end":{"line":450,"column":63}}},"20":{"name":"(anonymous_20)","line":448,"loc":{"start":{"line":463,"column":44},"end":{"line":463,"column":64}}},"21":{"name":"(anonymous_21)","line":469,"loc":{"start":{"line":485,"column":43},"end":{"line":485,"column":67}}},"22":{"name":"(anonymous_22)","line":483,"loc":{"start":{"line":499,"column":44},"end":{"line":499,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":9,"column":0},"end":{"line":29,"column":1}},"5":{"start":{"line":11,"column":2},"end":{"line":23,"column":4}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":57}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":33}},"8":{"start":{"line":36,"column":0},"end":{"line":44,"column":2}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"10":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":44}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":16}},"13":{"start":{"line":51,"column":0},"end":{"line":65,"column":2}},"14":{"start":{"line":52,"column":2},"end":{"line":52,"column":14}},"15":{"start":{"line":53,"column":2},"end":{"line":55,"column":5}},"16":{"start":{"line":57,"column":2},"end":{"line":61,"column":5}},"17":{"start":{"line":63,"column":2},"end":{"line":64,"column":56}},"18":{"start":{"line":72,"column":0},"end":{"line":105,"column":2}},"19":{"start":{"line":73,"column":2},"end":{"line":73,"column":33}},"20":{"start":{"line":75,"column":2},"end":{"line":78,"column":3}},"21":{"start":{"line":76,"column":4},"end":{"line":77,"column":76}},"22":{"start":{"line":80,"column":2},"end":{"line":83,"column":5}},"23":{"start":{"line":85,"column":2},"end":{"line":88,"column":3}},"24":{"start":{"line":87,"column":4},"end":{"line":87,"column":43}},"25":{"start":{"line":91,"column":2},"end":{"line":104,"column":3}},"26":{"start":{"line":92,"column":4},"end":{"line":94,"column":7}},"27":{"start":{"line":97,"column":4},"end":{"line":100,"column":7}},"28":{"start":{"line":102,"column":4},"end":{"line":102,"column":26}},"29":{"start":{"line":112,"column":0},"end":{"line":125,"column":2}},"30":{"start":{"line":113,"column":2},"end":{"line":113,"column":14}},"31":{"start":{"line":114,"column":2},"end":{"line":116,"column":5}},"32":{"start":{"line":118,"column":2},"end":{"line":122,"column":5}},"33":{"start":{"line":124,"column":2},"end":{"line":124,"column":24}},"34":{"start":{"line":132,"column":0},"end":{"line":151,"column":2}},"35":{"start":{"line":133,"column":2},"end":{"line":133,"column":19}},"36":{"start":{"line":135,"column":2},"end":{"line":138,"column":3}},"37":{"start":{"line":136,"column":4},"end":{"line":137,"column":83}},"38":{"start":{"line":140,"column":2},"end":{"line":143,"column":5}},"39":{"start":{"line":145,"column":2},"end":{"line":148,"column":5}},"40":{"start":{"line":150,"column":2},"end":{"line":150,"column":24}},"41":{"start":{"line":158,"column":0},"end":{"line":179,"column":2}},"42":{"start":{"line":159,"column":2},"end":{"line":159,"column":19}},"43":{"start":{"line":161,"column":2},"end":{"line":164,"column":3}},"44":{"start":{"line":162,"column":4},"end":{"line":163,"column":73}},"45":{"start":{"line":166,"column":2},"end":{"line":168,"column":5}},"46":{"start":{"line":170,"column":2},"end":{"line":175,"column":5}},"47":{"start":{"line":177,"column":2},"end":{"line":178,"column":55}},"48":{"start":{"line":186,"column":0},"end":{"line":198,"column":2}},"49":{"start":{"line":187,"column":2},"end":{"line":190,"column":3}},"50":{"start":{"line":188,"column":4},"end":{"line":189,"column":112}},"51":{"start":{"line":193,"column":2},"end":{"line":197,"column":3}},"52":{"start":{"line":194,"column":4},"end":{"line":194,"column":47}},"53":{"start":{"line":196,"column":4},"end":{"line":196,"column":42}},"54":{"start":{"line":206,"column":0},"end":{"line":236,"column":2}},"55":{"start":{"line":207,"column":2},"end":{"line":207,"column":14}},"56":{"start":{"line":208,"column":2},"end":{"line":208,"column":22}},"57":{"start":{"line":210,"column":2},"end":{"line":213,"column":5}},"58":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"59":{"start":{"line":216,"column":4},"end":{"line":216,"column":50}},"60":{"start":{"line":220,"column":2},"end":{"line":225,"column":3}},"61":{"start":{"line":222,"column":4},"end":{"line":224,"column":7}},"62":{"start":{"line":227,"column":2},"end":{"line":232,"column":5}},"63":{"start":{"line":234,"column":2},"end":{"line":235,"column":55}},"64":{"start":{"line":244,"column":0},"end":{"line":259,"column":2}},"65":{"start":{"line":245,"column":2},"end":{"line":245,"column":14}},"66":{"start":{"line":246,"column":2},"end":{"line":248,"column":5}},"67":{"start":{"line":250,"column":2},"end":{"line":255,"column":5}},"68":{"start":{"line":257,"column":2},"end":{"line":258,"column":56}},"69":{"start":{"line":267,"column":0},"end":{"line":283,"column":2}},"70":{"start":{"line":268,"column":2},"end":{"line":270,"column":3}},"71":{"start":{"line":269,"column":4},"end":{"line":269,"column":17}},"72":{"start":{"line":272,"column":2},"end":{"line":280,"column":3}},"73":{"start":{"line":274,"column":4},"end":{"line":276,"column":5}},"74":{"start":{"line":275,"column":6},"end":{"line":275,"column":63}},"75":{"start":{"line":278,"column":4},"end":{"line":279,"column":111}},"76":{"start":{"line":282,"column":2},"end":{"line":282,"column":54}},"77":{"start":{"line":291,"column":0},"end":{"line":307,"column":2}},"78":{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},"79":{"start":{"line":293,"column":4},"end":{"line":293,"column":17}},"80":{"start":{"line":296,"column":2},"end":{"line":304,"column":3}},"81":{"start":{"line":298,"column":4},"end":{"line":300,"column":5}},"82":{"start":{"line":299,"column":6},"end":{"line":299,"column":62}},"83":{"start":{"line":302,"column":4},"end":{"line":303,"column":111}},"84":{"start":{"line":306,"column":2},"end":{"line":306,"column":53}},"85":{"start":{"line":317,"column":0},"end":{"line":337,"column":2}},"86":{"start":{"line":318,"column":2},"end":{"line":318,"column":14}},"87":{"start":{"line":319,"column":2},"end":{"line":322,"column":5}},"88":{"start":{"line":324,"column":2},"end":{"line":326,"column":3}},"89":{"start":{"line":325,"column":4},"end":{"line":325,"column":47}},"90":{"start":{"line":328,"column":2},"end":{"line":333,"column":5}},"91":{"start":{"line":335,"column":2},"end":{"line":336,"column":65}},"92":{"start":{"line":346,"column":0},"end":{"line":365,"column":2}},"93":{"start":{"line":347,"column":2},"end":{"line":347,"column":14}},"94":{"start":{"line":348,"column":2},"end":{"line":350,"column":5}},"95":{"start":{"line":352,"column":2},"end":{"line":354,"column":3}},"96":{"start":{"line":353,"column":4},"end":{"line":353,"column":47}},"97":{"start":{"line":356,"column":2},"end":{"line":361,"column":5}},"98":{"start":{"line":363,"column":2},"end":{"line":364,"column":67}},"99":{"start":{"line":373,"column":0},"end":{"line":393,"column":2}},"100":{"start":{"line":374,"column":2},"end":{"line":374,"column":19}},"101":{"start":{"line":376,"column":2},"end":{"line":379,"column":3}},"102":{"start":{"line":377,"column":4},"end":{"line":378,"column":83}},"103":{"start":{"line":381,"column":2},"end":{"line":384,"column":5}},"104":{"start":{"line":386,"column":2},"end":{"line":390,"column":5}},"105":{"start":{"line":392,"column":2},"end":{"line":392,"column":24}},"106":{"start":{"line":399,"column":0},"end":{"line":413,"column":2}},"107":{"start":{"line":400,"column":2},"end":{"line":400,"column":14}},"108":{"start":{"line":401,"column":2},"end":{"line":403,"column":5}},"109":{"start":{"line":405,"column":2},"end":{"line":409,"column":5}},"110":{"start":{"line":411,"column":2},"end":{"line":412,"column":43}},"111":{"start":{"line":419,"column":0},"end":{"line":433,"column":2}},"112":{"start":{"line":420,"column":2},"end":{"line":420,"column":14}},"113":{"start":{"line":421,"column":2},"end":{"line":423,"column":5}},"114":{"start":{"line":425,"column":2},"end":{"line":429,"column":5}},"115":{"start":{"line":431,"column":2},"end":{"line":432,"column":43}},"116":{"start":{"line":441,"column":0},"end":{"line":443,"column":2}},"117":{"start":{"line":442,"column":2},"end":{"line":442,"column":58}},"118":{"start":{"line":450,"column":0},"end":{"line":456,"column":2}},"119":{"start":{"line":451,"column":2},"end":{"line":453,"column":3}},"120":{"start":{"line":452,"column":4},"end":{"line":452,"column":53}},"121":{"start":{"line":455,"column":2},"end":{"line":455,"column":18}},"122":{"start":{"line":463,"column":0},"end":{"line":477,"column":2}},"123":{"start":{"line":464,"column":2},"end":{"line":464,"column":27}},"124":{"start":{"line":465,"column":2},"end":{"line":465,"column":31}},"125":{"start":{"line":466,"column":2},"end":{"line":466,"column":8}},"126":{"start":{"line":468,"column":2},"end":{"line":474,"column":3}},"127":{"start":{"line":470,"column":4},"end":{"line":472,"column":5}},"128":{"start":{"line":471,"column":6},"end":{"line":471,"column":43}},"129":{"start":{"line":476,"column":2},"end":{"line":476,"column":18}},"130":{"start":{"line":485,"column":0},"end":{"line":491,"column":2}},"131":{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},"132":{"start":{"line":487,"column":4},"end":{"line":487,"column":26}},"133":{"start":{"line":490,"column":2},"end":{"line":490,"column":18}},"134":{"start":{"line":499,"column":0},"end":{"line":512,"column":2}},"135":{"start":{"line":500,"column":2},"end":{"line":500,"column":30}},"136":{"start":{"line":501,"column":2},"end":{"line":501,"column":8}},"137":{"start":{"line":503,"column":2},"end":{"line":509,"column":3}},"138":{"start":{"line":505,"column":4},"end":{"line":507,"column":5}},"139":{"start":{"line":506,"column":6},"end":{"line":506,"column":32}},"140":{"start":{"line":511,"column":2},"end":{"line":511,"column":18}},"141":{"start":{"line":514,"column":0},"end":{"line":514,"column":26}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"3":{"line":84,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"4":{"line":84,"type":"binary-expr","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":16}},{"start":{"line":85,"column":20},"end":{"line":85,"column":38}}]},"5":{"line":90,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"6":{"line":133,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"7":{"line":158,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"8":{"line":182,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"9":{"line":187,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"10":{"line":209,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"11":{"line":209,"type":"binary-expr","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":16}},{"start":{"line":215,"column":20},"end":{"line":215,"column":38}}]},"12":{"line":214,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"13":{"line":260,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"14":{"line":264,"type":"if","locations":[{"start":{"line":272,"column":2},"end":{"line":272,"column":2}},{"start":{"line":272,"column":2},"end":{"line":272,"column":2}}]},"15":{"line":266,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"16":{"line":283,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"17":{"line":287,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"18":{"line":289,"type":"if","locations":[{"start":{"line":298,"column":4},"end":{"line":298,"column":4}},{"start":{"line":298,"column":4},"end":{"line":298,"column":4}}]},"19":{"line":314,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"20":{"line":341,"type":"if","locations":[{"start":{"line":352,"column":2},"end":{"line":352,"column":2}},{"start":{"line":352,"column":2},"end":{"line":352,"column":2}}]},"21":{"line":364,"type":"if","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":2}},{"start":{"line":376,"column":2},"end":{"line":376,"column":2}}]},"22":{"line":436,"type":"if","locations":[{"start":{"line":451,"column":2},"end":{"line":451,"column":2}},{"start":{"line":451,"column":2},"end":{"line":451,"column":2}}]},"23":{"line":436,"type":"binary-expr","locations":[{"start":{"line":451,"column":6},"end":{"line":451,"column":16}},{"start":{"line":451,"column":20},"end":{"line":451,"column":38}}]},"24":{"line":453,"type":"if","locations":[{"start":{"line":468,"column":2},"end":{"line":468,"column":2}},{"start":{"line":468,"column":2},"end":{"line":468,"column":2}}]},"25":{"line":453,"type":"binary-expr","locations":[{"start":{"line":468,"column":6},"end":{"line":468,"column":16}},{"start":{"line":468,"column":20},"end":{"line":468,"column":38}}]},"26":{"line":470,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"27":{"line":470,"type":"binary-expr","locations":[{"start":{"line":486,"column":6},"end":{"line":486,"column":16}},{"start":{"line":486,"column":20},"end":{"line":486,"column":38}}]},"28":{"line":487,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"29":{"line":487,"type":"binary-expr","locations":[{"start":{"line":503,"column":6},"end":{"line":503,"column":16}},{"start":{"line":503,"column":20},"end":{"line":503,"column":38}}]}},"code":["var extend = require('extend');","var Request = require('../Request');","var utils = require('../Utils');","","/**"," * Resource Object"," * @class"," */","function Resource (options) {","","  this.defaults = {","    host: 'https://api.ingest.io',","    all: '/<%=resource%>',","    byId: '/<%=resource%>/<%=id%>',","    thumbnails: '/<%=resource%>/<%=id%>/thumbnails',","    trash: '/<%=resource%>?filter=trashed',","    deleteMethods: {","      'permanent': '?permanent=1'","    },","    search: '/<%=resource%>?search=<%=input%>',","    tokenSource: null,","    resource: null","  };","","  this.config = extend(true, {}, this.defaults, options);","","  this.cache = this.config.cache;","","}","","/**"," * Proxy the request to token source to ensure a value is always returned."," * @private"," * @return {string} Auth token."," */","Resource.prototype._tokenSource = function () {","  var result = null;","","  if (this.config.tokenSource) {","    result = this.config.tokenSource.call();","  }","","  return result;","};","","/**"," * Return a list of the requested resource for the current user and network."," * @param  {object}   headers   Object representing headers to apply to the request."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype.getAll = function (headers) {","  var request;","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    headers: headers","  });","","  return request.send()","          .then(this._updateCachedResources.bind(this));","};","","/**"," * Return a resource that matches the supplied id."," * @param  {string}   id    Resource id."," * @return {promise}        A promise which resolves when the request is complete."," */","Resource.prototype.getById = function (id) {","  var url, cachedResult, request;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI Resource getById requires a valid id passed as a string.');","  }","","  url = utils.parseTokens(this.config.host + this.config.byId, {","    resource: this.config.resource,","    id: id","  });","","  if (this.cache && this.cache.enabled) {","    // retrieve the cached item.","    cachedResult = this.cache.retrieve(id);","  }","","  // Return a cached result if we've found one.","  if (cachedResult) {","    return utils.promisify(true, {","      data: cachedResult","    });","  } else {","","    request = new Request({","      url: url,","      token: this._tokenSource()","    });","","    return request.send();","","  }","};","","/**"," * Return the resources currently in the trash."," * @param  {object} headers Headers to be passed along with the request for pagination."," * @return {promise}         A promise which resolves when the request is complete."," */","Resource.prototype.getTrashed = function (headers) {","  var request;","  var url = utils.parseTokens(this.config.host + this.config.trash, {","    resource: this.config.resource","  });","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    headers: headers","  });","","  return request.send();","};","","/**"," * Retrieve all thumbnails for a provided resource id."," * @param {string} id ID of the resource to retrieve thumbnails for."," * @return {promise}  A promise which resolves when the request is complete."," */","Resource.prototype.getThumbnails = function (id) {","  var url, request;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI Resource getThumbnails requires an id to be passed as a string.');","  }","","  url = utils.parseTokens(this.config.host + this.config.thumbnails, {","    resource: this.config.resource,","    id: id","  });","","  request = new Request({","    url: url,","    token: this._tokenSource()","  });","","  return request.send();","};","","/**"," * Add a new resource."," * @param   {object}  resource  An object representing the resource to add."," * @return  {promise}           A promise which resolves when the request is complete."," */","Resource.prototype.add = function (resource) {","  var url, request;","","  if (typeof resource !== 'object') {","    return utils.promisify(false,","      'IngestAPI Resource add requires a resource passed as an object.');","  }","","  url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    method: 'POST',","    data: resource","  });","","  return request.send()","          .then(this._updateCachedResource.bind(this));","};","","/**"," * Update an existing resource with new content."," * @param  {object|array} resource  An object or an array of objects representing the resource(s) to be updated."," * @return {promise}                A promise which resolves when the request is complete."," */","Resource.prototype.update = function (resource) {","  if (typeof resource !== 'object') {","    return utils.promisify(false,","      'IngestAPI Resource update requires a resource to be passed either as an object or an array of objects.'); //eslint-disable-line","  }","","  // If they've passed an array fire the updateArray function.","  if (Array.isArray(resource)) {","    return this._updateResourceArray(resource);","  } else {","    return this._updateResource(resource);","  }","};","","/**"," * Update a single resource."," * @private"," * @param  {object}   resource  An object representing the resource to update."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype._updateResource = function (resource) {","  var request;","  var data = resource;","","  var url = utils.parseTokens(this.config.host + this.config.byId, {","    resource: this.config.resource,","    id: resource.id","  });","","  if (this.cache && this.cache.enabled) {","    data = this.cache.diff(resource.id, resource);","  }","","  // Null is returned in the case that the two objects match.","  if (!data) {","    // Return a fulfilled promise with the cached object.","    return utils.promisify(true, {","      data: this.cache.retrieve(resource.id)","    });","  }","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    method: 'PATCH',","    data: data","  });","","  return request.send()","          .then(this._updateCachedResource.bind(this));","};","","/**"," * Update an array of resources."," * @private"," * @param  {array} resources  An array of resource objects to be updated."," * @return {promise}          A promise which resolves when the request is complete."," */","Resource.prototype._updateResourceArray = function (resources) {","  var request;","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    method: 'PATCH',","    data: resources","  });","","  return request.send()","          .then(this._updateCachedResources.bind(this));","};","","/**"," * Delete an existing resource"," * @param  {object | array} resource The id, or an array of ids for the resource(s) to be deleted."," * @param {boolean}   async       A flag to indicate if this should be an async request to delete."," * @return {promise}          A promise which resolves when the request is complete."," */","Resource.prototype.delete = function (resource, async) {","  if (typeof async === 'undefined') {","    async = true;","  }","","  if (typeof resource !== 'string') {","    // If they've passed an array fire the updateArray function.","    if (Array.isArray(resource)) {","      return this._deleteResourceArray(resource, false, async);","    }","","    return utils.promisify(false,","      'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.'); //eslint-disable-line","  }","","  return this._deleteResource(resource, false, async);","};","","/**"," * Permanently delete an existing resource."," * @param  {object | array} resource The id, or an array of ids for the resource(s) to be deleted."," * @param {boolean}   async       A flag to indicate if this should be an async request to delete."," * @return {promise}          A promise which resolves when the request is complete."," */","Resource.prototype.permanentDelete = function (resource, async) {","  if (typeof async === 'undefined') {","    async = true;","  }","","  if (typeof resource !== 'string') {","    // If they've passed an array fire the updateArray function.","    if (Array.isArray(resource)) {","      return this._deleteResourceArray(resource, true, async);","    }","","    return utils.promisify(false,","      'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.'); //eslint-disable-line","  }","","  return this._deleteResource(resource, true, async);","};","","/**"," * Delete a single resource"," * @private"," * @param  {object}   resource  The id of the resource to be deleted."," * @param {boolean}   permanent  A flag to permanently delete each video."," * @param {boolean}   async       A flag to indicate if this should be an async request to delete."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype._deleteResource = function (resource, permanent, async) {","  var request;","  var url = utils.parseTokens(this.config.host + this.config.byId, {","    resource: this.config.resource,","    id: resource","  });","","  if (permanent === true) {","    url += this.config.deleteMethods.permanent;","  }","","  request = new Request({","    url: url,","    async: async,","    token: this._tokenSource(),","    method: 'DELETE',","  });","","  return request.send()","          .then(this._deleteCachedResource.bind(this, resource));","};","","/**"," * Delete an array of resources"," * @private"," * @param  {array}  resources   An array of resource objects to be deleted."," * @param {boolean}  permanent  A flag to permanently delete each video."," * @return {promise}            A promise which resolves when the request is complete."," */","Resource.prototype._deleteResourceArray = function (resources, permanent) {","  var request;","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  if (permanent === true) {","    url += this.config.deleteMethods.permanent;","  }","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    method: 'DELETE',","    data: resources","  });","","  return request.send()","          .then(this._deleteCachedResources.bind(this, resources));","};","","/**"," * Return a subset of items that match the search terms."," * @param  {string} input    The search terms to match against."," * @param  {object} headers  The headers to be passed to the request."," * @return {Promise}          A promise which resolves when the request is complete."," */","Resource.prototype.search = function (input, headers) {","  var url, request;","","  if (typeof input !== 'string') {","    return utils.promisify(false,","      'IngestAPI Resource search requires search input to be passed as a string.');","  }","","  url = utils.parseTokens(this.config.host + this.config.search, {","    resource: this.config.resource,","    input: input","  });","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    headers: headers","  });","","  return request.send();","};","","/**"," * Get the total count of resources."," * @return {promise} A promise which resolves when the request is complete."," */","Resource.prototype.count = function () {","  var request;","  var url = utils.parseTokens(this.config.host + this.config.all, {","    resource: this.config.resource","  });","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    method: 'HEAD'","  });","","  return request.send()","          .then(this._handleCountResponse);","};","","/**"," * Get the total count of resources in the trash."," * @return {promise} A promise which resolves when the request is complete."," */","Resource.prototype.trashCount = function () {","  var request;","  var url = utils.parseTokens(this.config.host + this.config.trash, {","    resource: this.config.resource","  });","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    method: 'HEAD'","  });","","  return request.send()","          .then(this._handleCountResponse);","};","","/**"," * Return the resource count from the response."," * @private"," * @param  {object} response Request response object."," * @return {number}          The resource count."," */","Resource.prototype._handleCountResponse = function (response) {","  return parseInt(response.headers('Resource-Count'), 10);","};","","/**"," * Update a single cached resource based on the response data."," * @param  {object}   response   Response object from the getAll request."," * @return {response}            Response object from the getAll request."," */","Resource.prototype._updateCachedResource = function (response) {","  if (this.cache && this.cache.enabled) {","    this.cache.save(response.data.id, response.data);","  }","","  return response;","};","","/**"," * Store the returned items in cache."," * @param  {object}   response   Response object from the getAll request."," * @return {response}            Response object from the getAll request."," */","Resource.prototype._updateCachedResources = function (response) {","  var data = response.data;","  var dataLength = data.length;","  var i;","","  if (this.cache && this.cache.enabled) {","","    for (i = 0; i < dataLength; i++) {","      this.cache.save(data[i].id, data[i]);","    }","","  }","","  return response;","};","","/**"," * Delete a single cached resource."," * @param  {string} id            ID of the resource to remove."," * @param  {object}   response    Response object from the getAll request."," * @return {response}             Response object from the getAll request."," */","Resource.prototype._deleteCachedResource = function (id, response) {","  if (this.cache && this.cache.enabled) {","    this.cache.remove(id);","  }","","  return response;","};","","/**"," * Delete an array of cached resources"," * @param  {array}    ids         Array of resource id's to delete from cache."," * @param  {object}   response    Response object from the getAll request."," * @return {response}             Response object from the getAll request."," */","Resource.prototype._deleteCachedResources = function (ids, response) {","  var dataLength = ids.length;","  var i;","","  if (this.cache && this.cache.enabled) {","","    for (i = 0; i < dataLength; i++) {","      this.cache.remove(ids[i]);","    }","","  }","","  return response;","};","","module.exports = Resource;",""]};
	}
	__cov_OS1fgrT6itv_d1WvIkW2Cg = __cov_OS1fgrT6itv_d1WvIkW2Cg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Resource.js'];
	__cov_OS1fgrT6itv_d1WvIkW2Cg.s['1']++;var extend=__webpack_require__(2);__cov_OS1fgrT6itv_d1WvIkW2Cg.s['2']++;var Request=__webpack_require__(3);__cov_OS1fgrT6itv_d1WvIkW2Cg.s['3']++;var utils=__webpack_require__(9);function Resource(options){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['1']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['5']++;this.defaults={host:'https://api.ingest.io',all:'/<%=resource%>',byId:'/<%=resource%>/<%=id%>',thumbnails:'/<%=resource%>/<%=id%>/thumbnails',trash:'/<%=resource%>?filter=trashed',deleteMethods:{'permanent':'?permanent=1'},search:'/<%=resource%>?search=<%=input%>',tokenSource:null,resource:null};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['6']++;this.config=extend(true,{},this.defaults,options);__cov_OS1fgrT6itv_d1WvIkW2Cg.s['7']++;this.cache=this.config.cache;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['8']++;Resource.prototype._tokenSource=function(){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['2']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['9']++;var result=null;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['10']++;if(this.config.tokenSource){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['1'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['11']++;result=this.config.tokenSource.call();}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['1'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['12']++;return result;};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['13']++;Resource.prototype.getAll=function(headers){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['3']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['14']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['15']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['16']++;request=new Request({url:url,token:this._tokenSource(),headers:headers});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['17']++;return request.send().then(this._updateCachedResources.bind(this));};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['18']++;Resource.prototype.getById=function(id){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['4']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['19']++;var url,cachedResult,request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['20']++;if(typeof id!=='string'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['2'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['21']++;return utils.promisify(false,'IngestAPI Resource getById requires a valid id passed as a string.');}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['2'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['22']++;url=utils.parseTokens(this.config.host+this.config.byId,{resource:this.config.resource,id:id});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['23']++;if((__cov_OS1fgrT6itv_d1WvIkW2Cg.b['4'][0]++,this.cache)&&(__cov_OS1fgrT6itv_d1WvIkW2Cg.b['4'][1]++,this.cache.enabled)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['3'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['24']++;cachedResult=this.cache.retrieve(id);}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['3'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['25']++;if(cachedResult){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['5'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['26']++;return utils.promisify(true,{data:cachedResult});}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['5'][1]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['27']++;request=new Request({url:url,token:this._tokenSource()});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['28']++;return request.send();}};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['29']++;Resource.prototype.getTrashed=function(headers){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['5']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['30']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['31']++;var url=utils.parseTokens(this.config.host+this.config.trash,{resource:this.config.resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['32']++;request=new Request({url:url,token:this._tokenSource(),headers:headers});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['33']++;return request.send();};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['34']++;Resource.prototype.getThumbnails=function(id){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['6']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['35']++;var url,request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['36']++;if(typeof id!=='string'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['6'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['37']++;return utils.promisify(false,'IngestAPI Resource getThumbnails requires an id to be passed as a string.');}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['6'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['38']++;url=utils.parseTokens(this.config.host+this.config.thumbnails,{resource:this.config.resource,id:id});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['39']++;request=new Request({url:url,token:this._tokenSource()});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['40']++;return request.send();};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['41']++;Resource.prototype.add=function(resource){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['7']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['42']++;var url,request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['43']++;if(typeof resource!=='object'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['7'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['44']++;return utils.promisify(false,'IngestAPI Resource add requires a resource passed as an object.');}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['7'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['45']++;url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['46']++;request=new Request({url:url,token:this._tokenSource(),method:'POST',data:resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['47']++;return request.send().then(this._updateCachedResource.bind(this));};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['48']++;Resource.prototype.update=function(resource){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['8']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['49']++;if(typeof resource!=='object'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['8'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['50']++;return utils.promisify(false,'IngestAPI Resource update requires a resource to be passed either as an object or an array of objects.');}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['8'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['51']++;if(Array.isArray(resource)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['9'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['52']++;return this._updateResourceArray(resource);}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['9'][1]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['53']++;return this._updateResource(resource);}};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['54']++;Resource.prototype._updateResource=function(resource){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['9']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['55']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['56']++;var data=resource;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['57']++;var url=utils.parseTokens(this.config.host+this.config.byId,{resource:this.config.resource,id:resource.id});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['58']++;if((__cov_OS1fgrT6itv_d1WvIkW2Cg.b['11'][0]++,this.cache)&&(__cov_OS1fgrT6itv_d1WvIkW2Cg.b['11'][1]++,this.cache.enabled)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['10'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['59']++;data=this.cache.diff(resource.id,resource);}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['10'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['60']++;if(!data){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['12'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['61']++;return utils.promisify(true,{data:this.cache.retrieve(resource.id)});}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['12'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['62']++;request=new Request({url:url,token:this._tokenSource(),method:'PATCH',data:data});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['63']++;return request.send().then(this._updateCachedResource.bind(this));};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['64']++;Resource.prototype._updateResourceArray=function(resources){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['10']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['65']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['66']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['67']++;request=new Request({url:url,token:this._tokenSource(),method:'PATCH',data:resources});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['68']++;return request.send().then(this._updateCachedResources.bind(this));};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['69']++;Resource.prototype['delete']=function(resource,async){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['11']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['70']++;if(typeof async==='undefined'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['13'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['71']++;async=true;}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['13'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['72']++;if(typeof resource!=='string'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['14'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['73']++;if(Array.isArray(resource)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['15'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['74']++;return this._deleteResourceArray(resource,false,async);}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['15'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['75']++;return utils.promisify(false,'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.');}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['14'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['76']++;return this._deleteResource(resource,false,async);};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['77']++;Resource.prototype.permanentDelete=function(resource,async){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['12']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['78']++;if(typeof async==='undefined'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['16'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['79']++;async=true;}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['16'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['80']++;if(typeof resource!=='string'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['17'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['81']++;if(Array.isArray(resource)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['18'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['82']++;return this._deleteResourceArray(resource,true,async);}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['18'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['83']++;return utils.promisify(false,'IngestAPI Resource delete requires a resource to be passed either as a string or an array of strings.');}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['17'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['84']++;return this._deleteResource(resource,true,async);};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['85']++;Resource.prototype._deleteResource=function(resource,permanent,async){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['13']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['86']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['87']++;var url=utils.parseTokens(this.config.host+this.config.byId,{resource:this.config.resource,id:resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['88']++;if(permanent===true){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['19'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['89']++;url+=this.config.deleteMethods.permanent;}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['19'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['90']++;request=new Request({url:url,async:async,token:this._tokenSource(),method:'DELETE'});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['91']++;return request.send().then(this._deleteCachedResource.bind(this,resource));};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['92']++;Resource.prototype._deleteResourceArray=function(resources,permanent){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['14']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['93']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['94']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['95']++;if(permanent===true){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['20'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['96']++;url+=this.config.deleteMethods.permanent;}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['20'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['97']++;request=new Request({url:url,token:this._tokenSource(),method:'DELETE',data:resources});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['98']++;return request.send().then(this._deleteCachedResources.bind(this,resources));};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['99']++;Resource.prototype.search=function(input,headers){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['15']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['100']++;var url,request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['101']++;if(typeof input!=='string'){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['21'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['102']++;return utils.promisify(false,'IngestAPI Resource search requires search input to be passed as a string.');}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['21'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['103']++;url=utils.parseTokens(this.config.host+this.config.search,{resource:this.config.resource,input:input});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['104']++;request=new Request({url:url,token:this._tokenSource(),headers:headers});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['105']++;return request.send();};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['106']++;Resource.prototype.count=function(){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['16']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['107']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['108']++;var url=utils.parseTokens(this.config.host+this.config.all,{resource:this.config.resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['109']++;request=new Request({url:url,token:this._tokenSource(),method:'HEAD'});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['110']++;return request.send().then(this._handleCountResponse);};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['111']++;Resource.prototype.trashCount=function(){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['17']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['112']++;var request;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['113']++;var url=utils.parseTokens(this.config.host+this.config.trash,{resource:this.config.resource});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['114']++;request=new Request({url:url,token:this._tokenSource(),method:'HEAD'});__cov_OS1fgrT6itv_d1WvIkW2Cg.s['115']++;return request.send().then(this._handleCountResponse);};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['116']++;Resource.prototype._handleCountResponse=function(response){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['18']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['117']++;return parseInt(response.headers('Resource-Count'),10);};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['118']++;Resource.prototype._updateCachedResource=function(response){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['19']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['119']++;if((__cov_OS1fgrT6itv_d1WvIkW2Cg.b['23'][0]++,this.cache)&&(__cov_OS1fgrT6itv_d1WvIkW2Cg.b['23'][1]++,this.cache.enabled)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['22'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['120']++;this.cache.save(response.data.id,response.data);}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['22'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['121']++;return response;};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['122']++;Resource.prototype._updateCachedResources=function(response){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['20']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['123']++;var data=response.data;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['124']++;var dataLength=data.length;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['125']++;var i;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['126']++;if((__cov_OS1fgrT6itv_d1WvIkW2Cg.b['25'][0]++,this.cache)&&(__cov_OS1fgrT6itv_d1WvIkW2Cg.b['25'][1]++,this.cache.enabled)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['24'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['127']++;for(i=0;i<dataLength;i++){__cov_OS1fgrT6itv_d1WvIkW2Cg.s['128']++;this.cache.save(data[i].id,data[i]);}}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['24'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['129']++;return response;};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['130']++;Resource.prototype._deleteCachedResource=function(id,response){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['21']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['131']++;if((__cov_OS1fgrT6itv_d1WvIkW2Cg.b['27'][0]++,this.cache)&&(__cov_OS1fgrT6itv_d1WvIkW2Cg.b['27'][1]++,this.cache.enabled)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['26'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['132']++;this.cache.remove(id);}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['26'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['133']++;return response;};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['134']++;Resource.prototype._deleteCachedResources=function(ids,response){__cov_OS1fgrT6itv_d1WvIkW2Cg.f['22']++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['135']++;var dataLength=ids.length;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['136']++;var i;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['137']++;if((__cov_OS1fgrT6itv_d1WvIkW2Cg.b['29'][0]++,this.cache)&&(__cov_OS1fgrT6itv_d1WvIkW2Cg.b['29'][1]++,this.cache.enabled)){__cov_OS1fgrT6itv_d1WvIkW2Cg.b['28'][0]++;__cov_OS1fgrT6itv_d1WvIkW2Cg.s['138']++;for(i=0;i<dataLength;i++){__cov_OS1fgrT6itv_d1WvIkW2Cg.s['139']++;this.cache.remove(ids[i]);}}else{__cov_OS1fgrT6itv_d1WvIkW2Cg.b['28'][1]++;}__cov_OS1fgrT6itv_d1WvIkW2Cg.s['140']++;return response;};__cov_OS1fgrT6itv_d1WvIkW2Cg.s['141']++;module.exports=Resource;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_8e5OJLlOA3qJVS9Z6VUYbw = (Function('return this'))();
	if (!__cov_8e5OJLlOA3qJVS9Z6VUYbw.__coverage__) { __cov_8e5OJLlOA3qJVS9Z6VUYbw.__coverage__ = {}; }
	__cov_8e5OJLlOA3qJVS9Z6VUYbw = __cov_8e5OJLlOA3qJVS9Z6VUYbw.__coverage__;
	if (!(__cov_8e5OJLlOA3qJVS9Z6VUYbw['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Users.js'])) {
	   __cov_8e5OJLlOA3qJVS9Z6VUYbw['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Users.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Users.js","s":{"1":0,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Users","line":7,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":20,"column":37},"end":{"line":20,"column":49}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":39,"column":41},"end":{"line":39,"column":65}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":73,"column":36},"end":{"line":73,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"5":{"start":{"line":7,"column":2},"end":{"line":7,"column":31}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"8":{"start":{"line":20,"column":0},"end":{"line":27,"column":2}},"9":{"start":{"line":21,"column":2},"end":{"line":24,"column":5}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":24}},"11":{"start":{"line":39,"column":0},"end":{"line":66,"column":2}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}},"13":{"start":{"line":42,"column":2},"end":{"line":45,"column":3}},"14":{"start":{"line":43,"column":4},"end":{"line":44,"column":85}},"15":{"start":{"line":47,"column":2},"end":{"line":50,"column":3}},"16":{"start":{"line":48,"column":4},"end":{"line":49,"column":84}},"17":{"start":{"line":52,"column":2},"end":{"line":55,"column":4}},"18":{"start":{"line":57,"column":2},"end":{"line":57,"column":75}},"19":{"start":{"line":59,"column":2},"end":{"line":63,"column":5}},"20":{"start":{"line":65,"column":2},"end":{"line":65,"column":24}},"21":{"start":{"line":73,"column":0},"end":{"line":81,"column":2}},"22":{"start":{"line":74,"column":2},"end":{"line":78,"column":5}},"23":{"start":{"line":80,"column":2},"end":{"line":80,"column":24}},"24":{"start":{"line":83,"column":0},"end":{"line":83,"column":23}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]}},"code":["var Resource = require('./Resource');","var Request = require('../Request');","var utils = require('../Utils');","","function Users (options) {","","  Resource.call(this, options);","","};","","// This extends the base class of 'Resource'.","Users.prototype = Object.create(Resource.prototype);","Users.prototype.constructor = Users;","","/**"," * Retrieve information for the current user."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.getCurrentUserInfo = function () {","  var request = new Request({","    url: this.config.host + this.config.currentUser,","    token: this._tokenSource()","  });","","  return request.send();","};","","/**"," * Transfer all authorship currently under the specified user onto another."," * This includes all videos & playlists."," * This task is commonly used in conjunction with permanently deleting a user."," *"," * @param {string} oldId - The user who currently has authorship."," * @param {string} newId - The user to transfer authorship to."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.transferUserAuthorship = function (oldId, newId) {","  var tokens, url, request;","","  if (typeof oldId !== 'string') {","    return utils.promisify(false,","      'IngestAPI transferUserAuthorship requires \"oldId\" to be passed as a string.');","  }","","  if (typeof newId !== 'string') {","    return utils.promisify(false,","      'IngestAPI transferUserAuthorship requires \"newId\" to be passed as a string');","  }","","  tokens = {","    oldId: oldId,","    newId: newId","  };","","  url = utils.parseTokens(this.config.host + this.config.transfer, tokens);","","  request = new Request({","    url: url,","    token: this._tokenSource(),","    method: 'PATCH'","  });","","  return request.send();","};","","/**"," * Revokes the authorization token for the current user."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Users.prototype.revokeCurrentUser = function () {","  var request = new Request({","    url: this.config.host + this.config.currentUser + this.config.revoke,","    token: this._tokenSource(),","    method: 'DELETE'","  });","","  return request.send();","};","","module.exports = Users;",""]};
	}
	__cov_8e5OJLlOA3qJVS9Z6VUYbw = __cov_8e5OJLlOA3qJVS9Z6VUYbw['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Users.js'];
	__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['1']++;var Resource=__webpack_require__(12);__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['2']++;var Request=__webpack_require__(3);__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['3']++;var utils=__webpack_require__(9);function Users(options){__cov_8e5OJLlOA3qJVS9Z6VUYbw.f['1']++;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['5']++;Resource.call(this,options);};__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['6']++;Users.prototype=Object.create(Resource.prototype);__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['7']++;Users.prototype.constructor=Users;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['8']++;Users.prototype.getCurrentUserInfo=function(){__cov_8e5OJLlOA3qJVS9Z6VUYbw.f['2']++;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['9']++;var request=new Request({url:this.config.host+this.config.currentUser,token:this._tokenSource()});__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['10']++;return request.send();};__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['11']++;Users.prototype.transferUserAuthorship=function(oldId,newId){__cov_8e5OJLlOA3qJVS9Z6VUYbw.f['3']++;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['12']++;var tokens,url,request;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['13']++;if(typeof oldId!=='string'){__cov_8e5OJLlOA3qJVS9Z6VUYbw.b['1'][0]++;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['14']++;return utils.promisify(false,'IngestAPI transferUserAuthorship requires "oldId" to be passed as a string.');}else{__cov_8e5OJLlOA3qJVS9Z6VUYbw.b['1'][1]++;}__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['15']++;if(typeof newId!=='string'){__cov_8e5OJLlOA3qJVS9Z6VUYbw.b['2'][0]++;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['16']++;return utils.promisify(false,'IngestAPI transferUserAuthorship requires "newId" to be passed as a string');}else{__cov_8e5OJLlOA3qJVS9Z6VUYbw.b['2'][1]++;}__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['17']++;tokens={oldId:oldId,newId:newId};__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['18']++;url=utils.parseTokens(this.config.host+this.config.transfer,tokens);__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['19']++;request=new Request({url:url,token:this._tokenSource(),method:'PATCH'});__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['20']++;return request.send();};__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['21']++;Users.prototype.revokeCurrentUser=function(){__cov_8e5OJLlOA3qJVS9Z6VUYbw.f['4']++;__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['22']++;var request=new Request({url:this.config.host+this.config.currentUser+this.config.revoke,token:this._tokenSource(),method:'DELETE'});__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['23']++;return request.send();};__cov_8e5OJLlOA3qJVS9Z6VUYbw.s['24']++;module.exports=Users;


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_oaZqwUD0hAuKuJk4pxVKkg = (Function('return this'))();
	if (!__cov_oaZqwUD0hAuKuJk4pxVKkg.__coverage__) { __cov_oaZqwUD0hAuKuJk4pxVKkg.__coverage__ = {}; }
	__cov_oaZqwUD0hAuKuJk4pxVKkg = __cov_oaZqwUD0hAuKuJk4pxVKkg.__coverage__;
	if (!(__cov_oaZqwUD0hAuKuJk4pxVKkg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Networks.js'])) {
	   __cov_oaZqwUD0hAuKuJk4pxVKkg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Networks.js'] = {"path":"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Networks.js","s":{"1":0,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Networks","line":7,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":22,"column":30},"end":{"line":22,"column":44}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":32},"end":{"line":51,"column":46}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":81,"column":32},"end":{"line":81,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"5":{"start":{"line":7,"column":2},"end":{"line":7,"column":31}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}},"8":{"start":{"line":22,"column":0},"end":{"line":42,"column":2}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":20}},"10":{"start":{"line":25,"column":2},"end":{"line":28,"column":3}},"11":{"start":{"line":26,"column":4},"end":{"line":27,"column":68}},"12":{"start":{"line":30,"column":2},"end":{"line":32,"column":4}},"13":{"start":{"line":34,"column":2},"end":{"line":39,"column":5}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":24}},"15":{"start":{"line":51,"column":0},"end":{"line":71,"column":2}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":20}},"17":{"start":{"line":54,"column":2},"end":{"line":57,"column":3}},"18":{"start":{"line":55,"column":4},"end":{"line":56,"column":70}},"19":{"start":{"line":59,"column":2},"end":{"line":61,"column":4}},"20":{"start":{"line":63,"column":2},"end":{"line":68,"column":5}},"21":{"start":{"line":70,"column":2},"end":{"line":70,"column":24}},"22":{"start":{"line":81,"column":0},"end":{"line":107,"column":2}},"23":{"start":{"line":82,"column":2},"end":{"line":82,"column":20}},"24":{"start":{"line":84,"column":2},"end":{"line":87,"column":3}},"25":{"start":{"line":85,"column":4},"end":{"line":86,"column":73}},"26":{"start":{"line":89,"column":2},"end":{"line":92,"column":3}},"27":{"start":{"line":90,"column":4},"end":{"line":91,"column":72}},"28":{"start":{"line":94,"column":2},"end":{"line":97,"column":4}},"29":{"start":{"line":99,"column":2},"end":{"line":104,"column":5}},"30":{"start":{"line":106,"column":2},"end":{"line":106,"column":24}},"31":{"start":{"line":110,"column":0},"end":{"line":110,"column":26}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"3":{"line":83,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"4":{"line":87,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]}},"code":["var Resource = require('./Resource');","var Request = require('../Request');","var utils = require('../Utils');","","function Networks (options) {","","  Resource.call(this, options);","","};","","// This extends the base class of 'Resource'.","Networks.prototype = Object.create(Resource.prototype);","Networks.prototype.constructor = Networks;","","/**"," * Link an existing user to the currently authorized network."," *"," * @param {string} id - The unique ID of the user to link."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Networks.prototype.linkUser = function (id) {","  var data, request;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI linkUser requires \"id\" to be passed as a string.');","  }","","  data = {","    user_id: id","  };","","  request = new Request({","    url: this.config.host + '/' + this.config.resource,","    data: data,","    token: this._tokenSource(),","    method: 'LINK'","  });","","  return request.send();","};","","/**"," * Remove the specified user from the currently authorized network."," *"," * @param {string} id - The unique ID of the user to unlink."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Networks.prototype.unlinkUser = function (id) {","  var data, request;","","  if (typeof id !== 'string') {","    return utils.promisify(false,","      'IngestAPI unlinkUser requires \"id\" to be passed as a string.');","  }","","  data = {","    user_id: id","  };","","  request = new Request({","    url: this.config.host + '/' + this.config.resource,","    data: data,","    token: this._tokenSource(),","    method: 'UNLINK'","  });","","  return request.send();","};","","/**"," * Invite a user to the currently authorized network."," *"," * @param {string} email - The email to send the invite to."," * @param {string} name  - The name of the person to invite."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","Networks.prototype.inviteUser = function (email, name) {","  var data, request;","","  if (typeof email !== 'string') {","    return utils.promisify(false,","      'IngestAPI inviteUser requires \"email\" to be passed as a string.');","  }","","  if (typeof name !== 'string') {","    return utils.promisify(false,","      'IngestAPI inviteUser requires \"name\" to be passed as a string.');","  }","","  data = {","    email: email,","    name: name","  };","","  request = new Request({","    url: this.config.host + this.config.invite,","    data: data,","    token: this._tokenSource(),","    method: 'POST'","  });","","  return request.send();","};","","","module.exports = Networks;",""]};
	}
	__cov_oaZqwUD0hAuKuJk4pxVKkg = __cov_oaZqwUD0hAuKuJk4pxVKkg['/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/resources/Networks.js'];
	__cov_oaZqwUD0hAuKuJk4pxVKkg.s['1']++;var Resource=__webpack_require__(12);__cov_oaZqwUD0hAuKuJk4pxVKkg.s['2']++;var Request=__webpack_require__(3);__cov_oaZqwUD0hAuKuJk4pxVKkg.s['3']++;var utils=__webpack_require__(9);function Networks(options){__cov_oaZqwUD0hAuKuJk4pxVKkg.f['1']++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['5']++;Resource.call(this,options);};__cov_oaZqwUD0hAuKuJk4pxVKkg.s['6']++;Networks.prototype=Object.create(Resource.prototype);__cov_oaZqwUD0hAuKuJk4pxVKkg.s['7']++;Networks.prototype.constructor=Networks;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['8']++;Networks.prototype.linkUser=function(id){__cov_oaZqwUD0hAuKuJk4pxVKkg.f['2']++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['9']++;var data,request;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['10']++;if(typeof id!=='string'){__cov_oaZqwUD0hAuKuJk4pxVKkg.b['1'][0]++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['11']++;return utils.promisify(false,'IngestAPI linkUser requires "id" to be passed as a string.');}else{__cov_oaZqwUD0hAuKuJk4pxVKkg.b['1'][1]++;}__cov_oaZqwUD0hAuKuJk4pxVKkg.s['12']++;data={user_id:id};__cov_oaZqwUD0hAuKuJk4pxVKkg.s['13']++;request=new Request({url:this.config.host+'/'+this.config.resource,data:data,token:this._tokenSource(),method:'LINK'});__cov_oaZqwUD0hAuKuJk4pxVKkg.s['14']++;return request.send();};__cov_oaZqwUD0hAuKuJk4pxVKkg.s['15']++;Networks.prototype.unlinkUser=function(id){__cov_oaZqwUD0hAuKuJk4pxVKkg.f['3']++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['16']++;var data,request;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['17']++;if(typeof id!=='string'){__cov_oaZqwUD0hAuKuJk4pxVKkg.b['2'][0]++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['18']++;return utils.promisify(false,'IngestAPI unlinkUser requires "id" to be passed as a string.');}else{__cov_oaZqwUD0hAuKuJk4pxVKkg.b['2'][1]++;}__cov_oaZqwUD0hAuKuJk4pxVKkg.s['19']++;data={user_id:id};__cov_oaZqwUD0hAuKuJk4pxVKkg.s['20']++;request=new Request({url:this.config.host+'/'+this.config.resource,data:data,token:this._tokenSource(),method:'UNLINK'});__cov_oaZqwUD0hAuKuJk4pxVKkg.s['21']++;return request.send();};__cov_oaZqwUD0hAuKuJk4pxVKkg.s['22']++;Networks.prototype.inviteUser=function(email,name){__cov_oaZqwUD0hAuKuJk4pxVKkg.f['4']++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['23']++;var data,request;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['24']++;if(typeof email!=='string'){__cov_oaZqwUD0hAuKuJk4pxVKkg.b['3'][0]++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['25']++;return utils.promisify(false,'IngestAPI inviteUser requires "email" to be passed as a string.');}else{__cov_oaZqwUD0hAuKuJk4pxVKkg.b['3'][1]++;}__cov_oaZqwUD0hAuKuJk4pxVKkg.s['26']++;if(typeof name!=='string'){__cov_oaZqwUD0hAuKuJk4pxVKkg.b['4'][0]++;__cov_oaZqwUD0hAuKuJk4pxVKkg.s['27']++;return utils.promisify(false,'IngestAPI inviteUser requires "name" to be passed as a string.');}else{__cov_oaZqwUD0hAuKuJk4pxVKkg.b['4'][1]++;}__cov_oaZqwUD0hAuKuJk4pxVKkg.s['28']++;data={email:email,name:name};__cov_oaZqwUD0hAuKuJk4pxVKkg.s['29']++;request=new Request({url:this.config.host+this.config.invite,data:data,token:this._tokenSource(),method:'POST'});__cov_oaZqwUD0hAuKuJk4pxVKkg.s['30']++;return request.send();};__cov_oaZqwUD0hAuKuJk4pxVKkg.s['31']++;module.exports=Networks;


/***/ }
/******/ ])
});
;
//# sourceMappingURL=ingest.js.map
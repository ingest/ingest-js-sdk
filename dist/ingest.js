!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.IngestAPI=n():e.IngestAPI=n()}(this,function(){return function(e){function n(o){if(t[o])return t[o].exports;var s=t[o]={exports:{},id:o,loaded:!1};return e[o].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){"use strict";var o=Function("return this")();o.__coverage__||(o.__coverage__={}),o=o.__coverage__,o["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js"]||(o["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js"]={path:"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js",s:{1:0},b:{},f:{},fnMap:{},statementMap:{1:{start:{line:1,column:0},end:{line:1,column:47}}},branchMap:{},code:["module.exports = require('./src/IngestAPI.js');",""]}),o=o["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/index.js"],o.s[1]++,e.exports=t(1)},function(e,n,t){"use strict";function o(e){s.f[1]++,s.s[5]++,this.defaults={host:"https://api.ingest.io",videos:"/videos",videoById:"/videos/<%=id%>",uploadSign:"/videos/<%=id%>/upload/sign",trash:"/videos?filter=trashed"},s.s[6]++,this.config=l(!0,{},this.defaults,e),s.s[7]++,this.config.token?(s.b[1][0]++,s.s[8]++,this.setToken(this.config.token)):s.b[1][1]++}var s=Function("return this")();s.__coverage__||(s.__coverage__={}),s=s.__coverage__,s["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js"]||(s["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js"]={path:"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js",s:{1:0,2:0,3:0,4:1,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0},b:{1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0],19:[0,0]},f:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0},fnMap:{1:{name:"IngestAPI",line:13,loc:{start:{line:11,column:0},end:{line:11,column:29}}},2:{name:"(anonymous_2)",line:36,loc:{start:{line:35,column:31},end:{line:35,column:48}}},3:{name:"(anonymous_3)",line:50,loc:{start:{line:50,column:31},end:{line:50,column:43}}},4:{name:"(anonymous_4)",line:64,loc:{start:{line:65,column:32},end:{line:65,column:51}}},5:{name:"(anonymous_5)",line:78,loc:{start:{line:80,column:35},end:{line:80,column:54}}},6:{name:"(anonymous_6)",line:95,loc:{start:{line:99,column:31},end:{line:99,column:54}}},7:{name:"(anonymous_7)",line:123,loc:{start:{line:130,column:34},end:{line:130,column:53}}},8:{name:"(anonymous_8)",line:140,loc:{start:{line:149,column:37},end:{line:149,column:49}}},9:{name:"(anonymous_9)",line:153,loc:{start:{line:163,column:44},end:{line:163,column:56}}},10:{name:"(anonymous_10)",line:167,loc:{start:{line:178,column:39},end:{line:178,column:59}}},11:{name:"(anonymous_11)",line:180,loc:{start:{line:192,column:37},end:{line:192,column:53}}},12:{name:"(anonymous_12)",line:203,loc:{start:{line:216,column:43},end:{line:216,column:59}}},13:{name:"(anonymous_13)",line:239,loc:{start:{line:252,column:30},end:{line:252,column:54}}},14:{name:"(anonymous_14)",line:252,loc:{start:{line:266,column:32},end:{line:266,column:56}}}},statementMap:{1:{start:{line:1,column:0},end:{line:1,column:38}},2:{start:{line:2,column:0},end:{line:2,column:36}},3:{start:{line:3,column:0},end:{line:3,column:31}},4:{start:{line:11,column:0},end:{line:29,column:1}},5:{start:{line:13,column:2},end:{line:19,column:4}},6:{start:{line:22,column:2},end:{line:22,column:57}},7:{start:{line:24,column:2},end:{line:27,column:3}},8:{start:{line:26,column:4},end:{line:26,column:37}},9:{start:{line:35,column:0},end:{line:44,column:2}},10:{start:{line:38,column:2},end:{line:40,column:3}},11:{start:{line:39,column:4},end:{line:39,column:86}},12:{start:{line:42,column:2},end:{line:42,column:21}},13:{start:{line:50,column:0},end:{line:58,column:2}},14:{start:{line:52,column:2},end:{line:54,column:3}},15:{start:{line:53,column:4},end:{line:53,column:61}},16:{start:{line:56,column:2},end:{line:56,column:20}},17:{start:{line:65,column:0},end:{line:73,column:2}},18:{start:{line:67,column:2},end:{line:71,column:5}},19:{start:{line:80,column:0},end:{line:93,column:2}},20:{start:{line:82,column:2},end:{line:86,column:3}},21:{start:{line:84,column:4},end:{line:85,column:70}},22:{start:{line:88,column:2},end:{line:91,column:5}},23:{start:{line:99,column:0},end:{line:124,column:2}},24:{start:{line:102,column:2},end:{line:106,column:3}},25:{start:{line:104,column:4},end:{line:105,column:53}},26:{start:{line:109,column:2},end:{line:114,column:3}},27:{start:{line:110,column:4},end:{line:110,column:46}},28:{start:{line:112,column:4},end:{line:113,column:80}},29:{start:{line:117,column:2},end:{line:122,column:5}},30:{start:{line:130,column:0},end:{line:143,column:2}},31:{start:{line:132,column:2},end:{line:135,column:3}},32:{start:{line:133,column:4},end:{line:134,column:71}},33:{start:{line:137,column:2},end:{line:141,column:5}},34:{start:{line:149,column:0},end:{line:157,column:2}},35:{start:{line:151,column:2},end:{line:155,column:44}},36:{start:{line:163,column:0},end:{line:171,column:2}},37:{start:{line:165,column:2},end:{line:169,column:44}},38:{start:{line:178,column:0},end:{line:182,column:2}},39:{start:{line:180,column:2},end:{line:180,column:58}},40:{start:{line:192,column:0},end:{line:207,column:2}},41:{start:{line:194,column:2},end:{line:194,column:52}},42:{start:{line:197,column:2},end:{line:199,column:3}},43:{start:{line:198,column:4},end:{line:198,column:54}},44:{start:{line:201,column:2},end:{line:205,column:5}},45:{start:{line:216,column:0},end:{line:244,column:2}},46:{start:{line:218,column:2},end:{line:221,column:4}},47:{start:{line:223,column:2},end:{line:226,column:3}},48:{start:{line:224,column:4},end:{line:224,column:25}},49:{start:{line:225,column:4},end:{line:225,column:59}},50:{start:{line:228,column:2},end:{line:231,column:3}},51:{start:{line:229,column:4},end:{line:229,column:25}},52:{start:{line:230,column:4},end:{line:230,column:58}},53:{start:{line:233,column:2},end:{line:236,column:3}},54:{start:{line:234,column:4},end:{line:234,column:25}},55:{start:{line:235,column:4},end:{line:235,column:62}},56:{start:{line:238,column:2},end:{line:241,column:3}},57:{start:{line:239,column:4},end:{line:239,column:25}},58:{start:{line:240,column:4},end:{line:240,column:64}},59:{start:{line:243,column:2},end:{line:243,column:16}},60:{start:{line:252,column:0},end:{line:258,column:2}},61:{start:{line:254,column:2},end:{line:254,column:47}},62:{start:{line:256,column:2},end:{line:256,column:16}},63:{start:{line:266,column:0},end:{line:274,column:2}},64:{start:{line:268,column:2},end:{line:268,column:26}},65:{start:{line:270,column:2},end:{line:270,column:26}},66:{start:{line:272,column:2},end:{line:272,column:17}},67:{start:{line:276,column:0},end:{line:276,column:27}}},branchMap:{1:{line:26,type:"if",locations:[{start:{line:24,column:2},end:{line:24,column:2}},{start:{line:24,column:2},end:{line:24,column:2}}]},2:{line:39,type:"if",locations:[{start:{line:38,column:2},end:{line:38,column:2}},{start:{line:38,column:2},end:{line:38,column:2}}]},3:{line:39,type:"binary-expr",locations:[{start:{line:38,column:6},end:{line:38,column:12}},{start:{line:38,column:16},end:{line:38,column:41}}]},4:{line:52,type:"if",locations:[{start:{line:52,column:2},end:{line:52,column:2}},{start:{line:52,column:2},end:{line:52,column:2}}]},5:{line:80,type:"if",locations:[{start:{line:82,column:2},end:{line:82,column:2}},{start:{line:82,column:2},end:{line:82,column:2}}]},6:{line:80,type:"binary-expr",locations:[{start:{line:82,column:6},end:{line:82,column:14}},{start:{line:82,column:18},end:{line:82,column:45}}]},7:{line:98,type:"if",locations:[{start:{line:102,column:2},end:{line:102,column:2}},{start:{line:102,column:2},end:{line:102,column:2}}]},8:{line:98,type:"binary-expr",locations:[{start:{line:102,column:6},end:{line:102,column:18}},{start:{line:102,column:22},end:{line:102,column:53}}]},9:{line:125,type:"if",locations:[{start:{line:132,column:2},end:{line:132,column:2}},{start:{line:132,column:2},end:{line:132,column:2}}]},10:{line:125,type:"binary-expr",locations:[{start:{line:132,column:6},end:{line:132,column:14}},{start:{line:132,column:18},end:{line:132,column:45}}]},11:{line:185,type:"if",locations:[{start:{line:197,column:2},end:{line:197,column:2}},{start:{line:197,column:2},end:{line:197,column:2}}]},12:{line:210,type:"if",locations:[{start:{line:223,column:2},end:{line:223,column:2}},{start:{line:223,column:2},end:{line:223,column:2}}]},13:{line:210,type:"binary-expr",locations:[{start:{line:223,column:6},end:{line:223,column:11}},{start:{line:223,column:15},end:{line:223,column:39}}]},14:{line:215,type:"if",locations:[{start:{line:228,column:2},end:{line:228,column:2}},{start:{line:228,column:2},end:{line:228,column:2}}]},15:{line:215,type:"binary-expr",locations:[{start:{line:228,column:6},end:{line:228,column:15}},{start:{line:228,column:19},end:{line:228,column:47}}]},16:{line:220,type:"if",locations:[{start:{line:233,column:2},end:{line:233,column:2}},{start:{line:233,column:2},end:{line:233,column:2}}]},17:{line:220,type:"binary-expr",locations:[{start:{line:233,column:6},end:{line:233,column:20}},{start:{line:233,column:24},end:{line:233,column:57}}]},18:{line:225,type:"if",locations:[{start:{line:238,column:2},end:{line:238,column:2}},{start:{line:238,column:2},end:{line:238,column:2}}]},19:{line:225,type:"binary-expr",locations:[{start:{line:238,column:6},end:{line:238,column:22}},{start:{line:238,column:26},end:{line:238,column:61}}]}},code:["var Request = require('./Request.js');","var Promise = require('pinkyswear');","var extend = require('extend');","","/**"," * IngestAPI Object"," * @param {object} options Options to override the default."," * @param {string} options.host Override the default live host."," * @param {string} options.token Auth token to use for requests."," */","function IngestAPI (options) {","","  this.defaults = {","    'host': 'https://api.ingest.io',","    'videos': '/videos',","    'videoById': '/videos/<%=id%>',","    'uploadSign': '/videos/<%=id%>/upload/sign',","    'trash': '/videos?filter=trashed'","  };","","  // Create a config object by extending the defaults with the pass options.","  this.config = extend(true, {}, this.defaults, options);","","  if (this.config.token) {","    // Store the token for future use.","    this.setToken(this.config.token);","  }","","}","","/**"," * Set the auth token to use."," * @param   {String}        token Auth token to use."," */","IngestAPI.prototype.setToken = function (token) {","","  // Make sure a valid value is passed.","  if (!token || typeof token !== 'string') {","    throw new Error('IngestAPI requires an authentication token passed as a string.');","  }","","  this.token = token;","","};","","/**"," * Return the current auth token."," * @return  {String}        Current auth token."," */","IngestAPI.prototype.getToken = function () {","","  if (!this.token) {","    throw new Error('IngestAPI requires a token to be set.');","  }","","  return this.token;","","};","","/**"," * Return a list of videos for the current user and network."," * @param {object} headers Javascript object representing headers to apply to the call."," * @return  {JSON}          A JSON object representing the videos."," */","IngestAPI.prototype.getVideos = function (headers) {","","  return new Request({","    url: this.config.host + this.config.videos,","    token: this.getToken(),","    headers: headers","  });","","};","","/**"," * Return a video match the supplied id."," * @param   {String}       videoId ID for the requested video."," * @return  {JSON}         JSON object representing the requested video."," */","IngestAPI.prototype.getVideoById = function (videoId) {","","  if (!videoId || typeof videoId !== 'string') {","    // Wrap the error in a promise so the user is still catching the errors.","    return this.promisify(false,","      'IngestAPI getVideoById requires a valid videoId as a string.');","  }","","  return new Request({","    url: this.parseId(this.config.host + this.config.videoById, videoId),","    token: this.getToken()","  });","","};","","/**"," * Add a new video."," * @param   {object}  videoObject An object representing the video to add."," */","IngestAPI.prototype.addVideo = function (videoObject) {","","  // Validate the object being passed in.","  if (!videoObject || typeof videoObject !== 'object') {","    // Wrap the error in a promise.","    return this.promisify(false,","      'IngestAPI addVideo requires a video object.');","  }","","  // Parse the JSON","  try {","    videoObject = JSON.stringify(videoObject);","  } catch (error) {","    return this.promisify(false,","      'IngestAPI addVideo failed to parse videoObject to JSON. ' + error.stack);","  }","","  // Return the promise from the request.","  return new Request({","    url: this.config.host + this.config.videos,","    token: this.getToken(),","    method: 'POST',","    data: videoObject","  });","","};","","/**"," * Delete a video."," * @param  {string}   videoId   ID for the video to delete."," */","IngestAPI.prototype.deleteVideo = function (videoId) {","","  if (!videoId || typeof videoId !== 'string') {","    return this.promisify(false,","      'IngestAPI deleteVideo requires a video ID passed as a string.');","  }","","  return new Request({","    url: this.parseId(this.config.host + this.config.videoById, videoId),","    token: this.getToken(),","    method: 'DELETE'","  });","","};","","/**"," * Get the total count of videos."," * @return {number} The number of videos in the current network."," */","IngestAPI.prototype.getVideosCount = function () {","","  return new Request({","    url: this.config.host + this.config.videos,","    token: this.getToken(),","    method: 'HEAD'","  }).then(this.getCountResponse.bind(this));","","};","","/**"," * Get a count of the current videos in the trash."," * @return {Promise} Promise/A+ spec which resolves with the trashed video count."," */","IngestAPI.prototype.getTrashedVideosCount = function () {","","  return new Request({","    url: this.config.host + this.config.trash,","    token: this.getToken(),","    method: 'HEAD'","  }).then(this.getCountResponse.bind(this));","","};","","/**"," * Handle the response from the retrieving video counts."," * @param  {object} response  Request response object."," * @return {number}           The resource count from the response."," */","IngestAPI.prototype.getCountResponse = function (response) {","","  return parseInt(response.headers('Resource-Count'), 10);","","};","","/**"," * Make a request and sign the blob to be uploaded."," * @param  {object}   data            File data used to sign the upload."," * @param  {string}   data.id         The file id. // TODO Better description?"," * @param  {string}   data.key        The key associated with the file on AWS. // TODO Better Description?"," * @param  {string}   data.uploadId   Upload id // TODO better description."," * @return {Promise}                  Promise/A+ spec which resolves with the signed token object."," */","IngestAPI.prototype.signUploadBlob = function (data) {","","  var checkObject = this.validateUploadObject(data);","","  // Make sure all the proper properties have been passed in.","  if (!checkObject.valid) {","    return this.promisify(false, checkObject.message);","  }","","  return new Request({","    url: this.parseId(this.config.host + this.config.uploadSign, data.id),","    token: this.getToken(),","    method: 'POST'","  });","","};","","/**"," * Validate the object supplying the upload data."," * @param  {object}   data            File data used to sign the upload."," * @param  {string}   data.key        The key associated with the file on AWS. // TODO Better Description?"," * @param  {string}   data.uploadId   Upload id // TODO better description."," * @return {boolean}  Boolean representing weather or not the object is valid."," **/","IngestAPI.prototype.validateUploadObject = function (data) {","","  var result = {","    valid: true,","    message: ''","  };","","  if (!data || typeof data !== 'object') {","    result.valid = false;","    result.message = 'The passed value was not an object.';","  }","","  if (!data.key || typeof data.key !== 'string') {","    result.valid = false;","    result.message = 'Missing or invalid property : key.';","  }","","  if (!data.uploadId || typeof data.uploadId !== 'string') {","    result.valid = false;","    result.message = 'Missing or invalid property : uploadId';","  }","","  if (!data.partNumber || typeof data.partNumber !== 'number') {","    result.valid = false;","    result.message = 'Missing or invalid property : partNumber';","  }","","  return result;","};","","/**"," * Replace the ID in the template string with the supplied id."," * @param  {string}     template    Template for the url."," * @param  {string}     id          Video ID to inject into the template."," * @return {string}                 Parsed string."," */","IngestAPI.prototype.parseId = function (template, id) {","","  var result = template.replace('<%=id%>', id);","","  return result;","","};","","/**"," * Wrapper function to wrap a value in either a reject or resolve."," * @param  {boolean} state Rejection or Approval."," * @param  {*}       value Value to pass back to the promise."," * @return {Promise}       Promise/A+ spec promise."," */","IngestAPI.prototype.promisify = function (state, value) {","","  var promise = Promise();","","  promise(state, [value]);","","  return promise;","","};","","module.exports = IngestAPI;",""]}),s=s["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/IngestAPI.js"],s.s[1]++;var i=t(2);s.s[2]++;var r=t(3);s.s[3]++;var l=t(7);s.s[9]++,o.prototype.setToken=function(e){if(s.f[2]++,s.s[10]++,s.b[3][0]++,!e||(s.b[3][1]++,"string"!=typeof e))throw s.b[2][0]++,s.s[11]++,new Error("IngestAPI requires an authentication token passed as a string.");s.b[2][1]++,s.s[12]++,this.token=e},s.s[13]++,o.prototype.getToken=function(){if(s.f[3]++,s.s[14]++,!this.token)throw s.b[4][0]++,s.s[15]++,new Error("IngestAPI requires a token to be set.");return s.b[4][1]++,s.s[16]++,this.token},s.s[17]++,o.prototype.getVideos=function(e){return s.f[4]++,s.s[18]++,new i({url:this.config.host+this.config.videos,token:this.getToken(),headers:e})},s.s[19]++,o.prototype.getVideoById=function(e){return s.f[5]++,s.s[20]++,s.b[6][0]++,e&&(s.b[6][1]++,"string"==typeof e)?(s.b[5][1]++,s.s[22]++,new i({url:this.parseId(this.config.host+this.config.videoById,e),token:this.getToken()})):(s.b[5][0]++,s.s[21]++,this.promisify(!1,"IngestAPI getVideoById requires a valid videoId as a string."))},s.s[23]++,o.prototype.addVideo=function(e){if(s.f[6]++,s.s[24]++,s.b[8][0]++,!e||(s.b[8][1]++,"object"!=typeof e))return s.b[7][0]++,s.s[25]++,this.promisify(!1,"IngestAPI addVideo requires a video object.");s.b[7][1]++,s.s[26]++;try{s.s[27]++,e=JSON.stringify(e)}catch(n){return s.s[28]++,this.promisify(!1,"IngestAPI addVideo failed to parse videoObject to JSON. "+n.stack)}return s.s[29]++,new i({url:this.config.host+this.config.videos,token:this.getToken(),method:"POST",data:e})},s.s[30]++,o.prototype.deleteVideo=function(e){return s.f[7]++,s.s[31]++,s.b[10][0]++,e&&(s.b[10][1]++,"string"==typeof e)?(s.b[9][1]++,s.s[33]++,new i({url:this.parseId(this.config.host+this.config.videoById,e),token:this.getToken(),method:"DELETE"})):(s.b[9][0]++,s.s[32]++,this.promisify(!1,"IngestAPI deleteVideo requires a video ID passed as a string."))},s.s[34]++,o.prototype.getVideosCount=function(){return s.f[8]++,s.s[35]++,new i({url:this.config.host+this.config.videos,token:this.getToken(),method:"HEAD"}).then(this.getCountResponse.bind(this))},s.s[36]++,o.prototype.getTrashedVideosCount=function(){return s.f[9]++,s.s[37]++,new i({url:this.config.host+this.config.trash,token:this.getToken(),method:"HEAD"}).then(this.getCountResponse.bind(this))},s.s[38]++,o.prototype.getCountResponse=function(e){return s.f[10]++,s.s[39]++,parseInt(e.headers("Resource-Count"),10)},s.s[40]++,o.prototype.signUploadBlob=function(e){s.f[11]++,s.s[41]++;var n=this.validateUploadObject(e);return s.s[42]++,n.valid?(s.b[11][1]++,s.s[44]++,new i({url:this.parseId(this.config.host+this.config.uploadSign,e.id),token:this.getToken(),method:"POST"})):(s.b[11][0]++,s.s[43]++,this.promisify(!1,n.message))},s.s[45]++,o.prototype.validateUploadObject=function(e){s.f[12]++,s.s[46]++;var n={valid:!0,message:""};return s.s[47]++,s.b[13][0]++,e&&(s.b[13][1]++,"object"==typeof e)?s.b[12][1]++:(s.b[12][0]++,s.s[48]++,n.valid=!1,s.s[49]++,n.message="The passed value was not an object."),s.s[50]++,s.b[15][0]++,e.key&&(s.b[15][1]++,"string"==typeof e.key)?s.b[14][1]++:(s.b[14][0]++,s.s[51]++,n.valid=!1,s.s[52]++,n.message="Missing or invalid property : key."),s.s[53]++,s.b[17][0]++,e.uploadId&&(s.b[17][1]++,"string"==typeof e.uploadId)?s.b[16][1]++:(s.b[16][0]++,s.s[54]++,n.valid=!1,s.s[55]++,n.message="Missing or invalid property : uploadId"),s.s[56]++,s.b[19][0]++,e.partNumber&&(s.b[19][1]++,"number"==typeof e.partNumber)?s.b[18][1]++:(s.b[18][0]++,s.s[57]++,n.valid=!1,s.s[58]++,n.message="Missing or invalid property : partNumber"),s.s[59]++,n},s.s[60]++,o.prototype.parseId=function(e,n){s.f[13]++,s.s[61]++;var t=e.replace("<%=id%>",n);return s.s[62]++,t},s.s[63]++,o.prototype.promisify=function(e,n){s.f[14]++,s.s[64]++;var t=r();return s.s[65]++,t(e,[n]),s.s[66]++,t},s.s[67]++,e.exports=o},function(e,n,t){"use strict";var o=Function("return this")();o.__coverage__||(o.__coverage__={}),o=o.__coverage__,o["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js"]||(o["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js"]={path:"/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js",s:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0},b:{1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0]},f:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},fnMap:{1:{name:"Request",line:15,loc:{start:{line:13,column:14},end:{line:13,column:33}}},2:{name:"(anonymous_2)",line:49,loc:{start:{line:48,column:35},end:{line:48,column:47}}},3:{name:"(anonymous_3)",line:56,loc:{start:{line:55,column:32},end:{line:55,column:44}}},4:{name:"(anonymous_4)",line:82,loc:{start:{line:82,column:40},end:{line:82,column:59}}},5:{name:"(anonymous_5)",line:99,loc:{start:{line:100,column:36},end:{line:100,column:56}}},6:{name:"(anonymous_6)",line:113,loc:{start:{line:115,column:36},end:{line:115,column:56}}},7:{name:"(anonymous_7)",line:139,loc:{start:{line:142,column:33},end:{line:142,column:50}}},8:{name:"(anonymous_8)",line:146,loc:{start:{line:149,column:37},end:{line:149,column:49}}},9:{name:"(anonymous_9)",line:165,loc:{start:{line:170,column:40},end:{line:170,column:64}}}},statementMap:{1:{start:{line:1,column:0},end:{line:1,column:36}},2:{start:{line:2,column:0},end:{line:2,column:31}},3:{start:{line:4,column:0},end:{line:4,column:48}},4:{start:{line:13,column:0},end:{line:43,column:2}},5:{start:{line:15,column:2},end:{line:18,column:4}},6:{start:{line:20,column:2},end:{line:20,column:27}},7:{start:{line:23,column:2},end:{line:23,column:38}},8:{start:{line:26,column:2},end:{line:26,column:24}},9:{start:{line:29,column:2},end:{line:29,column:54}},10:{start:{line:32,column:2},end:{line:35,column:3}},11:{start:{line:33,column:4},end:{line:33,column:84}},12:{start:{line:34,column:4},end:{line:34,column:24}},13:{start:{line:38,column:2},end:{line:38,column:21}},14:{start:{line:41,column:2},end:{line:41,column:22}},15:{start:{line:48,column:0},end:{line:50,column:2}},16:{start:{line:49,column:2},end:{line:49,column:69}},17:{start:{line:55,column:0},end:{line:76,column:2}},18:{start:{line:57,column:2},end:{line:57,column:79}},19:{start:{line:59,column:2},end:{line:61,column:3}},20:{start:{line:60,column:4},end:{line:60,column:51}},21:{start:{line:64,column:2},end:{line:66,column:3}},22:{start:{line:65,column:4},end:{line:65,column:71}},23:{start:{line:69,column:2},end:{line:74,column:3}},24:{start:{line:70,column:4},end:{line:70,column:85}},25:{start:{line:71,column:4},end:{line:71,column:41}},26:{start:{line:73,column:4},end:{line:73,column:24}},27:{start:{line:82,column:0},end:{line:94,column:2}},28:{start:{line:84,column:2},end:{line:84,column:13}},29:{start:{line:85,column:2},end:{line:85,column:34}},30:{start:{line:86,column:2},end:{line:86,column:31}},31:{start:{line:89,column:2},end:{line:92,column:3}},32:{start:{line:90,column:4},end:{line:90,column:18}},33:{start:{line:91,column:4},end:{line:91,column:53}},34:{start:{line:100,column:0},end:{line:108,column:2}},35:{start:{line:103,column:2},end:{line:103,column:49}},36:{start:{line:106,column:2},end:{line:106,column:59}},37:{start:{line:115,column:0},end:{line:136,column:2}},38:{start:{line:116,column:2},end:{line:116,column:68}},39:{start:{line:117,column:2},end:{line:117,column:24}},40:{start:{line:120,column:2},end:{line:128,column:3}},41:{start:{line:121,column:4},end:{line:127,column:5}},42:{start:{line:122,column:6},end:{line:122,column:36}},43:{start:{line:124,column:6},end:{line:126,column:8}},44:{start:{line:130,column:2},end:{line:134,column:4}},45:{start:{line:142,column:0},end:{line:144,column:2}},46:{start:{line:143,column:2},end:{line:143,column:31}},47:{start:{line:149,column:0},end:{line:163,column:2}},48:{start:{line:152,column:2},end:{line:161,column:3}},49:{start:{line:155,column:4},end:{line:159,column:5}},50:{start:{line:156,column:6},end:{line:156,column:54}},51:{start:{line:158,column:6},end:{line:158,column:50}},52:{start:{line:170,column:0},end:{line:188,column:2}},53:{start:{line:172,column:2},end:{line:174,column:6}},54:{start:{line:177,column:2},end:{line:184,column:3}},55:{start:{line:179,column:4},end:{line:182,column:5}},56:{start:{line:180,column:6},end:{line:180,column:20}},57:{start:{line:181,column:6},end:{line:181,column:12}},58:{start:{line:186,column:2},end:{line:186,column:16}},59:{start:{line:190,column:0},end:{line:190,column:25}}},branchMap:{1:{line:34,type:"if",locations:[{start:{line:32,column:2},end:{line:32,column:2}},{start:{line:32,column:2},end:{line:32,column:2}}]},2:{line:60,type:"if",locations:[{start:{line:59,column:2},end:{line:59,column:2}},{start:{line:59,column:2},end:{line:59,column:2}}]},3:{line:65,type:"if",locations:[{start:{line:64,column:2},end:{line:64,column:2}},{start:{line:64,column:2},end:{line:64,column:2}}]},4:{line:70,type:"if",locations:[{start:{line:69,column:2},end:{line:69,column:2}},{start:{line:69,column:2},end:{line:69,column:2}}]},5:{line:118,type:"if",locations:[{start:{line:120,column:2},end:{line:120,column:2}},{start:{line:120,column:2},end:{line:120,column:2}}]},6:{line:118,type:"binary-expr",locations:[{start:{line:120,column:6},end:{line:120,column:18}},{start:{line:120,column:22},end:{line:120,column:69}}]},7:{line:149,type:"if",locations:[{start:{line:152,column:2},end:{line:152,column:2}},{start:{line:152,column:2},end:{line:152,column:2}}]},8:{line:152,type:"if",locations:[{start:{line:155,column:4},end:{line:155,column:4}},{start:{line:155,column:4},end:{line:155,column:4}}]},9:{line:174,type:"if",locations:[{start:{line:179,column:4},end:{line:179,column:4}},{start:{line:179,column:4},end:{line:179,column:4}}]}},code:["var Promise = require('pinkyswear');","var extend = require('extend');","","var VALID_RESPONSE_CODES = [200, 201, 202, 204];","","/**"," * A wrapper around the XMLHttpRequest object."," * @param {object}  options         Options for the request."," * @param {boolean} options.async   Whether to perform the request asynchronously"," * @param {string}  options.method  REST verb to use for the request."," * @param {string}  options.url     URL for the request."," */","var Request = function (options) {","","  this.defaults = {","    async: true,","    method: 'GET'","  };","","  this.promise = Promise();","","  // Create the XHR object for this request.","  this.request = new XMLHttpRequest();","","  // Set up event listeners for this request.","  this.setupListeners();","","  // Todo, merge some defaults with this.","  this.options = extend(true, this.defaults, options);","","  // Make sure a url is passed before attempting to make the request.","  if (!this.options.url) {","    this.promise(false, ['Request Error : a url is required to make the request.']);","    return this.promise;","  }","","  // Make the actual request.","  this.makeRequest();","","  // Return a promise","  return this.promise;","","};","","/**"," * Add event listeners to the XMLHttpRequest object."," */","Request.prototype.setupListeners = function () {","  this.request.onreadystatechange = this.readyStateChange.bind(this);","};","","/**"," * Execute the open and send of the XMLHttpRequest"," */","Request.prototype.makeRequest = function () {","","  this.request.open(this.options.method, this.options.url, this.options.async);","","  if (this.options.headers) {","    this.applyRequestHeaders(this.options.headers);","  }","","  // Make the token optional.","  if (this.options.token) {","    this.request.setRequestHeader('Authorization', this.options.token);","  }","","  // If there is data then we need to pass that along with the request.","  if (this.options.data) {","    this.request.setRequestHeader('Content-type', 'application/json; charset=utf-8');","    this.request.send(this.options.data);","  } else {","    this.request.send();","  }","","};","","/**"," * Apply any supplied headers to the request object."," * @param  {object} headers Array of headers to apply to the request object."," */","Request.prototype.applyRequestHeaders = function (headers) {","","  var key, i;","  var keys = Object.keys(headers);","  var keysLength = keys.length;","","  // Loop through and add the keys to the requestHeaders.","  for (i = 0; i < keysLength; i++) {","    key = keys[i];","    this.request.setRequestHeader(key, headers[key]);","  }","","};","","/**"," * Handle the completion of the request and fulfill the promise."," * @param  {String} Response test of the request."," */","Request.prototype.requestComplete = function (response) {","","  // Process the result.","  this.response = this.processResponse(response);","","  // Either resolve or reject the promise.","  this.promise(!this.response.data.error, [this.response]);","","};","","/**"," * Process the response and parse certain content types."," * @param  {*}  response  Response data from request."," * @return {*}            Processed response data."," */","Request.prototype.processResponse = function (response) {","  var responseType = this.request.getResponseHeader('Content-Type');","  var result = response;","","  // Parse JSON if the result is JSON.","  if (responseType && responseType.indexOf('application/json') !== -1) {","    try {","      result = JSON.parse(response);","    } catch (error) {","      result = {","        error: 'JSON parsing failed. ' + error.stack","      };","    }","  }","","  return {","    data: result,","    headers: this.request.getResponseHeader.bind(this.request),","    statusCode: this.request.status","  };","","};","","/**"," * Resolve the promise."," * @param  {String} error   Error message."," */","Request.prototype.requestError = function (error) {","  this.promise(false, [error]);","};","","/**"," * Handle ready state change events."," */","Request.prototype.readyStateChange = function () {","","  // Request is complete.","  if (this.request.readyState === 4) {","","    // Check if the final response code is valid.","    if (this.isValidResponseCode(this.request.status)) {","      this.requestComplete(this.request.responseText);","    } else {","      this.requestError('Invalid response code.');","    }","","  }","","};","","/**"," * Validate the current response code to see if the request was a success."," * @param  {String}  responseCode Response Code."," * @return {Boolean}              Should this be treated as a successful response code."," */","Request.prototype.isValidResponseCode = function (responseCode) {","","  var result = false,","    responseCodeCount = VALID_RESPONSE_CODES.length,","    i;","","  // Check if the supplied code is in our list of valid codes.","  for (i = 0; i < responseCodeCount; i++) {","","    if (responseCode === VALID_RESPONSE_CODES[i]) {","      result = true;","      break;","    }","","  }","","  return result;","","};","","module.exports = Request;",""]
}),o=o["/Users/amoore/Documents/code/Ingest/ingest-js-sdk/src/Request.js"],o.s[1]++;var s=t(3);o.s[2]++;var i=t(7);o.s[3]++;var r=[200,201,202,204];o.s[4]++;var l=function(e){return o.f[1]++,o.s[5]++,this.defaults={async:!0,method:"GET"},o.s[6]++,this.promise=s(),o.s[7]++,this.request=new XMLHttpRequest,o.s[8]++,this.setupListeners(),o.s[9]++,this.options=i(!0,this.defaults,e),o.s[10]++,this.options.url?(o.b[1][1]++,o.s[13]++,this.makeRequest(),o.s[14]++,this.promise):(o.b[1][0]++,o.s[11]++,this.promise(!1,["Request Error : a url is required to make the request."]),o.s[12]++,this.promise)};o.s[15]++,l.prototype.setupListeners=function(){o.f[2]++,o.s[16]++,this.request.onreadystatechange=this.readyStateChange.bind(this)},o.s[17]++,l.prototype.makeRequest=function(){o.f[3]++,o.s[18]++,this.request.open(this.options.method,this.options.url,this.options.async),o.s[19]++,this.options.headers?(o.b[2][0]++,o.s[20]++,this.applyRequestHeaders(this.options.headers)):o.b[2][1]++,o.s[21]++,this.options.token?(o.b[3][0]++,o.s[22]++,this.request.setRequestHeader("Authorization",this.options.token)):o.b[3][1]++,o.s[23]++,this.options.data?(o.b[4][0]++,o.s[24]++,this.request.setRequestHeader("Content-type","application/json; charset=utf-8"),o.s[25]++,this.request.send(this.options.data)):(o.b[4][1]++,o.s[26]++,this.request.send())},o.s[27]++,l.prototype.applyRequestHeaders=function(e){o.f[4]++,o.s[28]++;var n,t;o.s[29]++;var s=Object.keys(e);o.s[30]++;var i=s.length;for(o.s[31]++,t=0;i>t;t++)o.s[32]++,n=s[t],o.s[33]++,this.request.setRequestHeader(n,e[n])},o.s[34]++,l.prototype.requestComplete=function(e){o.f[5]++,o.s[35]++,this.response=this.processResponse(e),o.s[36]++,this.promise(!this.response.data.error,[this.response])},o.s[37]++,l.prototype.processResponse=function(e){o.f[6]++,o.s[38]++;var n=this.request.getResponseHeader("Content-Type");o.s[39]++;var t=e;if(o.s[40]++,o.b[6][0]++,n&&(o.b[6][1]++,-1!==n.indexOf("application/json"))){o.b[5][0]++,o.s[41]++;try{o.s[42]++,t=JSON.parse(e)}catch(s){o.s[43]++,t={error:"JSON parsing failed. "+s.stack}}}else o.b[5][1]++;return o.s[44]++,{data:t,headers:this.request.getResponseHeader.bind(this.request),statusCode:this.request.status}},o.s[45]++,l.prototype.requestError=function(e){o.f[7]++,o.s[46]++,this.promise(!1,[e])},o.s[47]++,l.prototype.readyStateChange=function(){o.f[8]++,o.s[48]++,4===this.request.readyState?(o.b[7][0]++,o.s[49]++,this.isValidResponseCode(this.request.status)?(o.b[8][0]++,o.s[50]++,this.requestComplete(this.request.responseText)):(o.b[8][1]++,o.s[51]++,this.requestError("Invalid response code."))):o.b[7][1]++},o.s[52]++,l.prototype.isValidResponseCode=function(e){o.f[9]++,o.s[53]++;var n,t=!1,s=r.length;for(o.s[54]++,n=0;s>n;n++){if(o.s[55]++,e===r[n]){o.b[9][0]++,o.s[56]++,t=!0,o.s[57]++;break}o.b[9][1]++}return o.s[58]++,t},o.s[59]++,e.exports=l},function(e,n,t){(function(e,n,t){!function(e){function o(e){return"function"==typeof e}function s(e){return"object"==typeof e}function i(e){"undefined"!=typeof n?n(e):"undefined"!=typeof t&&t.nextTick?t.nextTick(e):setTimeout(e,0)}var r;e[0][e[1]]=function l(e){var n,t=[],u=[],a=function(e,o){return null==n&&null!=e&&(n=e,t=o,u.length&&i(function(){for(var e=0;e<u.length;e++)u[e]()})),n};return a.then=function(a,c){var d=l(e),m=function(){function e(n){var t,i=0;try{if(n&&(s(n)||o(n))&&o(t=n.then)){if(n===d)throw new TypeError;t.call(n,function(){i++||e.apply(r,arguments)},function(e){i++||d(!1,[e])})}else d(!0,arguments)}catch(l){i++||d(!1,[l])}}try{var i=n?a:c;o(i)?e(i.apply(r,t||[])):d(n,t)}catch(l){d(!1,[l])}};return null!=n?i(m):u.push(m),d},e&&(a=e(a)),a}}([e,"exports"])}).call(n,t(4)(e),t(5).setImmediate,t(6))},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,n,t){(function(e,o){function s(e,n){this._id=e,this._clearFn=n}var i=t(6).nextTick,r=Function.prototype.apply,l=Array.prototype.slice,u={},a=0;n.setTimeout=function(){return new s(r.call(setTimeout,window,arguments),clearTimeout)},n.setInterval=function(){return new s(r.call(setInterval,window,arguments),clearInterval)},n.clearTimeout=n.clearInterval=function(e){e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(window,this._id)},n.enroll=function(e,n){clearTimeout(e._idleTimeoutId),e._idleTimeout=n},n.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},n._unrefActive=n.active=function(e){clearTimeout(e._idleTimeoutId);var n=e._idleTimeout;n>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},n))},n.setImmediate="function"==typeof e?e:function(e){var t=a++,o=arguments.length<2?!1:l.call(arguments,1);return u[t]=!0,i(function(){u[t]&&(o?e.apply(null,o):e.call(null),n.clearImmediate(t))}),t},n.clearImmediate="function"==typeof o?o:function(e){delete u[e]}}).call(n,t(5).setImmediate,t(5).clearImmediate)},function(e,n){function t(){a=!1,r.length?u=r.concat(u):c=-1,u.length&&o()}function o(){if(!a){var e=setTimeout(t);a=!0;for(var n=u.length;n;){for(r=u,u=[];++c<n;)r&&r[c].run();c=-1,n=u.length}r=null,a=!1,clearTimeout(e)}}function s(e,n){this.fun=e,this.array=n}function i(){}var r,l=e.exports={},u=[],a=!1,c=-1;l.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];u.push(new s(e,n)),1!==u.length||a||setTimeout(o,0)},s.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=i,l.addListener=i,l.once=i,l.off=i,l.removeListener=i,l.removeAllListeners=i,l.emit=i,l.binding=function(e){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(e){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}},function(e,n){"use strict";var t=Object.prototype.hasOwnProperty,o=Object.prototype.toString,s=function(e){return"function"==typeof Array.isArray?Array.isArray(e):"[object Array]"===o.call(e)},i=function(e){if(!e||"[object Object]"!==o.call(e))return!1;var n=t.call(e,"constructor"),s=e.constructor&&e.constructor.prototype&&t.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!n&&!s)return!1;var i;for(i in e);return"undefined"==typeof i||t.call(e,i)};e.exports=function r(){var e,n,t,o,l,u,a=arguments[0],c=1,d=arguments.length,m=!1;for("boolean"==typeof a?(m=a,a=arguments[1]||{},c=2):("object"!=typeof a&&"function"!=typeof a||null==a)&&(a={});d>c;++c)if(e=arguments[c],null!=e)for(n in e)t=a[n],o=e[n],a!==o&&(m&&o&&(i(o)||(l=s(o)))?(l?(l=!1,u=t&&s(t)?t:[]):u=t&&i(t)?t:{},a[n]=r(m,u,o)):"undefined"!=typeof o&&(a[n]=o));return a}}])});
//# sourceMappingURL=ingest.js.map
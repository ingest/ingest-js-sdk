(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["IngestAPI"] = factory();
	else
		root["IngestAPI"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_NAyEj_Ycs4ah$5nsSsQDxg = (Function('return this'))();
	if (!__cov_NAyEj_Ycs4ah$5nsSsQDxg.__coverage__) { __cov_NAyEj_Ycs4ah$5nsSsQDxg.__coverage__ = {}; }
	__cov_NAyEj_Ycs4ah$5nsSsQDxg = __cov_NAyEj_Ycs4ah$5nsSsQDxg.__coverage__;
	if (!(__cov_NAyEj_Ycs4ah$5nsSsQDxg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js'])) {
	   __cov_NAyEj_Ycs4ah$5nsSsQDxg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js'] = {"path":"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js","s":{"1":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}}},"branchMap":{},"code":["module.exports = require('./src/IngestAPI.js');",""]};
	}
	__cov_NAyEj_Ycs4ah$5nsSsQDxg = __cov_NAyEj_Ycs4ah$5nsSsQDxg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js'];
	__cov_NAyEj_Ycs4ah$5nsSsQDxg.s['1']++;module.exports=__webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov__Lwiq0RdkJ3UGdwyqgPGVA = (Function('return this'))();
	if (!__cov__Lwiq0RdkJ3UGdwyqgPGVA.__coverage__) { __cov__Lwiq0RdkJ3UGdwyqgPGVA.__coverage__ = {}; }
	__cov__Lwiq0RdkJ3UGdwyqgPGVA = __cov__Lwiq0RdkJ3UGdwyqgPGVA.__coverage__;
	if (!(__cov__Lwiq0RdkJ3UGdwyqgPGVA['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js'])) {
	   __cov__Lwiq0RdkJ3UGdwyqgPGVA['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js'] = {"path":"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js","s":{"1":0,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"fnMap":{"1":{"name":"IngestAPI","line":13,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":56,"column":31},"end":{"line":56,"column":48}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":31},"end":{"line":71,"column":43}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":87,"column":32},"end":{"line":87,"column":51}}},"5":{"name":"(anonymous_5)","line":101,"loc":{"start":{"line":103,"column":35},"end":{"line":103,"column":54}}},"6":{"name":"(anonymous_6)","line":129,"loc":{"start":{"line":133,"column":31},"end":{"line":133,"column":54}}},"7":{"name":"(anonymous_7)","line":151,"loc":{"start":{"line":157,"column":34},"end":{"line":157,"column":51}}},"8":{"name":"(anonymous_8)","line":179,"loc":{"start":{"line":186,"column":35},"end":{"line":186,"column":53}}},"9":{"name":"(anonymous_9)","line":200,"loc":{"start":{"line":208,"column":36},"end":{"line":208,"column":65}}},"10":{"name":"(anonymous_10)","line":228,"loc":{"start":{"line":237,"column":35},"end":{"line":237,"column":53}}},"11":{"name":"(anonymous_11)","line":239,"loc":{"start":{"line":248,"column":46},"end":{"line":248,"column":64}}},"12":{"name":"(anonymous_12)","line":251,"loc":{"start":{"line":260,"column":35},"end":{"line":260,"column":65}}},"13":{"name":"(anonymous_13)","line":282,"loc":{"start":{"line":292,"column":34},"end":{"line":292,"column":53}}},"14":{"name":"(anonymous_14)","line":292,"loc":{"start":{"line":302,"column":45},"end":{"line":302,"column":64}}},"15":{"name":"(anonymous_15)","line":303,"loc":{"start":{"line":313,"column":35},"end":{"line":313,"column":71}}},"16":{"name":"(anonymous_16)","line":331,"loc":{"start":{"line":344,"column":37},"end":{"line":344,"column":49}}},"17":{"name":"(anonymous_17)","line":346,"loc":{"start":{"line":360,"column":39},"end":{"line":360,"column":58}}},"18":{"name":"(anonymous_18)","line":359,"loc":{"start":{"line":374,"column":44},"end":{"line":374,"column":56}}},"19":{"name":"(anonymous_19)","line":373,"loc":{"start":{"line":389,"column":39},"end":{"line":389,"column":59}}},"20":{"name":"(anonymous_20)","line":389,"loc":{"start":{"line":406,"column":37},"end":{"line":406,"column":53}}},"21":{"name":"(anonymous_21)","line":432,"loc":{"start":{"line":450,"column":41},"end":{"line":450,"column":57}}},"22":{"name":"(anonymous_22)","line":468,"loc":{"start":{"line":486,"column":43},"end":{"line":486,"column":59}}},"23":{"name":"(anonymous_23)","line":526,"loc":{"start":{"line":544,"column":34},"end":{"line":544,"column":60}}},"24":{"name":"(anonymous_24)","line":545,"loc":{"start":{"line":564,"column":32},"end":{"line":564,"column":56}}},"25":{"name":"(anonymous_25)","line":558,"loc":{"start":{"line":578,"column":43},"end":{"line":578,"column":55}}},"26":{"name":"(anonymous_26)","line":574,"loc":{"start":{"line":595,"column":42},"end":{"line":595,"column":58}}},"27":{"name":"(anonymous_27)","line":602,"loc":{"start":{"line":625,"column":46},"end":{"line":625,"column":60}}},"28":{"name":"(anonymous_28)","line":628,"loc":{"start":{"line":652,"column":45},"end":{"line":652,"column":61}}},"29":{"name":"(anonymous_29)","line":663,"loc":{"start":{"line":689,"column":49},"end":{"line":689,"column":63}}},"30":{"name":"(anonymous_30)","line":687,"loc":{"start":{"line":714,"column":41},"end":{"line":714,"column":55}}},"31":{"name":"(anonymous_31)","line":712,"loc":{"start":{"line":741,"column":32},"end":{"line":741,"column":51}}},"32":{"name":"(anonymous_32)","line":727,"loc":{"start":{"line":757,"column":36},"end":{"line":757,"column":55}}},"33":{"name":"(anonymous_33)","line":755,"loc":{"start":{"line":787,"column":32},"end":{"line":787,"column":50}}},"34":{"name":"(anonymous_34)","line":778,"loc":{"start":{"line":811,"column":34},"end":{"line":811,"column":53}}},"35":{"name":"(anonymous_35)","line":806,"loc":{"start":{"line":841,"column":35},"end":{"line":841,"column":53}}},"36":{"name":"(anonymous_36)","line":834,"loc":{"start":{"line":870,"column":44},"end":{"line":870,"column":69}}},"37":{"name":"(anonymous_37)","line":880,"loc":{"start":{"line":919,"column":42},"end":{"line":919,"column":67}}},"38":{"name":"(anonymous_38)","line":918,"loc":{"start":{"line":958,"column":39},"end":{"line":958,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":11,"column":0},"end":{"line":50,"column":1}},"5":{"start":{"line":13,"column":2},"end":{"line":38,"column":4}},"6":{"start":{"line":41,"column":2},"end":{"line":41,"column":57}},"7":{"start":{"line":43,"column":2},"end":{"line":46,"column":3}},"8":{"start":{"line":45,"column":4},"end":{"line":45,"column":37}},"9":{"start":{"line":48,"column":2},"end":{"line":48,"column":25}},"10":{"start":{"line":56,"column":0},"end":{"line":65,"column":2}},"11":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"12":{"start":{"line":60,"column":4},"end":{"line":60,"column":86}},"13":{"start":{"line":63,"column":2},"end":{"line":63,"column":21}},"14":{"start":{"line":71,"column":0},"end":{"line":79,"column":2}},"15":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"16":{"start":{"line":74,"column":4},"end":{"line":74,"column":61}},"17":{"start":{"line":77,"column":2},"end":{"line":77,"column":20}},"18":{"start":{"line":87,"column":0},"end":{"line":95,"column":2}},"19":{"start":{"line":89,"column":2},"end":{"line":93,"column":5}},"20":{"start":{"line":103,"column":0},"end":{"line":125,"column":2}},"21":{"start":{"line":105,"column":2},"end":{"line":105,"column":10}},"22":{"start":{"line":106,"column":2},"end":{"line":106,"column":13}},"23":{"start":{"line":108,"column":2},"end":{"line":112,"column":3}},"24":{"start":{"line":110,"column":4},"end":{"line":111,"column":70}},"25":{"start":{"line":114,"column":2},"end":{"line":116,"column":4}},"26":{"start":{"line":118,"column":2},"end":{"line":118,"column":75}},"27":{"start":{"line":120,"column":2},"end":{"line":123,"column":5}},"28":{"start":{"line":133,"column":0},"end":{"line":150,"column":2}},"29":{"start":{"line":136,"column":2},"end":{"line":140,"column":3}},"30":{"start":{"line":138,"column":4},"end":{"line":139,"column":53}},"31":{"start":{"line":143,"column":2},"end":{"line":148,"column":5}},"32":{"start":{"line":157,"column":0},"end":{"line":179,"column":2}},"33":{"start":{"line":159,"column":2},"end":{"line":159,"column":10}},"34":{"start":{"line":160,"column":2},"end":{"line":160,"column":13}},"35":{"start":{"line":162,"column":2},"end":{"line":165,"column":3}},"36":{"start":{"line":163,"column":4},"end":{"line":164,"column":70}},"37":{"start":{"line":167,"column":2},"end":{"line":169,"column":4}},"38":{"start":{"line":171,"column":2},"end":{"line":171,"column":75}},"39":{"start":{"line":173,"column":2},"end":{"line":178,"column":5}},"40":{"start":{"line":186,"column":0},"end":{"line":198,"column":2}},"41":{"start":{"line":187,"column":2},"end":{"line":190,"column":3}},"42":{"start":{"line":188,"column":4},"end":{"line":189,"column":60}},"43":{"start":{"line":192,"column":2},"end":{"line":197,"column":5}},"44":{"start":{"line":208,"column":0},"end":{"line":228,"column":2}},"45":{"start":{"line":209,"column":2},"end":{"line":209,"column":10}},"46":{"start":{"line":211,"column":2},"end":{"line":214,"column":3}},"47":{"start":{"line":212,"column":4},"end":{"line":213,"column":60}},"48":{"start":{"line":216,"column":2},"end":{"line":216,"column":46}},"49":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"50":{"start":{"line":219,"column":4},"end":{"line":219,"column":47}},"51":{"start":{"line":222,"column":2},"end":{"line":227,"column":5}},"52":{"start":{"line":237,"column":0},"end":{"line":239,"column":2}},"53":{"start":{"line":238,"column":2},"end":{"line":238,"column":36}},"54":{"start":{"line":248,"column":0},"end":{"line":250,"column":2}},"55":{"start":{"line":249,"column":2},"end":{"line":249,"column":42}},"56":{"start":{"line":260,"column":0},"end":{"line":284,"column":2}},"57":{"start":{"line":261,"column":2},"end":{"line":261,"column":10}},"58":{"start":{"line":262,"column":2},"end":{"line":262,"column":13}},"59":{"start":{"line":264,"column":2},"end":{"line":267,"column":3}},"60":{"start":{"line":265,"column":4},"end":{"line":266,"column":71}},"61":{"start":{"line":269,"column":2},"end":{"line":271,"column":4}},"62":{"start":{"line":273,"column":2},"end":{"line":273,"column":75}},"63":{"start":{"line":275,"column":2},"end":{"line":277,"column":3}},"64":{"start":{"line":276,"column":4},"end":{"line":276,"column":47}},"65":{"start":{"line":279,"column":2},"end":{"line":283,"column":5}},"66":{"start":{"line":292,"column":0},"end":{"line":294,"column":2}},"67":{"start":{"line":293,"column":2},"end":{"line":293,"column":36}},"68":{"start":{"line":302,"column":0},"end":{"line":304,"column":2}},"69":{"start":{"line":303,"column":2},"end":{"line":303,"column":42}},"70":{"start":{"line":313,"column":0},"end":{"line":338,"column":2}},"71":{"start":{"line":315,"column":2},"end":{"line":315,"column":10}},"72":{"start":{"line":317,"column":2},"end":{"line":320,"column":3}},"73":{"start":{"line":318,"column":4},"end":{"line":319,"column":83}},"74":{"start":{"line":322,"column":2},"end":{"line":325,"column":3}},"75":{"start":{"line":323,"column":4},"end":{"line":324,"column":80}},"76":{"start":{"line":327,"column":2},"end":{"line":330,"column":5}},"77":{"start":{"line":332,"column":2},"end":{"line":336,"column":5}},"78":{"start":{"line":344,"column":0},"end":{"line":352,"column":2}},"79":{"start":{"line":346,"column":2},"end":{"line":350,"column":44}},"80":{"start":{"line":360,"column":0},"end":{"line":368,"column":2}},"81":{"start":{"line":362,"column":2},"end":{"line":366,"column":5}},"82":{"start":{"line":374,"column":0},"end":{"line":382,"column":2}},"83":{"start":{"line":376,"column":2},"end":{"line":380,"column":44}},"84":{"start":{"line":389,"column":0},"end":{"line":393,"column":2}},"85":{"start":{"line":391,"column":2},"end":{"line":391,"column":58}},"86":{"start":{"line":406,"column":0},"end":{"line":438,"column":2}},"87":{"start":{"line":408,"column":2},"end":{"line":408,"column":52}},"88":{"start":{"line":409,"column":2},"end":{"line":409,"column":10}},"89":{"start":{"line":410,"column":2},"end":{"line":410,"column":13}},"90":{"start":{"line":411,"column":2},"end":{"line":411,"column":19}},"91":{"start":{"line":414,"column":2},"end":{"line":416,"column":3}},"92":{"start":{"line":415,"column":4},"end":{"line":415,"column":54}},"93":{"start":{"line":418,"column":2},"end":{"line":420,"column":3}},"94":{"start":{"line":419,"column":4},"end":{"line":419,"column":85}},"95":{"start":{"line":424,"column":2},"end":{"line":427,"column":4}},"96":{"start":{"line":429,"column":2},"end":{"line":429,"column":82}},"97":{"start":{"line":431,"column":2},"end":{"line":436,"column":5}},"98":{"start":{"line":450,"column":0},"end":{"line":473,"column":2}},"99":{"start":{"line":452,"column":2},"end":{"line":455,"column":4}},"100":{"start":{"line":457,"column":2},"end":{"line":460,"column":3}},"101":{"start":{"line":458,"column":4},"end":{"line":458,"column":25}},"102":{"start":{"line":459,"column":4},"end":{"line":459,"column":59}},"103":{"start":{"line":462,"column":2},"end":{"line":465,"column":3}},"104":{"start":{"line":463,"column":4},"end":{"line":463,"column":25}},"105":{"start":{"line":464,"column":4},"end":{"line":464,"column":58}},"106":{"start":{"line":467,"column":2},"end":{"line":470,"column":3}},"107":{"start":{"line":468,"column":4},"end":{"line":468,"column":25}},"108":{"start":{"line":469,"column":4},"end":{"line":469,"column":62}},"109":{"start":{"line":472,"column":2},"end":{"line":472,"column":16}},"110":{"start":{"line":486,"column":0},"end":{"line":526,"column":2}},"111":{"start":{"line":488,"column":2},"end":{"line":488,"column":47}},"112":{"start":{"line":489,"column":2},"end":{"line":492,"column":4}},"113":{"start":{"line":494,"column":2},"end":{"line":497,"column":3}},"114":{"start":{"line":495,"column":4},"end":{"line":495,"column":25}},"115":{"start":{"line":496,"column":4},"end":{"line":496,"column":59}},"116":{"start":{"line":500,"column":2},"end":{"line":502,"column":3}},"117":{"start":{"line":501,"column":4},"end":{"line":501,"column":22}},"118":{"start":{"line":504,"column":2},"end":{"line":507,"column":3}},"119":{"start":{"line":505,"column":4},"end":{"line":505,"column":25}},"120":{"start":{"line":506,"column":4},"end":{"line":506,"column":57}},"121":{"start":{"line":509,"column":2},"end":{"line":512,"column":3}},"122":{"start":{"line":510,"column":4},"end":{"line":510,"column":25}},"123":{"start":{"line":511,"column":4},"end":{"line":511,"column":64}},"124":{"start":{"line":514,"column":2},"end":{"line":517,"column":3}},"125":{"start":{"line":515,"column":4},"end":{"line":515,"column":25}},"126":{"start":{"line":516,"column":4},"end":{"line":516,"column":60}},"127":{"start":{"line":520,"column":2},"end":{"line":523,"column":3}},"128":{"start":{"line":521,"column":4},"end":{"line":521,"column":24}},"129":{"start":{"line":522,"column":4},"end":{"line":522,"column":24}},"130":{"start":{"line":525,"column":2},"end":{"line":525,"column":16}},"131":{"start":{"line":544,"column":0},"end":{"line":556,"column":2}},"132":{"start":{"line":546,"column":2},"end":{"line":546,"column":31}},"133":{"start":{"line":547,"column":2},"end":{"line":547,"column":8}},"134":{"start":{"line":548,"column":2},"end":{"line":548,"column":27}},"135":{"start":{"line":550,"column":2},"end":{"line":552,"column":3}},"136":{"start":{"line":551,"column":4},"end":{"line":551,"column":71}},"137":{"start":{"line":554,"column":2},"end":{"line":554,"column":18}},"138":{"start":{"line":564,"column":0},"end":{"line":572,"column":2}},"139":{"start":{"line":566,"column":2},"end":{"line":566,"column":26}},"140":{"start":{"line":568,"column":2},"end":{"line":568,"column":26}},"141":{"start":{"line":570,"column":2},"end":{"line":570,"column":17}},"142":{"start":{"line":578,"column":0},"end":{"line":585,"column":2}},"143":{"start":{"line":580,"column":2},"end":{"line":583,"column":5}},"144":{"start":{"line":595,"column":0},"end":{"line":617,"column":2}},"145":{"start":{"line":596,"column":2},"end":{"line":599,"column":3}},"146":{"start":{"line":597,"column":4},"end":{"line":598,"column":80}},"147":{"start":{"line":602,"column":2},"end":{"line":604,"column":3}},"148":{"start":{"line":603,"column":4},"end":{"line":603,"column":20}},"149":{"start":{"line":606,"column":2},"end":{"line":609,"column":3}},"150":{"start":{"line":607,"column":4},"end":{"line":608,"column":99}},"151":{"start":{"line":611,"column":2},"end":{"line":616,"column":5}},"152":{"start":{"line":625,"column":0},"end":{"line":643,"column":2}},"153":{"start":{"line":626,"column":2},"end":{"line":626,"column":18}},"154":{"start":{"line":628,"column":2},"end":{"line":631,"column":3}},"155":{"start":{"line":629,"column":4},"end":{"line":630,"column":84}},"156":{"start":{"line":633,"column":2},"end":{"line":635,"column":4}},"157":{"start":{"line":637,"column":2},"end":{"line":637,"column":82}},"158":{"start":{"line":639,"column":2},"end":{"line":642,"column":5}},"159":{"start":{"line":652,"column":0},"end":{"line":681,"column":2}},"160":{"start":{"line":653,"column":2},"end":{"line":653,"column":18}},"161":{"start":{"line":655,"column":2},"end":{"line":658,"column":3}},"162":{"start":{"line":656,"column":4},"end":{"line":657,"column":87}},"163":{"start":{"line":660,"column":2},"end":{"line":663,"column":3}},"164":{"start":{"line":661,"column":4},"end":{"line":662,"column":84}},"165":{"start":{"line":665,"column":2},"end":{"line":667,"column":3}},"166":{"start":{"line":666,"column":4},"end":{"line":666,"column":20}},"167":{"start":{"line":669,"column":2},"end":{"line":671,"column":4}},"168":{"start":{"line":673,"column":2},"end":{"line":673,"column":82}},"169":{"start":{"line":675,"column":2},"end":{"line":680,"column":5}},"170":{"start":{"line":689,"column":0},"end":{"line":708,"column":2}},"171":{"start":{"line":690,"column":2},"end":{"line":690,"column":18}},"172":{"start":{"line":692,"column":2},"end":{"line":695,"column":3}},"173":{"start":{"line":693,"column":4},"end":{"line":694,"column":87}},"174":{"start":{"line":697,"column":2},"end":{"line":699,"column":4}},"175":{"start":{"line":701,"column":2},"end":{"line":701,"column":82}},"176":{"start":{"line":703,"column":2},"end":{"line":707,"column":5}},"177":{"start":{"line":714,"column":0},"end":{"line":733,"column":2}},"178":{"start":{"line":715,"column":2},"end":{"line":715,"column":18}},"179":{"start":{"line":717,"column":2},"end":{"line":720,"column":3}},"180":{"start":{"line":718,"column":4},"end":{"line":719,"column":79}},"181":{"start":{"line":722,"column":2},"end":{"line":724,"column":4}},"182":{"start":{"line":726,"column":2},"end":{"line":726,"column":76}},"183":{"start":{"line":728,"column":2},"end":{"line":731,"column":5}},"184":{"start":{"line":741,"column":0},"end":{"line":749,"column":2}},"185":{"start":{"line":743,"column":2},"end":{"line":747,"column":5}},"186":{"start":{"line":757,"column":0},"end":{"line":779,"column":2}},"187":{"start":{"line":759,"column":2},"end":{"line":759,"column":10}},"188":{"start":{"line":760,"column":2},"end":{"line":760,"column":13}},"189":{"start":{"line":762,"column":2},"end":{"line":766,"column":3}},"190":{"start":{"line":764,"column":4},"end":{"line":765,"column":71}},"191":{"start":{"line":768,"column":2},"end":{"line":770,"column":4}},"192":{"start":{"line":772,"column":2},"end":{"line":772,"column":76}},"193":{"start":{"line":774,"column":2},"end":{"line":777,"column":5}},"194":{"start":{"line":787,"column":0},"end":{"line":803,"column":2}},"195":{"start":{"line":790,"column":2},"end":{"line":794,"column":3}},"196":{"start":{"line":792,"column":4},"end":{"line":793,"column":64}},"197":{"start":{"line":797,"column":2},"end":{"line":802,"column":5}},"198":{"start":{"line":811,"column":0},"end":{"line":833,"column":2}},"199":{"start":{"line":813,"column":2},"end":{"line":813,"column":10}},"200":{"start":{"line":814,"column":2},"end":{"line":814,"column":13}},"201":{"start":{"line":816,"column":2},"end":{"line":819,"column":3}},"202":{"start":{"line":817,"column":4},"end":{"line":818,"column":71}},"203":{"start":{"line":821,"column":2},"end":{"line":823,"column":4}},"204":{"start":{"line":825,"column":2},"end":{"line":825,"column":76}},"205":{"start":{"line":827,"column":2},"end":{"line":831,"column":5}},"206":{"start":{"line":841,"column":0},"end":{"line":858,"column":2}},"207":{"start":{"line":843,"column":2},"end":{"line":843,"column":10}},"208":{"start":{"line":845,"column":2},"end":{"line":848,"column":3}},"209":{"start":{"line":846,"column":4},"end":{"line":847,"column":63}},"210":{"start":{"line":850,"column":2},"end":{"line":850,"column":46}},"211":{"start":{"line":852,"column":2},"end":{"line":857,"column":5}},"212":{"start":{"line":870,"column":0},"end":{"line":908,"column":2}},"213":{"start":{"line":872,"column":2},"end":{"line":872,"column":10}},"214":{"start":{"line":873,"column":2},"end":{"line":873,"column":13}},"215":{"start":{"line":874,"column":2},"end":{"line":874,"column":19}},"216":{"start":{"line":876,"column":2},"end":{"line":879,"column":3}},"217":{"start":{"line":877,"column":4},"end":{"line":878,"column":87}},"218":{"start":{"line":881,"column":2},"end":{"line":884,"column":3}},"219":{"start":{"line":882,"column":4},"end":{"line":883,"column":45}},"220":{"start":{"line":886,"column":2},"end":{"line":889,"column":3}},"221":{"start":{"line":887,"column":4},"end":{"line":888,"column":44}},"222":{"start":{"line":891,"column":2},"end":{"line":893,"column":3}},"223":{"start":{"line":892,"column":4},"end":{"line":892,"column":85}},"224":{"start":{"line":895,"column":2},"end":{"line":898,"column":4}},"225":{"start":{"line":900,"column":2},"end":{"line":900,"column":88}},"226":{"start":{"line":902,"column":2},"end":{"line":907,"column":5}},"227":{"start":{"line":919,"column":0},"end":{"line":947,"column":2}},"228":{"start":{"line":921,"column":2},"end":{"line":921,"column":10}},"229":{"start":{"line":922,"column":2},"end":{"line":922,"column":13}},"230":{"start":{"line":923,"column":2},"end":{"line":923,"column":50}},"231":{"start":{"line":925,"column":2},"end":{"line":928,"column":3}},"232":{"start":{"line":926,"column":4},"end":{"line":927,"column":87}},"233":{"start":{"line":931,"column":2},"end":{"line":933,"column":3}},"234":{"start":{"line":932,"column":4},"end":{"line":932,"column":54}},"235":{"start":{"line":935,"column":2},"end":{"line":937,"column":4}},"236":{"start":{"line":939,"column":2},"end":{"line":939,"column":86}},"237":{"start":{"line":941,"column":2},"end":{"line":946,"column":5}},"238":{"start":{"line":958,"column":0},"end":{"line":986,"column":2}},"239":{"start":{"line":960,"column":2},"end":{"line":960,"column":10}},"240":{"start":{"line":961,"column":2},"end":{"line":961,"column":13}},"241":{"start":{"line":962,"column":2},"end":{"line":962,"column":50}},"242":{"start":{"line":964,"column":2},"end":{"line":967,"column":3}},"243":{"start":{"line":965,"column":4},"end":{"line":966,"column":87}},"244":{"start":{"line":970,"column":2},"end":{"line":972,"column":3}},"245":{"start":{"line":971,"column":4},"end":{"line":971,"column":54}},"246":{"start":{"line":974,"column":2},"end":{"line":976,"column":4}},"247":{"start":{"line":978,"column":2},"end":{"line":978,"column":83}},"248":{"start":{"line":980,"column":2},"end":{"line":985,"column":5}},"249":{"start":{"line":988,"column":0},"end":{"line":988,"column":27}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"5":{"line":132,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"6":{"line":156,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"7":{"line":180,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"8":{"line":203,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"9":{"line":209,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"10":{"line":255,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"11":{"line":265,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"12":{"line":307,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"13":{"line":311,"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":322,"column":2}},{"start":{"line":322,"column":2},"end":{"line":322,"column":2}}]},"14":{"line":397,"type":"if","locations":[{"start":{"line":414,"column":2},"end":{"line":414,"column":2}},{"start":{"line":414,"column":2},"end":{"line":414,"column":2}}]},"15":{"line":401,"type":"if","locations":[{"start":{"line":418,"column":2},"end":{"line":418,"column":2}},{"start":{"line":418,"column":2},"end":{"line":418,"column":2}}]},"16":{"line":439,"type":"if","locations":[{"start":{"line":457,"column":2},"end":{"line":457,"column":2}},{"start":{"line":457,"column":2},"end":{"line":457,"column":2}}]},"17":{"line":444,"type":"if","locations":[{"start":{"line":462,"column":2},"end":{"line":462,"column":2}},{"start":{"line":462,"column":2},"end":{"line":462,"column":2}}]},"18":{"line":449,"type":"if","locations":[{"start":{"line":467,"column":2},"end":{"line":467,"column":2}},{"start":{"line":467,"column":2},"end":{"line":467,"column":2}}]},"19":{"line":476,"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":494,"column":2}},{"start":{"line":494,"column":2},"end":{"line":494,"column":2}}]},"20":{"line":482,"type":"if","locations":[{"start":{"line":500,"column":2},"end":{"line":500,"column":2}},{"start":{"line":500,"column":2},"end":{"line":500,"column":2}}]},"21":{"line":486,"type":"if","locations":[{"start":{"line":504,"column":2},"end":{"line":504,"column":2}},{"start":{"line":504,"column":2},"end":{"line":504,"column":2}}]},"22":{"line":491,"type":"if","locations":[{"start":{"line":509,"column":2},"end":{"line":509,"column":2}},{"start":{"line":509,"column":2},"end":{"line":509,"column":2}}]},"23":{"line":496,"type":"if","locations":[{"start":{"line":514,"column":2},"end":{"line":514,"column":2}},{"start":{"line":514,"column":2},"end":{"line":514,"column":2}}]},"24":{"line":496,"type":"binary-expr","locations":[{"start":{"line":514,"column":6},"end":{"line":514,"column":36}},{"start":{"line":514,"column":40},"end":{"line":514,"column":72}}]},"25":{"line":502,"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":520,"column":2}},{"start":{"line":520,"column":2},"end":{"line":520,"column":2}}]},"26":{"line":502,"type":"binary-expr","locations":[{"start":{"line":520,"column":6},"end":{"line":520,"column":35}},{"start":{"line":520,"column":39},"end":{"line":520,"column":51}},{"start":{"line":520,"column":55},"end":{"line":520,"column":69}}]},"27":{"line":575,"type":"if","locations":[{"start":{"line":596,"column":2},"end":{"line":596,"column":2}},{"start":{"line":596,"column":2},"end":{"line":596,"column":2}}]},"28":{"line":580,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"29":{"line":584,"type":"if","locations":[{"start":{"line":606,"column":2},"end":{"line":606,"column":2}},{"start":{"line":606,"column":2},"end":{"line":606,"column":2}}]},"30":{"line":605,"type":"if","locations":[{"start":{"line":628,"column":2},"end":{"line":628,"column":2}},{"start":{"line":628,"column":2},"end":{"line":628,"column":2}}]},"31":{"line":631,"type":"if","locations":[{"start":{"line":655,"column":2},"end":{"line":655,"column":2}},{"start":{"line":655,"column":2},"end":{"line":655,"column":2}}]},"32":{"line":635,"type":"if","locations":[{"start":{"line":660,"column":2},"end":{"line":660,"column":2}},{"start":{"line":660,"column":2},"end":{"line":660,"column":2}}]},"33":{"line":639,"type":"if","locations":[{"start":{"line":665,"column":2},"end":{"line":665,"column":2}},{"start":{"line":665,"column":2},"end":{"line":665,"column":2}}]},"34":{"line":666,"type":"if","locations":[{"start":{"line":692,"column":2},"end":{"line":692,"column":2}},{"start":{"line":692,"column":2},"end":{"line":692,"column":2}}]},"35":{"line":690,"type":"if","locations":[{"start":{"line":717,"column":2},"end":{"line":717,"column":2}},{"start":{"line":717,"column":2},"end":{"line":717,"column":2}}]},"36":{"line":732,"type":"if","locations":[{"start":{"line":762,"column":2},"end":{"line":762,"column":2}},{"start":{"line":762,"column":2},"end":{"line":762,"column":2}}]},"37":{"line":758,"type":"if","locations":[{"start":{"line":790,"column":2},"end":{"line":790,"column":2}},{"start":{"line":790,"column":2},"end":{"line":790,"column":2}}]},"38":{"line":783,"type":"if","locations":[{"start":{"line":816,"column":2},"end":{"line":816,"column":2}},{"start":{"line":816,"column":2},"end":{"line":816,"column":2}}]},"39":{"line":810,"type":"if","locations":[{"start":{"line":845,"column":2},"end":{"line":845,"column":2}},{"start":{"line":845,"column":2},"end":{"line":845,"column":2}}]},"40":{"line":840,"type":"if","locations":[{"start":{"line":876,"column":2},"end":{"line":876,"column":2}},{"start":{"line":876,"column":2},"end":{"line":876,"column":2}}]},"41":{"line":844,"type":"if","locations":[{"start":{"line":881,"column":2},"end":{"line":881,"column":2}},{"start":{"line":881,"column":2},"end":{"line":881,"column":2}}]},"42":{"line":848,"type":"if","locations":[{"start":{"line":886,"column":2},"end":{"line":886,"column":2}},{"start":{"line":886,"column":2},"end":{"line":886,"column":2}}]},"43":{"line":852,"type":"if","locations":[{"start":{"line":891,"column":2},"end":{"line":891,"column":2}},{"start":{"line":891,"column":2},"end":{"line":891,"column":2}}]},"44":{"line":886,"type":"if","locations":[{"start":{"line":925,"column":2},"end":{"line":925,"column":2}},{"start":{"line":925,"column":2},"end":{"line":925,"column":2}}]},"45":{"line":891,"type":"if","locations":[{"start":{"line":931,"column":2},"end":{"line":931,"column":2}},{"start":{"line":931,"column":2},"end":{"line":931,"column":2}}]},"46":{"line":924,"type":"if","locations":[{"start":{"line":964,"column":2},"end":{"line":964,"column":2}},{"start":{"line":964,"column":2},"end":{"line":964,"column":2}}]},"47":{"line":929,"type":"if","locations":[{"start":{"line":970,"column":2},"end":{"line":970,"column":2}},{"start":{"line":970,"column":2},"end":{"line":970,"column":2}}]}},"code":["var Request = require('./Request.js');","var Promise = require('pinkyswear');","var extend = require('extend');","","/**"," * IngestAPI Object"," * @param {object}  options        Options to override the default."," * @param {string}  options.host   Override the default live host."," * @param {string}  options.token  Auth token to use for requests."," */","function IngestAPI (options) {","","  this.defaults = {","    'host': 'https://api.ingest.io',","    'videos': '/videos',","    'videoById': '/videos/<%=id%>',","    'thumbnails': '/videos/<%=id%>/thumbnails',","    'trash': '/videos?filter=trashed',","    'networks': '/networks',","    'networksKeys': '/networks/keys',","    'networksKeysById': '/networks/keys/<%=id%>',","    'inputs': '/encoding/inputs',","    'inputsById' : '/encoding/inputs/<%=id%>',","    'inputsUpload' : '/encoding/inputs/<%=id%>/upload',","    'inputsUploadInitialize': '/encoding/inputs/<%=id%>/upload<%=method%>',","    'inputsUploadSign': '/encoding/inputs/<%=id%>/upload/sign<%=method%>',","    'inputsUploadComplete': '/encoding/inputs/<%=id%>/upload/complete',","    'inputsUploadAbort': '/encoding/inputs/<%=id%>/upload/abort',","    'uploadMethods': {","      'param': '?type=',","      'singlePart': 'amazon',","      'multiPart': 'amazonMP'","    },","    'deleteMethods': {","      'permanent': '?permanent=1'","    },","    'search': '/<%=resource%>?search=<%=input%>'","  };","","  // Create a config object by extending the defaults with the pass options.","  this.config = extend(true, {}, this.defaults, options);","","  if (this.config.token) {","    // Store the token for future use.","    this.setToken(this.config.token);","  }","","  this.request = Request;","","}","","/**"," * Set the auth token to use."," * @param   {String}        token Auth token to use."," */","IngestAPI.prototype.setToken = function (token) {","","  // Make sure a valid value is passed.","  if (typeof token !== 'string') {","    throw new Error('IngestAPI requires an authentication token passed as a string.');","  }","","  this.token = token;","","};","","/**"," * Return the current auth token."," * @return  {String}        Current auth token."," */","IngestAPI.prototype.getToken = function () {","","  if (!this.token) {","    throw new Error('IngestAPI requires a token to be set.');","  }","","  return this.token;","","};","","/**"," * Return a list of videos for the current user and network."," * @param {object} headers Javascript object representing headers to apply to the call."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.getVideos = function (headers) {","","  return new Request({","    url: this.config.host + this.config.videos,","    token: this.getToken(),","    headers: headers","  });","","};","","/**"," * Return a video match the supplied id."," * @param   {String}       videoId ID for the requested video."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.getVideoById = function (videoId) {","","  var url;","  var tokens;","","  if (typeof videoId !== 'string') {","    // Wrap the error in a promise so the user is still catching the errors.","    return this.promisify(false,","      'IngestAPI getVideoById requires a valid videoId as a string.');","  }","","  tokens = {","    id: videoId","  };","","  url = this.parseTokens(this.config.host + this.config.videoById, tokens);","","  return new Request({","    url: url,","    token: this.getToken()","  });","","};","","/**"," * Add a new video."," * @param   {object}  videoObject An object representing the video to add."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.addVideo = function (videoObject) {","","  // Validate the object being passed in.","  if (typeof videoObject !== 'object') {","    // Wrap the error in a promise.","    return this.promisify(false,","      'IngestAPI addVideo requires a video object.');","  }","","  // Return the promise from the request.","  return new Request({","    url: this.config.host + this.config.videos,","    token: this.getToken(),","    method: 'POST',","    data: videoObject","  });","","};","","/**"," * Update an existing video with new content."," * @param  {object} video   An object representing the video."," * @return {Promise}        A promise which resolves when the request is complete."," */","IngestAPI.prototype.updateVideo = function (video) {","","  var url;","  var tokens;","","  if (typeof video !== 'object') {","    return this.promisify(false,","      'IngestAPI update requires a video to be passed as an object.');","  }","","  tokens = {","    id: video.id","  };","","  url = this.parseTokens(this.config.host + this.config.videoById, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'PATCH',","    data: video","  });","};","","/**"," * Updates a batch of videos in one HTTP request."," * @param {array} videos  An array of video objects."," * @return {Promise}      A promise which resolves when the request is complete."," */","IngestAPI.prototype.updateVideos = function (videos) {","  if (!Array.isArray(videos)) {","    return this.promisify(false,","      'IngestAPI updateVideos requires an array of videos');","  }","","  return new Request({","    url: this.config.host + this.config.videos,","    token: this.getToken(),","    method: 'PATCH',","    data: videos","  });","};","","/**"," * Deletes a batch of videos in one HTTP request."," * @private"," * @param {array}    videos     An array of video objects."," * @param {boolean}  permanent  A flag to permanently delete each video."," *"," * @return {Promise}            A promise which resolves when the request is complete."," */","IngestAPI.prototype._deleteVideos = function (videos, permanent) {","  var url;","","  if (!Array.isArray(videos)) {","    return this.promisify(false,","      'IngestAPI deleteVideos requires an array of videos');","  }","","  url = this.config.host + this.config.videos;","","  if (permanent === true) {","    url += this.config.deleteMethods.permanent;","  }","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'DELETE',","    data: videos","  });","};","","/**"," * Delete a batch of videos."," *"," * @param  {array}  videos  An array of video objects."," *"," * @return {Promise}        A promise which resolves when the request is complete."," */","IngestAPI.prototype.deleteVideos = function (videos) {","  return this._deleteVideos(videos);","};","","/**"," * Permanently delete a batch of videos."," *"," * @param  {array}  videos  An array of video objects."," *"," * @return {Promise}        A promise which resolves when the request is complete."," */","IngestAPI.prototype.permanentlyDeleteVideos = function (videos) {","  return this._deleteVideos(videos, true);","};","","/**"," * Delete a video."," * @private"," * @param  {string}   videoId   ID for the video to delete."," * @param  {boolean}  permanent A flag to permanently delete the video."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype._deleteVideo = function (videoId, permanent) {","  var url;","  var tokens;","","  if (typeof videoId !== 'string') {","    return this.promisify(false,","      'IngestAPI deleteVideo requires a video ID passed as a string.');","  }","","  tokens = {","    id: videoId","  };","","  url = this.parseTokens(this.config.host + this.config.videoById, tokens);","","  if (permanent === true) {","    url += this.config.deleteMethods.permanent;","  }","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'DELETE'","  });","};","","/**"," * Delete a video."," * @param  {string}   videoId   ID for the video to delete."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.deleteVideo = function (videoId) {","  return this._deleteVideo(videoId);","};","","/**"," * Permanently delete a video."," *"," * @param  {string}   videoId   ID for the video to delete."," * @return {Promise}            A promise which resolves when the request is complete."," */","IngestAPI.prototype.permanentlyDeleteVideo = function (videoId) {","  return this._deleteVideo(videoId, true);","};","","/**"," * Return a subset of videos that match the search terms."," * @param  {string} resource The type of resources to search for, playlist or videos."," * @param  {string} input    The search terms to match against."," * @param  {object} headers  The headers to be passed to the request."," * @return {Promise}          A promise which resolves when the request is complete."," */","IngestAPI.prototype.searchVideos = function (resource, input, headers) {","","  var url;","","  if (typeof resource !== 'string') {","    return this.promisify(false,","      'IngestAPI searchVideos requires a resource type to be passed as a string.');","  }","","  if (typeof input !== 'string') {","    return this.promisify(false,","      'IngestAPI searchVideos requires search input to be passed as a string.');","  }","","  url = this.parseTokens(this.config.host + this.config.search, {","    resource: resource,","    input: input","  });","","  return new Request({","    url: url,","    token: this.getToken(),","    headers: headers","  });","","};","","/**"," * Get the total count of videos."," * @return {number} The number of videos in the current network."," */","IngestAPI.prototype.getVideosCount = function () {","","  return new Request({","    url: this.config.host + this.config.videos,","    token: this.getToken(),","    method: 'HEAD'","  }).then(this.getCountResponse.bind(this));","","};","","/**"," * Return the videos currently in the trash."," * @param {object} Headers to be passed along with the request for pagination."," *"," * @return {Promise} Promise/A+ spec which resovles with the trashed videos."," */","IngestAPI.prototype.getTrashedVideos = function (headers) {","","  return new Request({","    url: this.config.host + this.config.trash,","    token: this.getToken(),","    headers: headers","  });","","};","","/**"," * Get a count of the current videos in the trash."," * @return {Promise} Promise/A+ spec which resolves with the trashed video count."," */","IngestAPI.prototype.getTrashedVideosCount = function () {","","  return new Request({","    url: this.config.host + this.config.trash,","    token: this.getToken(),","    method: 'HEAD'","  }).then(this.getCountResponse.bind(this));","","};","","/**"," * Handle the response from the retrieving video counts."," * @param  {object} response  Request response object."," * @return {number}           The resource count from the response."," */","IngestAPI.prototype.getCountResponse = function (response) {","","  return parseInt(response.headers('Resource-Count'), 10);","","};","","/**"," * Make a request and sign the blob to be uploaded."," * @param  {object}   data            File data used to sign the upload."," * @param  {string}   data.id         The uuid in the ingest service that represents a video record,"," * @param  {string}   data.key        The key associated with the file on AWS."," * @param  {string}   data.uploadId   An id provided by amazon s3 to track multi-part uploads."," * @param  {string}   data.partNumber The part of the file being signed."," * @param  {boolean}  data.method     Whether or not the file requires singlepart or multipart uploading."," *"," * @return {Promise}                  A promise which resolves when the request is complete."," */","IngestAPI.prototype.signUploadBlob = function (data) {","","  var checkObject = this.validateUploadObject(data);","  var url;","  var tokens;","  var signing = '';","","  // Make sure all the proper properties have been passed in.","  if (!checkObject.valid) {","    return this.promisify(false, checkObject.message);","  }","","  if (!data.method) {","    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;","  }","","  // Replacing <%=id%> with data.id","  // Replacing <%=method%> with '?type=amazon' or ''","  tokens = {","    id: data.id,","    method: signing","  };","","  url = this.parseTokens(this.config.host + this.config.inputsUploadSign, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'POST',","    data: data","  });","","};","","/**"," * Validate the object supplying the upload key and uploadId."," * @private"," *"," * @param  {object}   data            File data used to sign the upload."," * @param  {string}   data.key        The key associated with the file on AWS."," * @param  {string}   data.uploadId   An id provided by amazon s3 to track multi-part uploads."," *"," * @return {boolean}  Boolean         Representing weather or not the object is valid."," **/","IngestAPI.prototype._validateUploadIds = function (data) {","","  var result = {","    valid: true,","    message: ''","  };","","  if (typeof data !== 'object') {","    result.valid = false;","    result.message = 'The passed value was not an object.';","  }","","  if (typeof data.key !== 'string') {","    result.valid = false;","    result.message = 'Missing or invalid property : key.';","  }","","  if (typeof data.uploadId !== 'string') {","    result.valid = false;","    result.message = 'Missing or invalid property : uploadId';","  }","","  return result;","};","","/**"," * Validate the object supplying the upload data."," * @param  {object}   data            File data used to sign the upload."," * @param  {string}   data.id         The uuid in the ingest service that represents a video record,"," * @param  {string}   data.key        The key associated with the file on AWS."," * @param  {string}   data.uploadId   An id provided by amazon s3 to track multi-part uploads."," * @param  {string}   data.partNumber The part of the file being signed."," * @param  {boolean}  data.method     Whether or not the file requires singlepart or multipart uploading."," *"," * @return {boolean}  Boolean         Representing weather or not the object is valid."," **/","IngestAPI.prototype.validateUploadObject = function (data) {","","  var validIds = this._validateUploadIds(data);","  var result = {","    valid: true,","    message: ''","  };","","  if (typeof data !== 'object') {","    result.valid = false;","    result.message = 'The passed value was not an object.';","  }","","  // Make sure all the proper properties have been passed in.","  if (!validIds.valid) {","    result = validIds;","  }","","  if (typeof data.id !== 'string') {","    result.valid = false;","    result.message = 'Missing or invalid property : id.';","  }","","  if (typeof data.partNumber !== 'number') {","    result.valid = false;","    result.message = 'Missing or invalid property : partNumber';","  }","","  if (!data.hasOwnProperty('method') || typeof data.method !== 'boolean') {","    result.valid = false;","    result.message = 'Missing or invalid property : method';","  }","","  // For the case of single part uploads, the uploadId is not required.","  if (data.hasOwnProperty('method') && !data.method && !data.uploadId) {","    result.valid = true;","    result.message = '';","  }","","  return result;","};","","/**"," * Replace all tokens within a given template based on the given key/value pair."," * @param  {string}     template    Template for the url."," * @param  {object}     hash        Key/Value pair for replacing tokens in the template."," *"," * @example"," * var tokens = {"," *  keyInTemplate: 'replacedWith'"," * };"," *"," * var template = '<%=keyInTemplate%>';"," *"," * var result = parseTokens(template, tokens);  // 'replacedWith'"," *"," * @return {string}                 Parsed string."," */","IngestAPI.prototype.parseTokens = function (template, hash) {","","  var keys = Object.keys(hash);","  var i;","  var length = keys.length;","","  for (i = 0; i < length; i++) {","    template = template.replace('<%=' + keys[i] + '%>', hash[keys[i]]);","  }","","  return template;","","};","","/**"," * Wrapper function to wrap a value in either a reject or resolve."," * @param  {boolean} state Rejection or Approval."," * @param  {*}       value Value to pass back to the promise."," * @return {Promise}       Promise/A+ spec promise."," */","IngestAPI.prototype.promisify = function (state, value) {","","  var promise = Promise();","","  promise(state, [value]);","","  return promise;","","};","","/**"," * Get the current network primary key in RSA format."," * @return {Promise} Promise/A+ spec which resolves with the primary network key."," */","IngestAPI.prototype.getNetworkSecureKeys = function () {","","  return new Request({","    url: this.config.host + this.config.networksKeys,","    token: this.getToken()","  });","","};","","/**"," * Adds a new secure key to the current network."," * @param {object}  data        The object containing data for the secure key entry."," * @param {string}  data.title  Optional. The title of the secure key. Will default to \"Default Key Title\""," * @param {string}  data.key    The public key in RSA format."," *"," * @return {Promise}          A promise which resolves when the request is complete."," */","IngestAPI.prototype.addNetworkSecureKey = function (data) {","  if (typeof data !== 'object') {","    return this.promisify(false,","      'IngestAPI addNetworkSecureKey requires data to be passed as an object.');","  }","","  // The title must be a string.","  if (typeof data.title !== 'string') {","    data.title = '';","  }","","  if (typeof data.key !== 'string') {","    return this.promisify(false,","      'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');","  }","","  return new Request({","    url: this.config.host + this.config.networksKeys,","    token: this.getToken(),","    method: 'POST',","    data: data","  });","};","","/**"," * Retrieves a single network secure key entry based on the UUID given."," * @param {string}  id  The UUID of the secure key entry."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.getNetworkSecureKeyById = function (id) {","  var tokens, url;","","  if (typeof id !== 'string') {","    return this.promisify(false,","      'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');","  }","","  tokens = {","    id: id","  };","","  url = this.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  return new Request({","    url: url,","    token: this.getToken()","  });","};","","/**"," * Updates an individual secure key entry in the current network."," * @param {object}  data        The object containing data for the secure key entry."," * @param {string}  data.title  The title for the current network."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.updateNetworkSecureKey = function (data) {","  var tokens, url;","","  if (typeof data !== 'object') {","    return this.promisify(false,","      'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');","  }","","  if (typeof data.id !== 'string') {","    return this.promisify(false,","      'IngestAPI updateNetworkSecureKeyById requires a param \"id\" to be a string.');","  }","","  if (typeof data.title !== 'string') {","    data.title = '';","  }","","  tokens = {","    id: data.id","  };","","  url = this.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'PATCH',","    data: data","  });","};","","/**"," * Deletes a single network secure key entry based on the UUID given."," * @param {string}  id  The UUID of the secure key entry."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.deleteNetworkSecureKeyById = function (id) {","  var tokens, url;","","  if (typeof id !== 'string') {","    return this.promisify(false,","      'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');","  }","","  tokens = {","    id: id","  };","","  url = this.parseTokens(this.config.host + this.config.networksKeysById, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'DELETE'","  });","};","","/**"," * Retrieve all thumbnails for a provided video id."," * @param {string} id of the video to retrieve thumbnails for."," */","IngestAPI.prototype.getVideoThumbnails = function (id) {","  var tokens, url;","","  if (typeof id !== 'string') {","    return this.promisify(false,","      'IngestAPI getVideoThumbnails requires an id to be passed as a string.');","  }","","  tokens = {","    id: id","  };","","  url = this.parseTokens(this.config.host + this.config.thumbnails, tokens);","","  return new Request({","    url: url,","    token: this.getToken()","  });","","};","","/**"," * Return a list of inputs for the current user and network."," * @param  {object}  headers Javascript object representing headers to apply to the call."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.getInputs = function (headers) {","","  return new Request({","    url: this.config.host + this.config.inputs,","    token: this.getToken(),","    headers: headers","  });","","};","","/**"," * Return an input that matches the supplied id."," * @param  {string}  inputId ID for the requested video."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.getInputsById = function (inputId) {","","  var url;","  var tokens;","","  if (typeof inputId !== 'string') {","    // Wrap the error in a promise so the user is still catching the errors.","    return this.promisify(false,","      'IngestAPI getInputsById requires a valid inputId as a string.');","  }","","  tokens = {","    id: inputId","  };","","  url = this.parseTokens(this.config.host + this.config.inputsById, tokens);","","  return new Request({","    url: url,","    token: this.getToken()","  });","","};","","/**"," * Add a new input."," * @param  {array}  inputObject An object representing the input to add."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.addInputs = function (inputs) {","","  // Validate the object being passed in.","  if (!Array.isArray(inputs)) {","    // Wrap the error in a promise.","    return this.promisify(false,","      'IngestAPI addInput requires an array of input objects.');","  }","","  // Return the promise from the request.","  return new Request({","    url: this.config.host + this.config.inputs,","    token: this.getToken(),","    method: 'POST',","    data: inputs","  });","};","","/**"," * Delete a single input"," * @param  {string}  inputId An id for the input you wish to delete"," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.deleteInput = function (inputId) {","","  var url;","  var tokens;","","  if (typeof inputId !== 'string') {","    return this.promisify(false,","      'IngestAPI deleteInput requires a video ID passed as a string.');","  }","","  tokens = {","    id: inputId","  };","","  url = this.parseTokens(this.config.host + this.config.inputsById, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'DELETE'","  });","","};","","/**"," * Delete many inputs"," * @param  {array}   inputs An array of inputs to be deleted"," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.deleteInputs = function (inputs) {","","  var url;","","  if (!Array.isArray(inputs)) {","    return this.promisify(false,","      'IngestAPI deleteInputs requires an array of input Ids');","  }","","  url = this.config.host + this.config.inputs;","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'DELETE',","    data: inputs","  });","};","","/**"," * Initializes an Input for upload"," * @param  {string}  inputId     An id for the input you wish to delete"," * @param  {object}  data        The object containing data for the upload initialization."," * @param  {string}  data.type   The content type of the item you wish to upload"," * @param  {number}  data.size   The size of the item you wish to upload"," * @param  {boolean} data.method A boolean representing whether or not it is a multipart upload"," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.initializeInputUpload = function (inputId, data) {","","  var url;","  var tokens;","  var signing = '';","","  if (typeof inputId !== 'string') {","    return this.promisify(false,","      'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');","  }","","  if (typeof data.type !== 'string') {","    return this.promisify(false,","      'Missing or invalid property : type.');","  }","","  if (typeof data.size !== 'number') {","    return this.promisify(false,","      'Missing or invalid property : size');","  }","","  if (!data.method) {","    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;","  }","","  tokens = {","    id: inputId,","    method: signing","  };","","  url = this.parseTokens(this.config.host + this.config.inputsUploadInitialize, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'POST',","    data: data","  });","};","","/**"," * Completes an input upload"," * @param  {string}  inputId        An id for the input you wish to delete"," * @param  {object}  data           The object containing data for the upload completion."," * @param  {string}  data.uploadId  The uploadId you wish to complete the upload for"," * @param  {number}  data.key       The key of the upload you wish to complete"," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.completeInputUpload = function (inputId, data) {","","  var url;","  var tokens;","  var checkObject = this._validateUploadIds(data);","","  if (typeof inputId !== 'string') {","    return this.promisify(false,","      'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');","  }","","  // Make sure all the proper properties have been passed in.","  if (!checkObject.valid) {","    return this.promisify(false, checkObject.message);","  }","","  tokens = {","    id: inputId","  };","","  url = this.parseTokens(this.config.host + this.config.inputsUploadComplete, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'POST',","    data: data","  });","};","","/**"," * Completes an input upload"," * @param  {string}  inputId        An id for the input you wish to delete"," * @param  {object}  data           The object containing data for the upload completion."," * @param  {string}  data.uploadId  The uploadId you wish to complete the upload for"," * @param  {number}  data.key       The key of the upload you wish to complete"," *"," * @return {Promise} A promise which resolves when the request is complete."," */","IngestAPI.prototype.abortInputUpload = function (inputId, data) {","","  var url;","  var tokens;","  var checkObject = this._validateUploadIds(data);","","  if (typeof inputId !== 'string') {","    return this.promisify(false,","      'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');","  }","","  // Make sure all the proper properties have been passed in.","  if (!checkObject.valid) {","    return this.promisify(false, checkObject.message);","  }","","  tokens = {","    id: inputId","  };","","  url = this.parseTokens(this.config.host + this.config.inputsUploadAbort, tokens);","","  return new Request({","    url: url,","    token: this.getToken(),","    method: 'POST',","    data: data","  });","};","","module.exports = IngestAPI;"]};
	}
	__cov__Lwiq0RdkJ3UGdwyqgPGVA = __cov__Lwiq0RdkJ3UGdwyqgPGVA['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js'];
	__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['1']++;var Request=__webpack_require__(2);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['2']++;var Promise=__webpack_require__(3);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['3']++;var extend=__webpack_require__(7);function IngestAPI(options){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['1']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['5']++;this.defaults={'host':'https://api.ingest.io','videos':'/videos','videoById':'/videos/<%=id%>','thumbnails':'/videos/<%=id%>/thumbnails','trash':'/videos?filter=trashed','networks':'/networks','networksKeys':'/networks/keys','networksKeysById':'/networks/keys/<%=id%>','inputs':'/encoding/inputs','inputsById':'/encoding/inputs/<%=id%>','inputsUpload':'/encoding/inputs/<%=id%>/upload','inputsUploadInitialize':'/encoding/inputs/<%=id%>/upload<%=method%>','inputsUploadSign':'/encoding/inputs/<%=id%>/upload/sign<%=method%>','inputsUploadComplete':'/encoding/inputs/<%=id%>/upload/complete','inputsUploadAbort':'/encoding/inputs/<%=id%>/upload/abort','uploadMethods':{'param':'?type=','singlePart':'amazon','multiPart':'amazonMP'},'deleteMethods':{'permanent':'?permanent=1'},'search':'/<%=resource%>?search=<%=input%>'};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['6']++;this.config=extend(true,{},this.defaults,options);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['7']++;if(this.config.token){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['1'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['8']++;this.setToken(this.config.token);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['1'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['9']++;this.request=Request;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['10']++;IngestAPI.prototype.setToken=function(token){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['2']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['11']++;if(typeof token!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['2'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['12']++;throw new Error('IngestAPI requires an authentication token passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['2'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['13']++;this.token=token;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['14']++;IngestAPI.prototype.getToken=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['3']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['15']++;if(!this.token){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['3'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['16']++;throw new Error('IngestAPI requires a token to be set.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['3'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['17']++;return this.token;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['18']++;IngestAPI.prototype.getVideos=function(headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['4']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['19']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['20']++;IngestAPI.prototype.getVideoById=function(videoId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['5']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['21']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['22']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['23']++;if(typeof videoId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['4'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['24']++;return this.promisify(false,'IngestAPI getVideoById requires a valid videoId as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['4'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['25']++;tokens={id:videoId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['26']++;url=this.parseTokens(this.config.host+this.config.videoById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['27']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['28']++;IngestAPI.prototype.addVideo=function(videoObject){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['6']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['29']++;if(typeof videoObject!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['5'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['30']++;return this.promisify(false,'IngestAPI addVideo requires a video object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['5'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['31']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),method:'POST',data:videoObject});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['32']++;IngestAPI.prototype.updateVideo=function(video){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['7']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['33']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['34']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['35']++;if(typeof video!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['6'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['36']++;return this.promisify(false,'IngestAPI update requires a video to be passed as an object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['6'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['37']++;tokens={id:video.id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['38']++;url=this.parseTokens(this.config.host+this.config.videoById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['39']++;return new Request({url:url,token:this.getToken(),method:'PATCH',data:video});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['40']++;IngestAPI.prototype.updateVideos=function(videos){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['8']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['41']++;if(!Array.isArray(videos)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['7'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['42']++;return this.promisify(false,'IngestAPI updateVideos requires an array of videos');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['7'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['43']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),method:'PATCH',data:videos});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['44']++;IngestAPI.prototype._deleteVideos=function(videos,permanent){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['9']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['45']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['46']++;if(!Array.isArray(videos)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['8'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['47']++;return this.promisify(false,'IngestAPI deleteVideos requires an array of videos');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['8'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['48']++;url=this.config.host+this.config.videos;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['49']++;if(permanent===true){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['9'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['50']++;url+=this.config.deleteMethods.permanent;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['9'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['51']++;return new Request({url:url,token:this.getToken(),method:'DELETE',data:videos});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['52']++;IngestAPI.prototype.deleteVideos=function(videos){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['10']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['53']++;return this._deleteVideos(videos);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['54']++;IngestAPI.prototype.permanentlyDeleteVideos=function(videos){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['11']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['55']++;return this._deleteVideos(videos,true);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['56']++;IngestAPI.prototype._deleteVideo=function(videoId,permanent){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['12']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['57']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['58']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['59']++;if(typeof videoId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['10'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['60']++;return this.promisify(false,'IngestAPI deleteVideo requires a video ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['10'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['61']++;tokens={id:videoId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['62']++;url=this.parseTokens(this.config.host+this.config.videoById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['63']++;if(permanent===true){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['11'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['64']++;url+=this.config.deleteMethods.permanent;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['11'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['65']++;return new Request({url:url,token:this.getToken(),method:'DELETE'});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['66']++;IngestAPI.prototype.deleteVideo=function(videoId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['13']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['67']++;return this._deleteVideo(videoId);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['68']++;IngestAPI.prototype.permanentlyDeleteVideo=function(videoId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['14']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['69']++;return this._deleteVideo(videoId,true);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['70']++;IngestAPI.prototype.searchVideos=function(resource,input,headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['15']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['71']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['72']++;if(typeof resource!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['12'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['73']++;return this.promisify(false,'IngestAPI searchVideos requires a resource type to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['12'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['74']++;if(typeof input!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['13'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['75']++;return this.promisify(false,'IngestAPI searchVideos requires search input to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['13'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['76']++;url=this.parseTokens(this.config.host+this.config.search,{resource:resource,input:input});__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['77']++;return new Request({url:url,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['78']++;IngestAPI.prototype.getVideosCount=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['16']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['79']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),method:'HEAD'}).then(this.getCountResponse.bind(this));};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['80']++;IngestAPI.prototype.getTrashedVideos=function(headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['17']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['81']++;return new Request({url:this.config.host+this.config.trash,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['82']++;IngestAPI.prototype.getTrashedVideosCount=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['18']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['83']++;return new Request({url:this.config.host+this.config.trash,token:this.getToken(),method:'HEAD'}).then(this.getCountResponse.bind(this));};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['84']++;IngestAPI.prototype.getCountResponse=function(response){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['19']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['85']++;return parseInt(response.headers('Resource-Count'),10);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['86']++;IngestAPI.prototype.signUploadBlob=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['20']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['87']++;var checkObject=this.validateUploadObject(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['88']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['89']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['90']++;var signing='';__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['91']++;if(!checkObject.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['14'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['92']++;return this.promisify(false,checkObject.message);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['14'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['93']++;if(!data.method){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['15'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['94']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['15'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['95']++;tokens={id:data.id,method:signing};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['96']++;url=this.parseTokens(this.config.host+this.config.inputsUploadSign,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['97']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['98']++;IngestAPI.prototype._validateUploadIds=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['21']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['99']++;var result={valid:true,message:''};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['100']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['16'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['101']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['102']++;result.message='The passed value was not an object.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['16'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['103']++;if(typeof data.key!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['17'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['104']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['105']++;result.message='Missing or invalid property : key.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['17'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['106']++;if(typeof data.uploadId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['18'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['107']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['108']++;result.message='Missing or invalid property : uploadId';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['18'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['109']++;return result;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['110']++;IngestAPI.prototype.validateUploadObject=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['22']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['111']++;var validIds=this._validateUploadIds(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['112']++;var result={valid:true,message:''};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['113']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['19'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['114']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['115']++;result.message='The passed value was not an object.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['19'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['116']++;if(!validIds.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['20'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['117']++;result=validIds;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['20'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['118']++;if(typeof data.id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['21'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['119']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['120']++;result.message='Missing or invalid property : id.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['21'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['121']++;if(typeof data.partNumber!=='number'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['22'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['122']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['123']++;result.message='Missing or invalid property : partNumber';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['22'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['124']++;if((__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['24'][0]++,!data.hasOwnProperty('method'))||(__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['24'][1]++,typeof data.method!=='boolean')){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['23'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['125']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['126']++;result.message='Missing or invalid property : method';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['23'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['127']++;if((__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['26'][0]++,data.hasOwnProperty('method'))&&(__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['26'][1]++,!data.method)&&(__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['26'][2]++,!data.uploadId)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['25'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['128']++;result.valid=true;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['129']++;result.message='';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['25'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['130']++;return result;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['131']++;IngestAPI.prototype.parseTokens=function(template,hash){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['23']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['132']++;var keys=Object.keys(hash);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['133']++;var i;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['134']++;var length=keys.length;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['135']++;for(i=0;i<length;i++){__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['136']++;template=template.replace('<%='+keys[i]+'%>',hash[keys[i]]);}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['137']++;return template;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['138']++;IngestAPI.prototype.promisify=function(state,value){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['24']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['139']++;var promise=Promise();__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['140']++;promise(state,[value]);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['141']++;return promise;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['142']++;IngestAPI.prototype.getNetworkSecureKeys=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['25']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['143']++;return new Request({url:this.config.host+this.config.networksKeys,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['144']++;IngestAPI.prototype.addNetworkSecureKey=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['26']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['145']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['27'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['146']++;return this.promisify(false,'IngestAPI addNetworkSecureKey requires data to be passed as an object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['27'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['147']++;if(typeof data.title!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['28'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['148']++;data.title='';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['28'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['149']++;if(typeof data.key!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['29'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['150']++;return this.promisify(false,'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['29'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['151']++;return new Request({url:this.config.host+this.config.networksKeys,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['152']++;IngestAPI.prototype.getNetworkSecureKeyById=function(id){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['27']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['153']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['154']++;if(typeof id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['30'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['155']++;return this.promisify(false,'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['30'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['156']++;tokens={id:id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['157']++;url=this.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['158']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['159']++;IngestAPI.prototype.updateNetworkSecureKey=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['28']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['160']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['161']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['31'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['162']++;return this.promisify(false,'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['31'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['163']++;if(typeof data.id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['32'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['164']++;return this.promisify(false,'IngestAPI updateNetworkSecureKeyById requires a param "id" to be a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['32'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['165']++;if(typeof data.title!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['33'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['166']++;data.title='';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['33'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['167']++;tokens={id:data.id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['168']++;url=this.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['169']++;return new Request({url:url,token:this.getToken(),method:'PATCH',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['170']++;IngestAPI.prototype.deleteNetworkSecureKeyById=function(id){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['29']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['171']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['172']++;if(typeof id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['34'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['173']++;return this.promisify(false,'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['34'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['174']++;tokens={id:id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['175']++;url=this.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['176']++;return new Request({url:url,token:this.getToken(),method:'DELETE'});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['177']++;IngestAPI.prototype.getVideoThumbnails=function(id){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['30']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['178']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['179']++;if(typeof id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['35'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['180']++;return this.promisify(false,'IngestAPI getVideoThumbnails requires an id to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['35'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['181']++;tokens={id:id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['182']++;url=this.parseTokens(this.config.host+this.config.thumbnails,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['183']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['184']++;IngestAPI.prototype.getInputs=function(headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['31']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['185']++;return new Request({url:this.config.host+this.config.inputs,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['186']++;IngestAPI.prototype.getInputsById=function(inputId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['32']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['187']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['188']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['189']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['36'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['190']++;return this.promisify(false,'IngestAPI getInputsById requires a valid inputId as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['36'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['191']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['192']++;url=this.parseTokens(this.config.host+this.config.inputsById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['193']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['194']++;IngestAPI.prototype.addInputs=function(inputs){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['33']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['195']++;if(!Array.isArray(inputs)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['37'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['196']++;return this.promisify(false,'IngestAPI addInput requires an array of input objects.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['37'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['197']++;return new Request({url:this.config.host+this.config.inputs,token:this.getToken(),method:'POST',data:inputs});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['198']++;IngestAPI.prototype.deleteInput=function(inputId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['34']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['199']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['200']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['201']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['38'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['202']++;return this.promisify(false,'IngestAPI deleteInput requires a video ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['38'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['203']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['204']++;url=this.parseTokens(this.config.host+this.config.inputsById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['205']++;return new Request({url:url,token:this.getToken(),method:'DELETE'});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['206']++;IngestAPI.prototype.deleteInputs=function(inputs){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['35']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['207']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['208']++;if(!Array.isArray(inputs)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['39'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['209']++;return this.promisify(false,'IngestAPI deleteInputs requires an array of input Ids');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['39'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['210']++;url=this.config.host+this.config.inputs;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['211']++;return new Request({url:url,token:this.getToken(),method:'DELETE',data:inputs});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['212']++;IngestAPI.prototype.initializeInputUpload=function(inputId,data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['36']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['213']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['214']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['215']++;var signing='';__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['216']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['40'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['217']++;return this.promisify(false,'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['40'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['218']++;if(typeof data.type!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['41'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['219']++;return this.promisify(false,'Missing or invalid property : type.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['41'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['220']++;if(typeof data.size!=='number'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['42'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['221']++;return this.promisify(false,'Missing or invalid property : size');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['42'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['222']++;if(!data.method){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['43'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['223']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['43'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['224']++;tokens={id:inputId,method:signing};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['225']++;url=this.parseTokens(this.config.host+this.config.inputsUploadInitialize,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['226']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['227']++;IngestAPI.prototype.completeInputUpload=function(inputId,data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['37']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['228']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['229']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['230']++;var checkObject=this._validateUploadIds(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['231']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['44'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['232']++;return this.promisify(false,'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['44'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['233']++;if(!checkObject.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['45'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['234']++;return this.promisify(false,checkObject.message);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['45'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['235']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['236']++;url=this.parseTokens(this.config.host+this.config.inputsUploadComplete,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['237']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['238']++;IngestAPI.prototype.abortInputUpload=function(inputId,data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['38']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['239']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['240']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['241']++;var checkObject=this._validateUploadIds(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['242']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['46'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['243']++;return this.promisify(false,'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['46'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['244']++;if(!checkObject.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['47'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['245']++;return this.promisify(false,checkObject.message);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['47'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['246']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['247']++;url=this.parseTokens(this.config.host+this.config.inputsUploadAbort,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['248']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['249']++;module.exports=IngestAPI;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __cov_du$kOe_dpr87xUQ4r0zocg = (Function('return this'))();
	if (!__cov_du$kOe_dpr87xUQ4r0zocg.__coverage__) { __cov_du$kOe_dpr87xUQ4r0zocg.__coverage__ = {}; }
	__cov_du$kOe_dpr87xUQ4r0zocg = __cov_du$kOe_dpr87xUQ4r0zocg.__coverage__;
	if (!(__cov_du$kOe_dpr87xUQ4r0zocg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js'])) {
	   __cov_du$kOe_dpr87xUQ4r0zocg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js'] = {"path":"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Request","line":19,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":33}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":52,"column":35},"end":{"line":52,"column":47}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":59,"column":32},"end":{"line":59,"column":44}}},"4":{"name":"(anonymous_4)","line":101,"loc":{"start":{"line":101,"column":36},"end":{"line":101,"column":52}}},"5":{"name":"(anonymous_5)","line":126,"loc":{"start":{"line":128,"column":40},"end":{"line":128,"column":59}}},"6":{"name":"(anonymous_6)","line":143,"loc":{"start":{"line":146,"column":36},"end":{"line":146,"column":56}}},"7":{"name":"(anonymous_7)","line":157,"loc":{"start":{"line":161,"column":36},"end":{"line":161,"column":56}}},"8":{"name":"(anonymous_8)","line":183,"loc":{"start":{"line":188,"column":33},"end":{"line":188,"column":52}}},"9":{"name":"(anonymous_9)","line":191,"loc":{"start":{"line":196,"column":37},"end":{"line":196,"column":49}}},"10":{"name":"(anonymous_10)","line":210,"loc":{"start":{"line":217,"column":40},"end":{"line":217,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"5":{"start":{"line":17,"column":0},"end":{"line":47,"column":2}},"6":{"start":{"line":19,"column":2},"end":{"line":22,"column":4}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":38}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":54}},"11":{"start":{"line":36,"column":2},"end":{"line":39,"column":3}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":80}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":24}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":21}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":22}},"16":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":69}},"18":{"start":{"line":59,"column":0},"end":{"line":94,"column":2}},"19":{"start":{"line":61,"column":2},"end":{"line":61,"column":57}},"20":{"start":{"line":63,"column":2},"end":{"line":66,"column":3}},"21":{"start":{"line":64,"column":4},"end":{"line":64,"column":68}},"22":{"start":{"line":65,"column":4},"end":{"line":65,"column":11}},"23":{"start":{"line":68,"column":2},"end":{"line":68,"column":79}},"24":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"25":{"start":{"line":71,"column":4},"end":{"line":71,"column":51}},"26":{"start":{"line":75,"column":2},"end":{"line":84,"column":3}},"27":{"start":{"line":78,"column":4},"end":{"line":81,"column":5}},"28":{"start":{"line":79,"column":6},"end":{"line":79,"column":61}},"29":{"start":{"line":80,"column":6},"end":{"line":80,"column":13}},"30":{"start":{"line":83,"column":4},"end":{"line":83,"column":71}},"31":{"start":{"line":87,"column":2},"end":{"line":92,"column":3}},"32":{"start":{"line":88,"column":4},"end":{"line":88,"column":85}},"33":{"start":{"line":89,"column":4},"end":{"line":89,"column":37}},"34":{"start":{"line":91,"column":4},"end":{"line":91,"column":24}},"35":{"start":{"line":101,"column":0},"end":{"line":122,"column":2}},"36":{"start":{"line":103,"column":2},"end":{"line":106,"column":4}},"37":{"start":{"line":109,"column":2},"end":{"line":118,"column":3}},"38":{"start":{"line":111,"column":4},"end":{"line":116,"column":5}},"39":{"start":{"line":112,"column":6},"end":{"line":112,"column":41}},"40":{"start":{"line":114,"column":6},"end":{"line":114,"column":29}},"41":{"start":{"line":115,"column":6},"end":{"line":115,"column":25}},"42":{"start":{"line":120,"column":2},"end":{"line":120,"column":16}},"43":{"start":{"line":128,"column":0},"end":{"line":140,"column":2}},"44":{"start":{"line":130,"column":2},"end":{"line":130,"column":13}},"45":{"start":{"line":131,"column":2},"end":{"line":131,"column":34}},"46":{"start":{"line":132,"column":2},"end":{"line":132,"column":31}},"47":{"start":{"line":135,"column":2},"end":{"line":138,"column":3}},"48":{"start":{"line":136,"column":4},"end":{"line":136,"column":18}},"49":{"start":{"line":137,"column":4},"end":{"line":137,"column":53}},"50":{"start":{"line":146,"column":0},"end":{"line":154,"column":2}},"51":{"start":{"line":149,"column":2},"end":{"line":149,"column":49}},"52":{"start":{"line":152,"column":2},"end":{"line":152,"column":59}},"53":{"start":{"line":161,"column":0},"end":{"line":182,"column":2}},"54":{"start":{"line":162,"column":2},"end":{"line":162,"column":68}},"55":{"start":{"line":163,"column":2},"end":{"line":163,"column":24}},"56":{"start":{"line":166,"column":2},"end":{"line":174,"column":3}},"57":{"start":{"line":167,"column":4},"end":{"line":173,"column":5}},"58":{"start":{"line":168,"column":6},"end":{"line":168,"column":36}},"59":{"start":{"line":170,"column":6},"end":{"line":172,"column":8}},"60":{"start":{"line":176,"column":2},"end":{"line":180,"column":4}},"61":{"start":{"line":188,"column":0},"end":{"line":191,"column":2}},"62":{"start":{"line":190,"column":2},"end":{"line":190,"column":33}},"63":{"start":{"line":196,"column":0},"end":{"line":210,"column":2}},"64":{"start":{"line":199,"column":2},"end":{"line":208,"column":3}},"65":{"start":{"line":202,"column":4},"end":{"line":206,"column":5}},"66":{"start":{"line":203,"column":6},"end":{"line":203,"column":54}},"67":{"start":{"line":205,"column":6},"end":{"line":205,"column":50}},"68":{"start":{"line":217,"column":0},"end":{"line":235,"column":2}},"69":{"start":{"line":219,"column":2},"end":{"line":221,"column":6}},"70":{"start":{"line":224,"column":2},"end":{"line":231,"column":3}},"71":{"start":{"line":226,"column":4},"end":{"line":229,"column":5}},"72":{"start":{"line":227,"column":6},"end":{"line":227,"column":20}},"73":{"start":{"line":228,"column":6},"end":{"line":228,"column":12}},"74":{"start":{"line":233,"column":2},"end":{"line":233,"column":16}},"75":{"start":{"line":237,"column":0},"end":{"line":237,"column":25}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"6":{"line":88,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"8":{"line":162,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"9":{"line":162,"type":"binary-expr","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":18}},{"start":{"line":166,"column":22},"end":{"line":166,"column":69}}]},"10":{"line":194,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"11":{"line":197,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"12":{"line":219,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]}},"code":["var Promise = require('pinkyswear');","var extend = require('extend');","","var JWTUtils = require('./JWTUtils');","","var VALID_RESPONSE_CODES = [200, 201, 202, 204];","","/**"," * A wrapper around the XMLHttpRequest object."," * @param {object}  options         Options for the request."," * @param {boolean} options.async   Whether to perform the request asynchronously"," * @param {string}  options.method  REST verb to use for the request."," * @param {string}  options.url     URL for the request."," *"," * @return {Promise} A promise which resolves when the request is complete."," */","var Request = function (options) {","","  this.defaults = {","    async: true,","    method: 'GET'","  };","","  this.promise = Promise();","","  // Create the XHR object for this request.","  this.request = new XMLHttpRequest();","","  // Set up event listeners for this request.","  this.setupListeners();","","  // Todo, merge some defaults with this.","  this.options = extend(true, this.defaults, options);","","  // Make sure a url is passed before attempting to make the request.","  if (!this.options.url) {","    this.requestError('Request Error : a url is required to make the request.');","    return this.promise;","  }","","  // Make the actual request.","  this.makeRequest();","","  // Return the promise.","  return this.promise;","","};","","/**"," * Add event listeners to the XMLHttpRequest object."," */","Request.prototype.setupListeners = function () {","  this.request.onreadystatechange = this.readyStateChange.bind(this);","};","","/**"," * Execute the open and send of the XMLHttpRequest"," */","Request.prototype.makeRequest = function () {","","  var postData = this.preparePostData(this.options.data);","","  if (!postData.success) {","    this.requestError('Request Error : error preparing post data.');","    return;","  }","","  this.request.open(this.options.method, this.options.url, this.options.async);","","  if (this.options.headers) {","    this.applyRequestHeaders(this.options.headers);","  }","","  // Make the token optional.","  if (this.options.token) {","","    // If there is a token present ensure that it's still valid.","    if (JWTUtils.isExpired(this.options.token)) {","      this.requestError('Request Error : token is expired.');","      return;","    }","","    this.request.setRequestHeader('Authorization', this.options.token);","  }","","  // If there is data then we need to pass that along with the request.","  if (postData.data) {","    this.request.setRequestHeader('Content-type', 'application/json; charset=utf-8');","    this.request.send(postData.data);","  } else {","    this.request.send();","  }","","};","","/**"," * Stringify the post data if it is present."," * @param  {object} data Object to be parsed."," * @return {object}      Result object with the parsed string, and a success boolean flag."," */","Request.prototype.preparePostData = function (data) {","","  var result = {","    success: true,","    data: data","  };","","  // If the data is populated, and its not already a string parse it.","  if (data) {","","    try {","      result.data = JSON.stringify(data);","    } catch (error) {","      result.success = false;","      result.data = null;","    }","","  }","","  return result;","","};","","/**"," * Apply any supplied headers to the request object."," * @param  {object} headers Array of headers to apply to the request object."," */","Request.prototype.applyRequestHeaders = function (headers) {","","  var key, i;","  var keys = Object.keys(headers);","  var keysLength = keys.length;","","  // Loop through and add the keys to the requestHeaders.","  for (i = 0; i < keysLength; i++) {","    key = keys[i];","    this.request.setRequestHeader(key, headers[key]);","  }","","};","","/**"," * Handle the completion of the request and fulfill the promise."," * @param  {String} Response test of the request."," */","Request.prototype.requestComplete = function (response) {","","  // Process the result.","  this.response = this.processResponse(response);","","  // Either resolve or reject the promise.","  this.promise(!this.response.data.error, [this.response]);","","};","","/**"," * Process the response and parse certain content types."," * @param  {*}  response  Response data from request."," * @return {*}            Processed response data."," */","Request.prototype.processResponse = function (response) {","  var responseType = this.request.getResponseHeader('Content-Type');","  var result = response;","","  // Parse JSON if the result is JSON.","  if (responseType && responseType.indexOf('application/json') !== -1) {","    try {","      result = JSON.parse(response);","    } catch (error) {","      result = {","        error: 'JSON parsing failed. ' + error.stack","      };","    }","  }","","  return {","    data: result,","    headers: this.request.getResponseHeader.bind(this.request),","    statusCode: this.request.status","  };","","};","","/**"," * Resolve the promise."," * @param  {String} message   Error message."," */","Request.prototype.requestError = function (message) {","  // Reject the promise.","  this.promise(false, [message]);","};","","/**"," * Handle ready state change events."," */","Request.prototype.readyStateChange = function () {","","  // Request is complete.","  if (this.request.readyState === 4) {","","    // Check if the final response code is valid.","    if (this.isValidResponseCode(this.request.status)) {","      this.requestComplete(this.request.responseText);","    } else {","      this.requestError('Invalid response code.');","    }","","  }","","};","","/**"," * Validate the current response code to see if the request was a success."," * @param  {String}  responseCode Response Code."," * @return {Boolean}              Should this be treated as a successful response code."," */","Request.prototype.isValidResponseCode = function (responseCode) {","","  var result = false,","    responseCodeCount = VALID_RESPONSE_CODES.length,","    i;","","  // Check if the supplied code is in our list of valid codes.","  for (i = 0; i < responseCodeCount; i++) {","","    if (responseCode === VALID_RESPONSE_CODES[i]) {","      result = true;","      break;","    }","","  }","","  return result;","","};","","module.exports = Request;",""]};
	}
	__cov_du$kOe_dpr87xUQ4r0zocg = __cov_du$kOe_dpr87xUQ4r0zocg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js'];
	__cov_du$kOe_dpr87xUQ4r0zocg.s['1']++;var Promise=__webpack_require__(3);__cov_du$kOe_dpr87xUQ4r0zocg.s['2']++;var extend=__webpack_require__(7);__cov_du$kOe_dpr87xUQ4r0zocg.s['3']++;var JWTUtils=__webpack_require__(8);__cov_du$kOe_dpr87xUQ4r0zocg.s['4']++;var VALID_RESPONSE_CODES=[200,201,202,204];__cov_du$kOe_dpr87xUQ4r0zocg.s['5']++;var Request=function Request(options){__cov_du$kOe_dpr87xUQ4r0zocg.f['1']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['6']++;this.defaults={async:true,method:'GET'};__cov_du$kOe_dpr87xUQ4r0zocg.s['7']++;this.promise=Promise();__cov_du$kOe_dpr87xUQ4r0zocg.s['8']++;this.request=new XMLHttpRequest();__cov_du$kOe_dpr87xUQ4r0zocg.s['9']++;this.setupListeners();__cov_du$kOe_dpr87xUQ4r0zocg.s['10']++;this.options=extend(true,this.defaults,options);__cov_du$kOe_dpr87xUQ4r0zocg.s['11']++;if(!this.options.url){__cov_du$kOe_dpr87xUQ4r0zocg.b['1'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['12']++;this.requestError('Request Error : a url is required to make the request.');__cov_du$kOe_dpr87xUQ4r0zocg.s['13']++;return this.promise;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['1'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['14']++;this.makeRequest();__cov_du$kOe_dpr87xUQ4r0zocg.s['15']++;return this.promise;};__cov_du$kOe_dpr87xUQ4r0zocg.s['16']++;Request.prototype.setupListeners=function(){__cov_du$kOe_dpr87xUQ4r0zocg.f['2']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['17']++;this.request.onreadystatechange=this.readyStateChange.bind(this);};__cov_du$kOe_dpr87xUQ4r0zocg.s['18']++;Request.prototype.makeRequest=function(){__cov_du$kOe_dpr87xUQ4r0zocg.f['3']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['19']++;var postData=this.preparePostData(this.options.data);__cov_du$kOe_dpr87xUQ4r0zocg.s['20']++;if(!postData.success){__cov_du$kOe_dpr87xUQ4r0zocg.b['2'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['21']++;this.requestError('Request Error : error preparing post data.');__cov_du$kOe_dpr87xUQ4r0zocg.s['22']++;return;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['2'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['23']++;this.request.open(this.options.method,this.options.url,this.options.async);__cov_du$kOe_dpr87xUQ4r0zocg.s['24']++;if(this.options.headers){__cov_du$kOe_dpr87xUQ4r0zocg.b['3'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['25']++;this.applyRequestHeaders(this.options.headers);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['3'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['26']++;if(this.options.token){__cov_du$kOe_dpr87xUQ4r0zocg.b['4'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['27']++;if(JWTUtils.isExpired(this.options.token)){__cov_du$kOe_dpr87xUQ4r0zocg.b['5'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['28']++;this.requestError('Request Error : token is expired.');__cov_du$kOe_dpr87xUQ4r0zocg.s['29']++;return;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['5'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['30']++;this.request.setRequestHeader('Authorization',this.options.token);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['4'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['31']++;if(postData.data){__cov_du$kOe_dpr87xUQ4r0zocg.b['6'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['32']++;this.request.setRequestHeader('Content-type','application/json; charset=utf-8');__cov_du$kOe_dpr87xUQ4r0zocg.s['33']++;this.request.send(postData.data);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['6'][1]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['34']++;this.request.send();}};__cov_du$kOe_dpr87xUQ4r0zocg.s['35']++;Request.prototype.preparePostData=function(data){__cov_du$kOe_dpr87xUQ4r0zocg.f['4']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['36']++;var result={success:true,data:data};__cov_du$kOe_dpr87xUQ4r0zocg.s['37']++;if(data){__cov_du$kOe_dpr87xUQ4r0zocg.b['7'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['38']++;try{__cov_du$kOe_dpr87xUQ4r0zocg.s['39']++;result.data=JSON.stringify(data);}catch(error){__cov_du$kOe_dpr87xUQ4r0zocg.s['40']++;result.success=false;__cov_du$kOe_dpr87xUQ4r0zocg.s['41']++;result.data=null;}}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['7'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['42']++;return result;};__cov_du$kOe_dpr87xUQ4r0zocg.s['43']++;Request.prototype.applyRequestHeaders=function(headers){__cov_du$kOe_dpr87xUQ4r0zocg.f['5']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['44']++;var key,i;__cov_du$kOe_dpr87xUQ4r0zocg.s['45']++;var keys=Object.keys(headers);__cov_du$kOe_dpr87xUQ4r0zocg.s['46']++;var keysLength=keys.length;__cov_du$kOe_dpr87xUQ4r0zocg.s['47']++;for(i=0;i<keysLength;i++){__cov_du$kOe_dpr87xUQ4r0zocg.s['48']++;key=keys[i];__cov_du$kOe_dpr87xUQ4r0zocg.s['49']++;this.request.setRequestHeader(key,headers[key]);}};__cov_du$kOe_dpr87xUQ4r0zocg.s['50']++;Request.prototype.requestComplete=function(response){__cov_du$kOe_dpr87xUQ4r0zocg.f['6']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['51']++;this.response=this.processResponse(response);__cov_du$kOe_dpr87xUQ4r0zocg.s['52']++;this.promise(!this.response.data.error,[this.response]);};__cov_du$kOe_dpr87xUQ4r0zocg.s['53']++;Request.prototype.processResponse=function(response){__cov_du$kOe_dpr87xUQ4r0zocg.f['7']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['54']++;var responseType=this.request.getResponseHeader('Content-Type');__cov_du$kOe_dpr87xUQ4r0zocg.s['55']++;var result=response;__cov_du$kOe_dpr87xUQ4r0zocg.s['56']++;if((__cov_du$kOe_dpr87xUQ4r0zocg.b['9'][0]++,responseType)&&(__cov_du$kOe_dpr87xUQ4r0zocg.b['9'][1]++,responseType.indexOf('application/json')!==-1)){__cov_du$kOe_dpr87xUQ4r0zocg.b['8'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['57']++;try{__cov_du$kOe_dpr87xUQ4r0zocg.s['58']++;result=JSON.parse(response);}catch(error){__cov_du$kOe_dpr87xUQ4r0zocg.s['59']++;result={error:'JSON parsing failed. '+error.stack};}}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['8'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['60']++;return{data:result,headers:this.request.getResponseHeader.bind(this.request),statusCode:this.request.status};};__cov_du$kOe_dpr87xUQ4r0zocg.s['61']++;Request.prototype.requestError=function(message){__cov_du$kOe_dpr87xUQ4r0zocg.f['8']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['62']++;this.promise(false,[message]);};__cov_du$kOe_dpr87xUQ4r0zocg.s['63']++;Request.prototype.readyStateChange=function(){__cov_du$kOe_dpr87xUQ4r0zocg.f['9']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['64']++;if(this.request.readyState===4){__cov_du$kOe_dpr87xUQ4r0zocg.b['10'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['65']++;if(this.isValidResponseCode(this.request.status)){__cov_du$kOe_dpr87xUQ4r0zocg.b['11'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['66']++;this.requestComplete(this.request.responseText);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['11'][1]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['67']++;this.requestError('Invalid response code.');}}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['10'][1]++;}};__cov_du$kOe_dpr87xUQ4r0zocg.s['68']++;Request.prototype.isValidResponseCode=function(responseCode){__cov_du$kOe_dpr87xUQ4r0zocg.f['10']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['69']++;var result=false,responseCodeCount=VALID_RESPONSE_CODES.length,i;__cov_du$kOe_dpr87xUQ4r0zocg.s['70']++;for(i=0;i<responseCodeCount;i++){__cov_du$kOe_dpr87xUQ4r0zocg.s['71']++;if(responseCode===VALID_RESPONSE_CODES[i]){__cov_du$kOe_dpr87xUQ4r0zocg.b['12'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['72']++;result=true;__cov_du$kOe_dpr87xUQ4r0zocg.s['73']++;break;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['12'][1]++;}}__cov_du$kOe_dpr87xUQ4r0zocg.s['74']++;return result;};__cov_du$kOe_dpr87xUQ4r0zocg.s['75']++;module.exports=Request;


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module, setImmediate, process) {/*
	 * PinkySwear.js 2.2.2 - Minimalistic implementation of the Promises/A+ spec
	 * 
	 * Public Domain. Use, modify and distribute it any way you like. No attribution required.
	 *
	 * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
	 *
	 * PinkySwear is a very small implementation of the Promises/A+ specification. After compilation with the
	 * Google Closure Compiler and gzipping it weighs less than 500 bytes. It is based on the implementation for 
	 * Minified.js and should be perfect for embedding. 
	 *
	 *
	 * PinkySwear has just three functions.
	 *
	 * To create a new promise in pending state, call pinkySwear():
	 *         var promise = pinkySwear();
	 *
	 * The returned object has a Promises/A+ compatible then() implementation:
	 *          promise.then(function(value) { alert("Success!"); }, function(value) { alert("Failure!"); });
	 *
	 *
	 * The promise returned by pinkySwear() is a function. To fulfill the promise, call the function with true as first argument and
	 * an optional array of values to pass to the then() handler. By putting more than one value in the array, you can pass more than one
	 * value to the then() handlers. Here an example to fulfill a promsise, this time with only one argument: 
	 *         promise(true, [42]);
	 *
	 * When the promise has been rejected, call it with false. Again, there may be more than one argument for the then() handler:
	 *         promise(true, [6, 6, 6]);
	 *         
	 * You can obtain the promise's current state by calling the function without arguments. It will be true if fulfilled,
	 * false if rejected, and otherwise undefined.
	 * 		   var state = promise(); 
	 * 
	 * https://github.com/timjansen/PinkySwear.js
	 */
	(function(target) {
		var undef;
	
		function isFunction(f) {
			return typeof f == 'function';
		}
		function isObject(f) {
			return typeof f == 'object';
		}
		function defer(callback) {
			if (typeof setImmediate != 'undefined')
				setImmediate(callback);
			else if (typeof process != 'undefined' && process['nextTick'])
				process['nextTick'](callback);
			else
				setTimeout(callback, 0);
		}
	
		target[0][target[1]] = function pinkySwear(extend) {
			var state;           // undefined/null = pending, true = fulfilled, false = rejected
			var values = [];     // an array of values as arguments for the then() handlers
			var deferred = [];   // functions to call when set() is invoked
	
			var set = function(newState, newValues) {
				if (state == null && newState != null) {
					state = newState;
					values = newValues;
					if (deferred.length)
						defer(function() {
							for (var i = 0; i < deferred.length; i++)
								deferred[i]();
						});
				}
				return state;
			};
	
			set['then'] = function (onFulfilled, onRejected) {
				var promise2 = pinkySwear(extend);
				var callCallbacks = function() {
		    		try {
		    			var f = (state ? onFulfilled : onRejected);
		    			if (isFunction(f)) {
			   				function resolve(x) {
							    var then, cbCalled = 0;
			   					try {
					   				if (x && (isObject(x) || isFunction(x)) && isFunction(then = x['then'])) {
											if (x === promise2)
												throw new TypeError();
											then['call'](x,
												function() { if (!cbCalled++) resolve.apply(undef,arguments); } ,
												function(value){ if (!cbCalled++) promise2(false,[value]);});
					   				}
					   				else
					   					promise2(true, arguments);
			   					}
			   					catch(e) {
			   						if (!cbCalled++)
			   							promise2(false, [e]);
			   					}
			   				}
			   				resolve(f.apply(undef, values || []));
			   			}
			   			else
			   				promise2(state, values);
					}
					catch (e) {
						promise2(false, [e]);
					}
				};
				if (state != null)
					defer(callCallbacks);
				else
					deferred.push(callCallbacks);
				return promise2;
			};
	        if(extend){
	            set = extend(set);
	        }
			return set;
		};
	})( false ? [window, 'pinkySwear'] : [module, 'exports']);
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)(module), __webpack_require__(5).setImmediate, __webpack_require__(6)))

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(6).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);
	
	  immediateIds[id] = true;
	
	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });
	
	  return id;
	};
	
	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate, __webpack_require__(5).clearImmediate))

/***/ },
/* 6 */
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';
	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	
	var isArray = function isArray(arr) {
		if (typeof Array.isArray === 'function') {
			return Array.isArray(arr);
		}
	
		return toStr.call(arr) === '[object Array]';
	};
	
	var isPlainObject = function isPlainObject(obj) {
		if (!obj || toStr.call(obj) !== '[object Object]') {
			return false;
		}
	
		var hasOwnConstructor = hasOwn.call(obj, 'constructor');
		var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
		// Not own constructor property must be Object
		if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
			return false;
		}
	
		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		var key;
		for (key in obj) {/**/}
	
		return typeof key === 'undefined' || hasOwn.call(obj, key);
	};
	
	module.exports = function extend() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0],
			i = 1,
			length = arguments.length,
			deep = false;
	
		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;
			target = arguments[1] || {};
			// skip the boolean and the target
			i = 2;
		} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {
			target = {};
		}
	
		for (; i < length; ++i) {
			options = arguments[i];
			// Only deal with non-null/undefined values
			if (options != null) {
				// Extend the base object
				for (name in options) {
					src = target[name];
					copy = options[name];
	
					// Prevent never-ending loop
					if (target !== copy) {
						// Recurse if we're merging plain objects or arrays
						if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
							if (copyIsArray) {
								copyIsArray = false;
								clone = src && isArray(src) ? src : [];
							} else {
								clone = src && isPlainObject(src) ? src : {};
							}
	
							// Never move original objects, clone them
							target[name] = extend(deep, clone, copy);
	
						// Don't bring in undefined values
						} else if (typeof copy !== 'undefined') {
							target[name] = copy;
						}
					}
				}
			}
		}
	
		// Return the modified object
		return target;
	};
	


/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";
	var __cov_5jIp_6B37UzVbSEc7N$14w = (Function('return this'))();
	if (!__cov_5jIp_6B37UzVbSEc7N$14w.__coverage__) { __cov_5jIp_6B37UzVbSEc7N$14w.__coverage__ = {}; }
	__cov_5jIp_6B37UzVbSEc7N$14w = __cov_5jIp_6B37UzVbSEc7N$14w.__coverage__;
	if (!(__cov_5jIp_6B37UzVbSEc7N$14w['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js'])) {
	   __cov_5jIp_6B37UzVbSEc7N$14w['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js'] = {"path":"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"parseTokenPayload","line":12,"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":41}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":32,"column":27},"end":{"line":32,"column":44}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":25,"column":2}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":31}},"3":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":32}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"8":{"start":{"line":32,"column":0},"end":{"line":61,"column":2}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":29}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":16}},"12":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":18}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":17}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":29}},"17":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":18}},"19":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":19}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":16}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]}},"code":["/**"," * UTILS for dealing with jwt tokens."," */","","/**"," * Parse the payload out of the JWT token."," * @param  {string} token JWT Token."," * @return {object}       Parsed payload object."," */","var parseTokenPayload = function (token) {","  var parts = token.split('.');","","  // Return false if the token is invalid.","  if (parts.length <= 1) {","    return false;","  }","","  // decode the payload portion.","  var payload = window.atob(parts[1]);","","  // parse it as JSON","  payload = JSON.parse(payload);","","  return payload;","};","","/**"," * Return true if the provided token has expired."," * @param  {string}  token JWT Token"," * @return {Boolean}       True if expired."," */","module.exports.isExpired = function (token) {","  var data, exp, result, now;","","  data = parseTokenPayload(token);","","  result = true;","","  // Return true if the token does not parse properly.","  if (!data) {","    return result;","  }","","  exp = data.exp;","","  // Get the unix timestamp in seconds.","  now = new Date();","  now = now.getTime() / 1000;","","  if (!exp) {","    return result;","  }","","  // If the expiry data is still in the future.","  if (now < exp) {","    result = false;","  }","","  return result;","","};",""]};
	}
	__cov_5jIp_6B37UzVbSEc7N$14w = __cov_5jIp_6B37UzVbSEc7N$14w['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js'];
	__cov_5jIp_6B37UzVbSEc7N$14w.s['1']++;var parseTokenPayload=function parseTokenPayload(token){__cov_5jIp_6B37UzVbSEc7N$14w.f['1']++;__cov_5jIp_6B37UzVbSEc7N$14w.s['2']++;var parts=token.split('.');__cov_5jIp_6B37UzVbSEc7N$14w.s['3']++;if(parts.length<=1){__cov_5jIp_6B37UzVbSEc7N$14w.b['1'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['4']++;return false;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['1'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['5']++;var payload=window.atob(parts[1]);__cov_5jIp_6B37UzVbSEc7N$14w.s['6']++;payload=JSON.parse(payload);__cov_5jIp_6B37UzVbSEc7N$14w.s['7']++;return payload;};__cov_5jIp_6B37UzVbSEc7N$14w.s['8']++;module.exports.isExpired=function(token){__cov_5jIp_6B37UzVbSEc7N$14w.f['2']++;__cov_5jIp_6B37UzVbSEc7N$14w.s['9']++;var data,exp,result,now;__cov_5jIp_6B37UzVbSEc7N$14w.s['10']++;data=parseTokenPayload(token);__cov_5jIp_6B37UzVbSEc7N$14w.s['11']++;result=true;__cov_5jIp_6B37UzVbSEc7N$14w.s['12']++;if(!data){__cov_5jIp_6B37UzVbSEc7N$14w.b['2'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['13']++;return result;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['2'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['14']++;exp=data.exp;__cov_5jIp_6B37UzVbSEc7N$14w.s['15']++;now=new Date();__cov_5jIp_6B37UzVbSEc7N$14w.s['16']++;now=now.getTime()/1000;__cov_5jIp_6B37UzVbSEc7N$14w.s['17']++;if(!exp){__cov_5jIp_6B37UzVbSEc7N$14w.b['3'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['18']++;return result;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['3'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['19']++;if(now<exp){__cov_5jIp_6B37UzVbSEc7N$14w.b['4'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['20']++;result=false;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['4'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['21']++;return result;};


/***/ }
/******/ ])
});
;
//# sourceMappingURL=ingest.js.map
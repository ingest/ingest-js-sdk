{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ingest.js","webpack:///webpack/bootstrap 136ce31f966e26f0f4de","webpack:///./index.js","webpack:///./src/IngestAPI.js","webpack:///./src/Request.js","webpack:///./~/pinkyswear/pinkyswear.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/~/node-libs-browser/~/timers-browserify/main.js","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js","webpack:///./~/extend/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","IngestAPI","options","defaults","host","videos","videoById","uploadSign","trash","config","extend","token","setToken","Request","Promise","prototype","Error","getToken","getVideos","headers","url","getVideoById","videoId","parseId","promisify","addVideo","videoObject","JSON","stringify","error","stack","method","data","deleteVideo","getVideosCount","then","getCountResponse","bind","getTrashedVideosCount","response","parseInt","signUploadBlob","checkObject","validateUploadObject","valid","message","result","key","uploadId","partNumber","template","replace","state","value","promise","VALID_RESPONSE_CODES","async","request","XMLHttpRequest","setupListeners","makeRequest","onreadystatechange","readyStateChange","open","applyRequestHeaders","setRequestHeader","send","i","keys","Object","keysLength","length","requestComplete","processResponse","responseType","getResponseHeader","indexOf","parse","statusCode","status","requestError","readyState","isValidResponseCode","responseText","responseCode","responseCodeCount","setImmediate","process","target","isFunction","f","isObject","defer","callback","setTimeout","undef","pinkySwear","values","deferred","set","newState","newValues","onFulfilled","onRejected","promise2","callCallbacks","resolve","x","cbCalled","TypeError","apply","arguments","e","push","webpackPolyfill","deprecate","paths","children","clearImmediate","Timeout","clearFn","_id","_clearFn","nextTick","Function","slice","Array","immediateIds","nextImmediateId","window","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","fn","args","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","run","Item","fun","array","noop","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","hasOwn","hasOwnProperty","toStr","toString","isArray","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","src","copy","copyIsArray","clone","deep"],"mappings":"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","file":"ingest.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IngestAPI\"] = factory();\n\telse\n\t\troot[\"IngestAPI\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IngestAPI\"] = factory();\n\telse\n\t\troot[\"IngestAPI\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Request = __webpack_require__(2);\n\tvar Promise = __webpack_require__(3);\n\tvar extend = __webpack_require__(7);\n\t\n\t/**\n\t * IngestAPI Object\n\t * @param {object} options Options to override the default.\n\t * @param {string} options.host Override the default live host.\n\t * @param {string} options.token Auth token to use for requests.\n\t */\n\tfunction IngestAPI (options) {\n\t\n\t  this.defaults = {\n\t    'host': 'https://api.ingest.io',\n\t    'videos': '/videos',\n\t    'videoById': '/videos/<%=id%>',\n\t    'uploadSign': '/videos/<%=id%>/upload/sign',\n\t    'trash': '/videos?filter=trashed'\n\t  };\n\t\n\t  // Create a config object by extending the defaults with the pass options.\n\t  this.config = extend(true, {}, this.defaults, options);\n\t\n\t  if (this.config.token) {\n\t    // Store the token for future use.\n\t    this.setToken(this.config.token);\n\t  }\n\t\n\t}\n\t\n\t/**\n\t * Set the auth token to use.\n\t * @param   {String}        token Auth token to use.\n\t */\n\tIngestAPI.prototype.setToken = function (token) {\n\t\n\t  // Make sure a valid value is passed.\n\t  if (!token || typeof token !== 'string') {\n\t    throw new Error('IngestAPI requires an authentication token passed as a string.');\n\t  }\n\t\n\t  this.token = token;\n\t\n\t};\n\t\n\t/**\n\t * Return the current auth token.\n\t * @return  {String}        Current auth token.\n\t */\n\tIngestAPI.prototype.getToken = function () {\n\t\n\t  if (!this.token) {\n\t    throw new Error('IngestAPI requires a token to be set.');\n\t  }\n\t\n\t  return this.token;\n\t\n\t};\n\t\n\t/**\n\t * Return a list of videos for the current user and network.\n\t * @param {object} headers Javascript object representing headers to apply to the call.\n\t * @return  {JSON}          A JSON object representing the videos.\n\t */\n\tIngestAPI.prototype.getVideos = function (headers) {\n\t\n\t  return new Request({\n\t    url: this.config.host + this.config.videos,\n\t    token: this.getToken(),\n\t    headers: headers\n\t  });\n\t\n\t};\n\t\n\t/**\n\t * Return a video match the supplied id.\n\t * @param   {String}       videoId ID for the requested video.\n\t * @return  {JSON}         JSON object representing the requested video.\n\t */\n\tIngestAPI.prototype.getVideoById = function (videoId) {\n\t\n\t  if (!videoId || typeof videoId !== 'string') {\n\t    // Wrap the error in a promise so the user is still catching the errors.\n\t    return this.promisify(false,\n\t      'IngestAPI getVideoById requires a valid videoId as a string.');\n\t  }\n\t\n\t  return new Request({\n\t    url: this.parseId(this.config.host + this.config.videoById, videoId),\n\t    token: this.getToken()\n\t  });\n\t\n\t};\n\t\n\t/**\n\t * Add a new video.\n\t * @param   {object}  videoObject An object representing the video to add.\n\t */\n\tIngestAPI.prototype.addVideo = function (videoObject) {\n\t\n\t  // Validate the object being passed in.\n\t  if (!videoObject || typeof videoObject !== 'object') {\n\t    // Wrap the error in a promise.\n\t    return this.promisify(false,\n\t      'IngestAPI addVideo requires a video object.');\n\t  }\n\t\n\t  // Parse the JSON\n\t  try {\n\t    videoObject = JSON.stringify(videoObject);\n\t  } catch (error) {\n\t    return this.promisify(false,\n\t      'IngestAPI addVideo failed to parse videoObject to JSON. ' + error.stack);\n\t  }\n\t\n\t  // Return the promise from the request.\n\t  return new Request({\n\t    url: this.config.host + this.config.videos,\n\t    token: this.getToken(),\n\t    method: 'POST',\n\t    data: videoObject\n\t  });\n\t\n\t};\n\t\n\t/**\n\t * Delete a video.\n\t * @param  {string}   videoId   ID for the video to delete.\n\t */\n\tIngestAPI.prototype.deleteVideo = function (videoId) {\n\t\n\t  if (!videoId || typeof videoId !== 'string') {\n\t    return this.promisify(false,\n\t      'IngestAPI deleteVideo requires a video ID passed as a string.');\n\t  }\n\t\n\t  return new Request({\n\t    url: this.parseId(this.config.host + this.config.videoById, videoId),\n\t    token: this.getToken(),\n\t    method: 'DELETE'\n\t  });\n\t\n\t};\n\t\n\t/**\n\t * Get the total count of videos.\n\t * @return {number} The number of videos in the current network.\n\t */\n\tIngestAPI.prototype.getVideosCount = function () {\n\t\n\t  return new Request({\n\t    url: this.config.host + this.config.videos,\n\t    token: this.getToken(),\n\t    method: 'HEAD'\n\t  }).then(this.getCountResponse.bind(this));\n\t\n\t};\n\t\n\t/**\n\t * Get a count of the current videos in the trash.\n\t * @return {Promise} Promise/A+ spec which resolves with the trashed video count.\n\t */\n\tIngestAPI.prototype.getTrashedVideosCount = function () {\n\t\n\t  return new Request({\n\t    url: this.config.host + this.config.trash,\n\t    token: this.getToken(),\n\t    method: 'HEAD'\n\t  }).then(this.getCountResponse.bind(this));\n\t\n\t};\n\t\n\t/**\n\t * Handle the response from the retrieving video counts.\n\t * @param  {object} response  Request response object.\n\t * @return {number}           The resource count from the response.\n\t */\n\tIngestAPI.prototype.getCountResponse = function (response) {\n\t\n\t  return parseInt(response.headers('Resource-Count'), 10);\n\t\n\t};\n\t\n\t/**\n\t * Make a request and sign the blob to be uploaded.\n\t * @param  {object}   data            File data used to sign the upload.\n\t * @param  {string}   data.id         The file id. // TODO Better description?\n\t * @param  {string}   data.key        The key associated with the file on AWS. // TODO Better Description?\n\t * @param  {string}   data.uploadId   Upload id // TODO better description.\n\t * @return {Promise}                  Promise/A+ spec which resolves with the signed token object.\n\t */\n\tIngestAPI.prototype.signUploadBlob = function (data) {\n\t\n\t  var checkObject = this.validateUploadObject(data);\n\t\n\t  // Make sure all the proper properties have been passed in.\n\t  if (!checkObject.valid) {\n\t    return this.promisify(false, checkObject.message);\n\t  }\n\t\n\t  return new Request({\n\t    url: this.parseId(this.config.host + this.config.uploadSign, data.id),\n\t    token: this.getToken(),\n\t    method: 'POST'\n\t  });\n\t\n\t};\n\t\n\t/**\n\t * Validate the object supplying the upload data.\n\t * @param  {object}   data            File data used to sign the upload.\n\t * @param  {string}   data.key        The key associated with the file on AWS. // TODO Better Description?\n\t * @param  {string}   data.uploadId   Upload id // TODO better description.\n\t * @return {boolean}  Boolean representing weather or not the object is valid.\n\t **/\n\tIngestAPI.prototype.validateUploadObject = function (data) {\n\t\n\t  var result = {\n\t    valid: true,\n\t    message: ''\n\t  };\n\t\n\t  if (!data || typeof data !== 'object') {\n\t    result.valid = false;\n\t    result.message = 'The passed value was not an object.';\n\t  }\n\t\n\t  if (!data.key || typeof data.key !== 'string') {\n\t    result.valid = false;\n\t    result.message = 'Missing or invalid property : key.';\n\t  }\n\t\n\t  if (!data.uploadId || typeof data.uploadId !== 'string') {\n\t    result.valid = false;\n\t    result.message = 'Missing or invalid property : uploadId';\n\t  }\n\t\n\t  if (!data.partNumber || typeof data.partNumber !== 'number') {\n\t    result.valid = false;\n\t    result.message = 'Missing or invalid property : partNumber';\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\t/**\n\t * Replace the ID in the template string with the supplied id.\n\t * @param  {string}     template    Template for the url.\n\t * @param  {string}     id          Video ID to inject into the template.\n\t * @return {string}                 Parsed string.\n\t */\n\tIngestAPI.prototype.parseId = function (template, id) {\n\t\n\t  var result = template.replace('<%=id%>', id);\n\t\n\t  return result;\n\t\n\t};\n\t\n\t/**\n\t * Wrapper function to wrap a value in either a reject or resolve.\n\t * @param  {boolean} state Rejection or Approval.\n\t * @param  {*}       value Value to pass back to the promise.\n\t * @return {Promise}       Promise/A+ spec promise.\n\t */\n\tIngestAPI.prototype.promisify = function (state, value) {\n\t\n\t  var promise = Promise();\n\t\n\t  promise(state, [value]);\n\t\n\t  return promise;\n\t\n\t};\n\t\n\tmodule.exports = IngestAPI;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Promise = __webpack_require__(3);\n\tvar extend = __webpack_require__(7);\n\t\n\tvar VALID_RESPONSE_CODES = [200, 201, 202, 204];\n\t\n\t/**\n\t * A wrapper around the XMLHttpRequest object.\n\t * @param {object}  options         Options for the request.\n\t * @param {boolean} options.async   Whether to perform the request asynchronously\n\t * @param {string}  options.method  REST verb to use for the request.\n\t * @param {string}  options.url     URL for the request.\n\t */\n\tvar Request = function (options) {\n\t\n\t  this.defaults = {\n\t    async: true,\n\t    method: 'GET'\n\t  };\n\t\n\t  this.promise = Promise();\n\t\n\t  // Create the XHR object for this request.\n\t  this.request = new XMLHttpRequest();\n\t\n\t  // Set up event listeners for this request.\n\t  this.setupListeners();\n\t\n\t  // Todo, merge some defaults with this.\n\t  this.options = extend(true, this.defaults, options);\n\t\n\t  // Make sure a url is passed before attempting to make the request.\n\t  if (!this.options.url) {\n\t    this.promise(false, ['Request Error : a url is required to make the request.']);\n\t    return this.promise;\n\t  }\n\t\n\t  // Make the actual request.\n\t  this.makeRequest();\n\t\n\t  // Return a promise\n\t  return this.promise;\n\t\n\t};\n\t\n\t/**\n\t * Add event listeners to the XMLHttpRequest object.\n\t */\n\tRequest.prototype.setupListeners = function () {\n\t  this.request.onreadystatechange = this.readyStateChange.bind(this);\n\t};\n\t\n\t/**\n\t * Execute the open and send of the XMLHttpRequest\n\t */\n\tRequest.prototype.makeRequest = function () {\n\t\n\t  this.request.open(this.options.method, this.options.url, this.options.async);\n\t\n\t  if (this.options.headers) {\n\t    this.applyRequestHeaders(this.options.headers);\n\t  }\n\t\n\t  // Make the token optional.\n\t  if (this.options.token) {\n\t    this.request.setRequestHeader('Authorization', this.options.token);\n\t  }\n\t\n\t  // If there is data then we need to pass that along with the request.\n\t  if (this.options.data) {\n\t    this.request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n\t    this.request.send(this.options.data);\n\t  } else {\n\t    this.request.send();\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Apply any supplied headers to the request object.\n\t * @param  {object} headers Array of headers to apply to the request object.\n\t */\n\tRequest.prototype.applyRequestHeaders = function (headers) {\n\t\n\t  var key, i;\n\t  var keys = Object.keys(headers);\n\t  var keysLength = keys.length;\n\t\n\t  // Loop through and add the keys to the requestHeaders.\n\t  for (i = 0; i < keysLength; i++) {\n\t    key = keys[i];\n\t    this.request.setRequestHeader(key, headers[key]);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Handle the completion of the request and fulfill the promise.\n\t * @param  {String} Response test of the request.\n\t */\n\tRequest.prototype.requestComplete = function (response) {\n\t\n\t  // Process the result.\n\t  this.response = this.processResponse(response);\n\t\n\t  // Either resolve or reject the promise.\n\t  this.promise(!this.response.data.error, [this.response]);\n\t\n\t};\n\t\n\t/**\n\t * Process the response and parse certain content types.\n\t * @param  {*}  response  Response data from request.\n\t * @return {*}            Processed response data.\n\t */\n\tRequest.prototype.processResponse = function (response) {\n\t  var responseType = this.request.getResponseHeader('Content-Type');\n\t  var result = response;\n\t\n\t  // Parse JSON if the result is JSON.\n\t  if (responseType && responseType.indexOf('application/json') !== -1) {\n\t    try {\n\t      result = JSON.parse(response);\n\t    } catch (error) {\n\t      result = {\n\t        error: 'JSON parsing failed. ' + error.stack\n\t      };\n\t    }\n\t  }\n\t\n\t  return {\n\t    data: result,\n\t    headers: this.request.getResponseHeader.bind(this.request),\n\t    statusCode: this.request.status\n\t  };\n\t\n\t};\n\t\n\t/**\n\t * Resolve the promise.\n\t * @param  {String} error   Error message.\n\t */\n\tRequest.prototype.requestError = function (error) {\n\t  this.promise(false, [error]);\n\t};\n\t\n\t/**\n\t * Handle ready state change events.\n\t */\n\tRequest.prototype.readyStateChange = function () {\n\t\n\t  // Request is complete.\n\t  if (this.request.readyState === 4) {\n\t\n\t    // Check if the final response code is valid.\n\t    if (this.isValidResponseCode(this.request.status)) {\n\t      this.requestComplete(this.request.responseText);\n\t    } else {\n\t      this.requestError('Invalid response code.');\n\t    }\n\t\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Validate the current response code to see if the request was a success.\n\t * @param  {String}  responseCode Response Code.\n\t * @return {Boolean}              Should this be treated as a successful response code.\n\t */\n\tRequest.prototype.isValidResponseCode = function (responseCode) {\n\t\n\t  var result = false,\n\t    responseCodeCount = VALID_RESPONSE_CODES.length,\n\t    i;\n\t\n\t  // Check if the supplied code is in our list of valid codes.\n\t  for (i = 0; i < responseCodeCount; i++) {\n\t\n\t    if (responseCode === VALID_RESPONSE_CODES[i]) {\n\t      result = true;\n\t      break;\n\t    }\n\t\n\t  }\n\t\n\t  return result;\n\t\n\t};\n\t\n\tmodule.exports = Request;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module, setImmediate, process) {/*\n\t * PinkySwear.js 2.2.2 - Minimalistic implementation of the Promises/A+ spec\n\t * \n\t * Public Domain. Use, modify and distribute it any way you like. No attribution required.\n\t *\n\t * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\t *\n\t * PinkySwear is a very small implementation of the Promises/A+ specification. After compilation with the\n\t * Google Closure Compiler and gzipping it weighs less than 500 bytes. It is based on the implementation for \n\t * Minified.js and should be perfect for embedding. \n\t *\n\t *\n\t * PinkySwear has just three functions.\n\t *\n\t * To create a new promise in pending state, call pinkySwear():\n\t *         var promise = pinkySwear();\n\t *\n\t * The returned object has a Promises/A+ compatible then() implementation:\n\t *          promise.then(function(value) { alert(\"Success!\"); }, function(value) { alert(\"Failure!\"); });\n\t *\n\t *\n\t * The promise returned by pinkySwear() is a function. To fulfill the promise, call the function with true as first argument and\n\t * an optional array of values to pass to the then() handler. By putting more than one value in the array, you can pass more than one\n\t * value to the then() handlers. Here an example to fulfill a promsise, this time with only one argument: \n\t *         promise(true, [42]);\n\t *\n\t * When the promise has been rejected, call it with false. Again, there may be more than one argument for the then() handler:\n\t *         promise(true, [6, 6, 6]);\n\t *         \n\t * You can obtain the promise's current state by calling the function without arguments. It will be true if fulfilled,\n\t * false if rejected, and otherwise undefined.\n\t * \t\t   var state = promise(); \n\t * \n\t * https://github.com/timjansen/PinkySwear.js\n\t */\n\t(function(target) {\n\t\tvar undef;\n\t\n\t\tfunction isFunction(f) {\n\t\t\treturn typeof f == 'function';\n\t\t}\n\t\tfunction isObject(f) {\n\t\t\treturn typeof f == 'object';\n\t\t}\n\t\tfunction defer(callback) {\n\t\t\tif (typeof setImmediate != 'undefined')\n\t\t\t\tsetImmediate(callback);\n\t\t\telse if (typeof process != 'undefined' && process['nextTick'])\n\t\t\t\tprocess['nextTick'](callback);\n\t\t\telse\n\t\t\t\tsetTimeout(callback, 0);\n\t\t}\n\t\n\t\ttarget[0][target[1]] = function pinkySwear(extend) {\n\t\t\tvar state;           // undefined/null = pending, true = fulfilled, false = rejected\n\t\t\tvar values = [];     // an array of values as arguments for the then() handlers\n\t\t\tvar deferred = [];   // functions to call when set() is invoked\n\t\n\t\t\tvar set = function(newState, newValues) {\n\t\t\t\tif (state == null && newState != null) {\n\t\t\t\t\tstate = newState;\n\t\t\t\t\tvalues = newValues;\n\t\t\t\t\tif (deferred.length)\n\t\t\t\t\t\tdefer(function() {\n\t\t\t\t\t\t\tfor (var i = 0; i < deferred.length; i++)\n\t\t\t\t\t\t\t\tdeferred[i]();\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn state;\n\t\t\t};\n\t\n\t\t\tset['then'] = function (onFulfilled, onRejected) {\n\t\t\t\tvar promise2 = pinkySwear(extend);\n\t\t\t\tvar callCallbacks = function() {\n\t\t    \t\ttry {\n\t\t    \t\t\tvar f = (state ? onFulfilled : onRejected);\n\t\t    \t\t\tif (isFunction(f)) {\n\t\t\t   \t\t\t\tfunction resolve(x) {\n\t\t\t\t\t\t\t    var then, cbCalled = 0;\n\t\t\t   \t\t\t\t\ttry {\n\t\t\t\t\t   \t\t\t\tif (x && (isObject(x) || isFunction(x)) && isFunction(then = x['then'])) {\n\t\t\t\t\t\t\t\t\t\t\tif (x === promise2)\n\t\t\t\t\t\t\t\t\t\t\t\tthrow new TypeError();\n\t\t\t\t\t\t\t\t\t\t\tthen['call'](x,\n\t\t\t\t\t\t\t\t\t\t\t\tfunction() { if (!cbCalled++) resolve.apply(undef,arguments); } ,\n\t\t\t\t\t\t\t\t\t\t\t\tfunction(value){ if (!cbCalled++) promise2(false,[value]);});\n\t\t\t\t\t   \t\t\t\t}\n\t\t\t\t\t   \t\t\t\telse\n\t\t\t\t\t   \t\t\t\t\tpromise2(true, arguments);\n\t\t\t   \t\t\t\t\t}\n\t\t\t   \t\t\t\t\tcatch(e) {\n\t\t\t   \t\t\t\t\t\tif (!cbCalled++)\n\t\t\t   \t\t\t\t\t\t\tpromise2(false, [e]);\n\t\t\t   \t\t\t\t\t}\n\t\t\t   \t\t\t\t}\n\t\t\t   \t\t\t\tresolve(f.apply(undef, values || []));\n\t\t\t   \t\t\t}\n\t\t\t   \t\t\telse\n\t\t\t   \t\t\t\tpromise2(state, values);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tpromise2(false, [e]);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (state != null)\n\t\t\t\t\tdefer(callCallbacks);\n\t\t\t\telse\n\t\t\t\t\tdeferred.push(callCallbacks);\n\t\t\t\treturn promise2;\n\t\t\t};\n\t        if(extend){\n\t            set = extend(set);\n\t        }\n\t\t\treturn set;\n\t\t};\n\t})( false ? [window, 'pinkySwear'] : [module, 'exports']);\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)(module), __webpack_require__(5).setImmediate, __webpack_require__(6)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(6).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate, __webpack_require__(5).clearImmediate))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\t\n\tvar isArray = function isArray(arr) {\n\t\tif (typeof Array.isArray === 'function') {\n\t\t\treturn Array.isArray(arr);\n\t\t}\n\t\n\t\treturn toStr.call(arr) === '[object Array]';\n\t};\n\t\n\tvar isPlainObject = function isPlainObject(obj) {\n\t\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\t\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t\t// Not own constructor property must be Object\n\t\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\t\tvar key;\n\t\tfor (key in obj) {/**/}\n\t\n\t\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n\t};\n\t\n\tmodule.exports = function extend() {\n\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\ttarget = arguments[0],\n\t\t\ti = 1,\n\t\t\tlength = arguments.length,\n\t\t\tdeep = false;\n\t\n\t\t// Handle a deep copy situation\n\t\tif (typeof target === 'boolean') {\n\t\t\tdeep = target;\n\t\t\ttarget = arguments[1] || {};\n\t\t\t// skip the boolean and the target\n\t\t\ti = 2;\n\t\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\t\ttarget = {};\n\t\t}\n\t\n\t\tfor (; i < length; ++i) {\n\t\t\toptions = arguments[i];\n\t\t\t// Only deal with non-null/undefined values\n\t\t\tif (options != null) {\n\t\t\t\t// Extend the base object\n\t\t\t\tfor (name in options) {\n\t\t\t\t\tsrc = target[name];\n\t\t\t\t\tcopy = options[name];\n\t\n\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\tif (target !== copy) {\n\t\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\t\n\t\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the modified object\n\t\treturn target;\n\t};\n\t\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** ingest.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 136ce31f966e26f0f4de\n **/","module.exports = require('./src/IngestAPI.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","var Request = require('./Request.js');\nvar Promise = require('pinkyswear');\nvar extend = require('extend');\n\n/**\n * IngestAPI Object\n * @param {object} options Options to override the default.\n * @param {string} options.host Override the default live host.\n * @param {string} options.token Auth token to use for requests.\n */\nfunction IngestAPI (options) {\n\n  this.defaults = {\n    'host': 'https://api.ingest.io',\n    'videos': '/videos',\n    'videoById': '/videos/<%=id%>',\n    'uploadSign': '/videos/<%=id%>/upload/sign',\n    'trash': '/videos?filter=trashed'\n  };\n\n  // Create a config object by extending the defaults with the pass options.\n  this.config = extend(true, {}, this.defaults, options);\n\n  if (this.config.token) {\n    // Store the token for future use.\n    this.setToken(this.config.token);\n  }\n\n}\n\n/**\n * Set the auth token to use.\n * @param   {String}        token Auth token to use.\n */\nIngestAPI.prototype.setToken = function (token) {\n\n  // Make sure a valid value is passed.\n  if (!token || typeof token !== 'string') {\n    throw new Error('IngestAPI requires an authentication token passed as a string.');\n  }\n\n  this.token = token;\n\n};\n\n/**\n * Return the current auth token.\n * @return  {String}        Current auth token.\n */\nIngestAPI.prototype.getToken = function () {\n\n  if (!this.token) {\n    throw new Error('IngestAPI requires a token to be set.');\n  }\n\n  return this.token;\n\n};\n\n/**\n * Return a list of videos for the current user and network.\n * @param {object} headers Javascript object representing headers to apply to the call.\n * @return  {JSON}          A JSON object representing the videos.\n */\nIngestAPI.prototype.getVideos = function (headers) {\n\n  return new Request({\n    url: this.config.host + this.config.videos,\n    token: this.getToken(),\n    headers: headers\n  });\n\n};\n\n/**\n * Return a video match the supplied id.\n * @param   {String}       videoId ID for the requested video.\n * @return  {JSON}         JSON object representing the requested video.\n */\nIngestAPI.prototype.getVideoById = function (videoId) {\n\n  if (!videoId || typeof videoId !== 'string') {\n    // Wrap the error in a promise so the user is still catching the errors.\n    return this.promisify(false,\n      'IngestAPI getVideoById requires a valid videoId as a string.');\n  }\n\n  return new Request({\n    url: this.parseId(this.config.host + this.config.videoById, videoId),\n    token: this.getToken()\n  });\n\n};\n\n/**\n * Add a new video.\n * @param   {object}  videoObject An object representing the video to add.\n */\nIngestAPI.prototype.addVideo = function (videoObject) {\n\n  // Validate the object being passed in.\n  if (!videoObject || typeof videoObject !== 'object') {\n    // Wrap the error in a promise.\n    return this.promisify(false,\n      'IngestAPI addVideo requires a video object.');\n  }\n\n  // Parse the JSON\n  try {\n    videoObject = JSON.stringify(videoObject);\n  } catch (error) {\n    return this.promisify(false,\n      'IngestAPI addVideo failed to parse videoObject to JSON. ' + error.stack);\n  }\n\n  // Return the promise from the request.\n  return new Request({\n    url: this.config.host + this.config.videos,\n    token: this.getToken(),\n    method: 'POST',\n    data: videoObject\n  });\n\n};\n\n/**\n * Delete a video.\n * @param  {string}   videoId   ID for the video to delete.\n */\nIngestAPI.prototype.deleteVideo = function (videoId) {\n\n  if (!videoId || typeof videoId !== 'string') {\n    return this.promisify(false,\n      'IngestAPI deleteVideo requires a video ID passed as a string.');\n  }\n\n  return new Request({\n    url: this.parseId(this.config.host + this.config.videoById, videoId),\n    token: this.getToken(),\n    method: 'DELETE'\n  });\n\n};\n\n/**\n * Get the total count of videos.\n * @return {number} The number of videos in the current network.\n */\nIngestAPI.prototype.getVideosCount = function () {\n\n  return new Request({\n    url: this.config.host + this.config.videos,\n    token: this.getToken(),\n    method: 'HEAD'\n  }).then(this.getCountResponse.bind(this));\n\n};\n\n/**\n * Get a count of the current videos in the trash.\n * @return {Promise} Promise/A+ spec which resolves with the trashed video count.\n */\nIngestAPI.prototype.getTrashedVideosCount = function () {\n\n  return new Request({\n    url: this.config.host + this.config.trash,\n    token: this.getToken(),\n    method: 'HEAD'\n  }).then(this.getCountResponse.bind(this));\n\n};\n\n/**\n * Handle the response from the retrieving video counts.\n * @param  {object} response  Request response object.\n * @return {number}           The resource count from the response.\n */\nIngestAPI.prototype.getCountResponse = function (response) {\n\n  return parseInt(response.headers('Resource-Count'), 10);\n\n};\n\n/**\n * Make a request and sign the blob to be uploaded.\n * @param  {object}   data            File data used to sign the upload.\n * @param  {string}   data.id         The file id. // TODO Better description?\n * @param  {string}   data.key        The key associated with the file on AWS. // TODO Better Description?\n * @param  {string}   data.uploadId   Upload id // TODO better description.\n * @return {Promise}                  Promise/A+ spec which resolves with the signed token object.\n */\nIngestAPI.prototype.signUploadBlob = function (data) {\n\n  var checkObject = this.validateUploadObject(data);\n\n  // Make sure all the proper properties have been passed in.\n  if (!checkObject.valid) {\n    return this.promisify(false, checkObject.message);\n  }\n\n  return new Request({\n    url: this.parseId(this.config.host + this.config.uploadSign, data.id),\n    token: this.getToken(),\n    method: 'POST'\n  });\n\n};\n\n/**\n * Validate the object supplying the upload data.\n * @param  {object}   data            File data used to sign the upload.\n * @param  {string}   data.key        The key associated with the file on AWS. // TODO Better Description?\n * @param  {string}   data.uploadId   Upload id // TODO better description.\n * @return {boolean}  Boolean representing weather or not the object is valid.\n **/\nIngestAPI.prototype.validateUploadObject = function (data) {\n\n  var result = {\n    valid: true,\n    message: ''\n  };\n\n  if (!data || typeof data !== 'object') {\n    result.valid = false;\n    result.message = 'The passed value was not an object.';\n  }\n\n  if (!data.key || typeof data.key !== 'string') {\n    result.valid = false;\n    result.message = 'Missing or invalid property : key.';\n  }\n\n  if (!data.uploadId || typeof data.uploadId !== 'string') {\n    result.valid = false;\n    result.message = 'Missing or invalid property : uploadId';\n  }\n\n  if (!data.partNumber || typeof data.partNumber !== 'number') {\n    result.valid = false;\n    result.message = 'Missing or invalid property : partNumber';\n  }\n\n  return result;\n};\n\n/**\n * Replace the ID in the template string with the supplied id.\n * @param  {string}     template    Template for the url.\n * @param  {string}     id          Video ID to inject into the template.\n * @return {string}                 Parsed string.\n */\nIngestAPI.prototype.parseId = function (template, id) {\n\n  var result = template.replace('<%=id%>', id);\n\n  return result;\n\n};\n\n/**\n * Wrapper function to wrap a value in either a reject or resolve.\n * @param  {boolean} state Rejection or Approval.\n * @param  {*}       value Value to pass back to the promise.\n * @return {Promise}       Promise/A+ spec promise.\n */\nIngestAPI.prototype.promisify = function (state, value) {\n\n  var promise = Promise();\n\n  promise(state, [value]);\n\n  return promise;\n\n};\n\nmodule.exports = IngestAPI;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IngestAPI.js\n ** module id = 1\n ** module chunks = 0\n **/","var Promise = require('pinkyswear');\nvar extend = require('extend');\n\nvar VALID_RESPONSE_CODES = [200, 201, 202, 204];\n\n/**\n * A wrapper around the XMLHttpRequest object.\n * @param {object}  options         Options for the request.\n * @param {boolean} options.async   Whether to perform the request asynchronously\n * @param {string}  options.method  REST verb to use for the request.\n * @param {string}  options.url     URL for the request.\n */\nvar Request = function (options) {\n\n  this.defaults = {\n    async: true,\n    method: 'GET'\n  };\n\n  this.promise = Promise();\n\n  // Create the XHR object for this request.\n  this.request = new XMLHttpRequest();\n\n  // Set up event listeners for this request.\n  this.setupListeners();\n\n  // Todo, merge some defaults with this.\n  this.options = extend(true, this.defaults, options);\n\n  // Make sure a url is passed before attempting to make the request.\n  if (!this.options.url) {\n    this.promise(false, ['Request Error : a url is required to make the request.']);\n    return this.promise;\n  }\n\n  // Make the actual request.\n  this.makeRequest();\n\n  // Return a promise\n  return this.promise;\n\n};\n\n/**\n * Add event listeners to the XMLHttpRequest object.\n */\nRequest.prototype.setupListeners = function () {\n  this.request.onreadystatechange = this.readyStateChange.bind(this);\n};\n\n/**\n * Execute the open and send of the XMLHttpRequest\n */\nRequest.prototype.makeRequest = function () {\n\n  this.request.open(this.options.method, this.options.url, this.options.async);\n\n  if (this.options.headers) {\n    this.applyRequestHeaders(this.options.headers);\n  }\n\n  // Make the token optional.\n  if (this.options.token) {\n    this.request.setRequestHeader('Authorization', this.options.token);\n  }\n\n  // If there is data then we need to pass that along with the request.\n  if (this.options.data) {\n    this.request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n    this.request.send(this.options.data);\n  } else {\n    this.request.send();\n  }\n\n};\n\n/**\n * Apply any supplied headers to the request object.\n * @param  {object} headers Array of headers to apply to the request object.\n */\nRequest.prototype.applyRequestHeaders = function (headers) {\n\n  var key, i;\n  var keys = Object.keys(headers);\n  var keysLength = keys.length;\n\n  // Loop through and add the keys to the requestHeaders.\n  for (i = 0; i < keysLength; i++) {\n    key = keys[i];\n    this.request.setRequestHeader(key, headers[key]);\n  }\n\n};\n\n/**\n * Handle the completion of the request and fulfill the promise.\n * @param  {String} Response test of the request.\n */\nRequest.prototype.requestComplete = function (response) {\n\n  // Process the result.\n  this.response = this.processResponse(response);\n\n  // Either resolve or reject the promise.\n  this.promise(!this.response.data.error, [this.response]);\n\n};\n\n/**\n * Process the response and parse certain content types.\n * @param  {*}  response  Response data from request.\n * @return {*}            Processed response data.\n */\nRequest.prototype.processResponse = function (response) {\n  var responseType = this.request.getResponseHeader('Content-Type');\n  var result = response;\n\n  // Parse JSON if the result is JSON.\n  if (responseType && responseType.indexOf('application/json') !== -1) {\n    try {\n      result = JSON.parse(response);\n    } catch (error) {\n      result = {\n        error: 'JSON parsing failed. ' + error.stack\n      };\n    }\n  }\n\n  return {\n    data: result,\n    headers: this.request.getResponseHeader.bind(this.request),\n    statusCode: this.request.status\n  };\n\n};\n\n/**\n * Resolve the promise.\n * @param  {String} error   Error message.\n */\nRequest.prototype.requestError = function (error) {\n  this.promise(false, [error]);\n};\n\n/**\n * Handle ready state change events.\n */\nRequest.prototype.readyStateChange = function () {\n\n  // Request is complete.\n  if (this.request.readyState === 4) {\n\n    // Check if the final response code is valid.\n    if (this.isValidResponseCode(this.request.status)) {\n      this.requestComplete(this.request.responseText);\n    } else {\n      this.requestError('Invalid response code.');\n    }\n\n  }\n\n};\n\n/**\n * Validate the current response code to see if the request was a success.\n * @param  {String}  responseCode Response Code.\n * @return {Boolean}              Should this be treated as a successful response code.\n */\nRequest.prototype.isValidResponseCode = function (responseCode) {\n\n  var result = false,\n    responseCodeCount = VALID_RESPONSE_CODES.length,\n    i;\n\n  // Check if the supplied code is in our list of valid codes.\n  for (i = 0; i < responseCodeCount; i++) {\n\n    if (responseCode === VALID_RESPONSE_CODES[i]) {\n      result = true;\n      break;\n    }\n\n  }\n\n  return result;\n\n};\n\nmodule.exports = Request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Request.js\n ** module id = 2\n ** module chunks = 0\n **/","/*\n * PinkySwear.js 2.2.2 - Minimalistic implementation of the Promises/A+ spec\n * \n * Public Domain. Use, modify and distribute it any way you like. No attribution required.\n *\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n *\n * PinkySwear is a very small implementation of the Promises/A+ specification. After compilation with the\n * Google Closure Compiler and gzipping it weighs less than 500 bytes. It is based on the implementation for \n * Minified.js and should be perfect for embedding. \n *\n *\n * PinkySwear has just three functions.\n *\n * To create a new promise in pending state, call pinkySwear():\n *         var promise = pinkySwear();\n *\n * The returned object has a Promises/A+ compatible then() implementation:\n *          promise.then(function(value) { alert(\"Success!\"); }, function(value) { alert(\"Failure!\"); });\n *\n *\n * The promise returned by pinkySwear() is a function. To fulfill the promise, call the function with true as first argument and\n * an optional array of values to pass to the then() handler. By putting more than one value in the array, you can pass more than one\n * value to the then() handlers. Here an example to fulfill a promsise, this time with only one argument: \n *         promise(true, [42]);\n *\n * When the promise has been rejected, call it with false. Again, there may be more than one argument for the then() handler:\n *         promise(true, [6, 6, 6]);\n *         \n * You can obtain the promise's current state by calling the function without arguments. It will be true if fulfilled,\n * false if rejected, and otherwise undefined.\n * \t\t   var state = promise(); \n * \n * https://github.com/timjansen/PinkySwear.js\n */\n(function(target) {\n\tvar undef;\n\n\tfunction isFunction(f) {\n\t\treturn typeof f == 'function';\n\t}\n\tfunction isObject(f) {\n\t\treturn typeof f == 'object';\n\t}\n\tfunction defer(callback) {\n\t\tif (typeof setImmediate != 'undefined')\n\t\t\tsetImmediate(callback);\n\t\telse if (typeof process != 'undefined' && process['nextTick'])\n\t\t\tprocess['nextTick'](callback);\n\t\telse\n\t\t\tsetTimeout(callback, 0);\n\t}\n\n\ttarget[0][target[1]] = function pinkySwear(extend) {\n\t\tvar state;           // undefined/null = pending, true = fulfilled, false = rejected\n\t\tvar values = [];     // an array of values as arguments for the then() handlers\n\t\tvar deferred = [];   // functions to call when set() is invoked\n\n\t\tvar set = function(newState, newValues) {\n\t\t\tif (state == null && newState != null) {\n\t\t\t\tstate = newState;\n\t\t\t\tvalues = newValues;\n\t\t\t\tif (deferred.length)\n\t\t\t\t\tdefer(function() {\n\t\t\t\t\t\tfor (var i = 0; i < deferred.length; i++)\n\t\t\t\t\t\t\tdeferred[i]();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn state;\n\t\t};\n\n\t\tset['then'] = function (onFulfilled, onRejected) {\n\t\t\tvar promise2 = pinkySwear(extend);\n\t\t\tvar callCallbacks = function() {\n\t    \t\ttry {\n\t    \t\t\tvar f = (state ? onFulfilled : onRejected);\n\t    \t\t\tif (isFunction(f)) {\n\t\t   \t\t\t\tfunction resolve(x) {\n\t\t\t\t\t\t    var then, cbCalled = 0;\n\t\t   \t\t\t\t\ttry {\n\t\t\t\t   \t\t\t\tif (x && (isObject(x) || isFunction(x)) && isFunction(then = x['then'])) {\n\t\t\t\t\t\t\t\t\t\tif (x === promise2)\n\t\t\t\t\t\t\t\t\t\t\tthrow new TypeError();\n\t\t\t\t\t\t\t\t\t\tthen['call'](x,\n\t\t\t\t\t\t\t\t\t\t\tfunction() { if (!cbCalled++) resolve.apply(undef,arguments); } ,\n\t\t\t\t\t\t\t\t\t\t\tfunction(value){ if (!cbCalled++) promise2(false,[value]);});\n\t\t\t\t   \t\t\t\t}\n\t\t\t\t   \t\t\t\telse\n\t\t\t\t   \t\t\t\t\tpromise2(true, arguments);\n\t\t   \t\t\t\t\t}\n\t\t   \t\t\t\t\tcatch(e) {\n\t\t   \t\t\t\t\t\tif (!cbCalled++)\n\t\t   \t\t\t\t\t\t\tpromise2(false, [e]);\n\t\t   \t\t\t\t\t}\n\t\t   \t\t\t\t}\n\t\t   \t\t\t\tresolve(f.apply(undef, values || []));\n\t\t   \t\t\t}\n\t\t   \t\t\telse\n\t\t   \t\t\t\tpromise2(state, values);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tpromise2(false, [e]);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (state != null)\n\t\t\t\tdefer(callCallbacks);\n\t\t\telse\n\t\t\t\tdeferred.push(callCallbacks);\n\t\t\treturn promise2;\n\t\t};\n        if(extend){\n            set = extend(set);\n        }\n\t\treturn set;\n\t};\n})(typeof module == 'undefined' ? [window, 'pinkySwear'] : [module, 'exports']);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pinkyswear/pinkyswear.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 4\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 5\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extend/index.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ca80a57c37f4f4ade631","webpack:///./index.js","webpack:///./src/IngestAPI.js","webpack:///./src/Request.js","webpack:///./~/pinkyswear/pinkyswear.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/process/browser.js","webpack:///./~/extend/index.js","webpack:///./src/JWTUtils.js"],"names":[],"mappings":"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BAAsB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,wBAAwB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,OAAO,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAAQ,uBAAuB,QAAQ,SAAS,sBAAsB,QAAQ,wBAAwB,QAAQ,SAAS,sBAAsB,QAA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E,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,8CAA8C,SAAS,sBAAsB,QAAQ,wBAAwB,EAAE,SAAS,uBAAuB,QAAQ,wBAAwB,EAAE,SAAS,uBAAuB,QAAQ,wBAAwB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,SAAS,sBAAsB,QAAQ,uBAAuB,EAAE,OAAO,qCAAqC,SAAS,sBA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tE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;ACnHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,iBAAiB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,G;;;;;;;AC3EA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;AC1FtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA,QAAO,YAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACpFA;AACA;AACA,kDAAiD,gDAAgD;AACjG;AACA;AACA,mHAAkH,0FAA0F,0IAA0I,MAAM,wCAAwC,MAAM,YAAY,UAAU,KAAK,4CAA4C,SAAS,sBAAsB,QAAQ,wBAAwB,MAAM,wCAAwC,SAAS,sBAAsB,QAAQ,yBAAyB,iBAAiB,KAAK,SAAS,qBAAqB,QAAQ,sBAAsB,MAAM,SAAS,qBAAqB,QAAQ,uBAAuB,MAAM,SAAS,qBAAqB,QAAQ,sBAAsB,MAAM,SAAS,qBAAqB,QAAQ,uBAAuB,MAAM,SAAS,qBAAqB,QAAQ,uBAAuB,MAAM,SAAS,qBAAqB,QAAQ,uBAAuB,MAAM,SAAS,qBAAqB,QAAQ,uBAAuB,MAAM,SAAS,qBAAqB,QAAQ,sBAAsB,MAAM,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,sBAAsB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,sBAAsB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,sBAAsB,OAAO,SAAS,qBAAqB,QAAQ,uBAAuB,OAAO,SAAS,qBAAqB,QAAQ,wBAAwB,cAAc,KAAK,oCAAoC,SAAS,qBAAqB,QAAQ,sBAAsB,EAAE,SAAS,qBAAqB,QAAQ,sBAAsB,EAAE,MAAM,oCAAoC,SAAS,qBAAqB,QAAQ,sBAAsB,EAAE,SAAS,qBAAqB,QAAQ,sBAAsB,EAAE,MAAM,oCAAoC,SAAS,qBAAqB,QAAQ,sBAAsB,EAAE,SAAS,qBAAqB,QAAQ,sBAAsB,EAAE,MAAM,oCAAoC,SAAS,qBAAqB,QAAQ,sBAAsB,EAAE,SAAS,qBAAqB,QAAQ,sBAAsB,GAAG,gIAAgI,OAAO,gCAAgC,OAAO,gFAAgF,kCAAkC,6EAA6E,oBAAoB,MAAM,+EAA+E,8DAA8D,uBAAuB,KAAK,4EAA4E,OAAO,gCAAgC,QAAQ,6EAA6E,gCAAgC,wCAAwC,sBAAsB,6EAA6E,qBAAqB,MAAM,uBAAuB,mEAAmE,gCAAgC,mBAAmB,qBAAqB,MAAM,0EAA0E,sBAAsB,MAAM,sBAAsB,QAAQ;AACp6H;AACA;AACA,uCAAsC,wDAAwD,sCAAsC,sCAAsC,2BAA2B,sCAAsC,oBAAoB,yCAAyC,sCAAsC,cAAc,KAAK,0CAA0C,sCAAsC,kCAAkC,sCAAsC,4BAA4B,sCAAsC,iBAAiB,sCAAsC,yCAAyC,sCAAsC,sCAAsC,wBAAwB,uCAAuC,8BAA8B,uCAAuC,YAAY,uCAAuC,UAAU,yCAAyC,uCAAuC,eAAe,KAAK,0CAA0C,uCAAuC,aAAa,uCAAuC,eAAe,uCAAuC,uBAAuB,uCAAuC,SAAS,yCAAyC,uCAAuC,eAAe,KAAK,0CAA0C,uCAAuC,YAAY,yCAAyC,uCAAuC,cAAc,KAAK,0CAA0C,uCAAuC","file":"ingest.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IngestAPI\"] = factory();\n\telse\n\t\troot[\"IngestAPI\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ca80a57c37f4f4ade631\n **/","\"use strict\";\nvar __cov_NAyEj_Ycs4ah$5nsSsQDxg = (Function('return this'))();\nif (!__cov_NAyEj_Ycs4ah$5nsSsQDxg.__coverage__) { __cov_NAyEj_Ycs4ah$5nsSsQDxg.__coverage__ = {}; }\n__cov_NAyEj_Ycs4ah$5nsSsQDxg = __cov_NAyEj_Ycs4ah$5nsSsQDxg.__coverage__;\nif (!(__cov_NAyEj_Ycs4ah$5nsSsQDxg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js'])) {\n   __cov_NAyEj_Ycs4ah$5nsSsQDxg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js'] = {\"path\":\"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js\",\"s\":{\"1\":0},\"b\":{},\"f\":{},\"fnMap\":{},\"statementMap\":{\"1\":{\"start\":{\"line\":1,\"column\":0},\"end\":{\"line\":1,\"column\":47}}},\"branchMap\":{},\"code\":[\"module.exports = require('./src/IngestAPI.js');\",\"\"]};\n}\n__cov_NAyEj_Ycs4ah$5nsSsQDxg = __cov_NAyEj_Ycs4ah$5nsSsQDxg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/index.js'];\n__cov_NAyEj_Ycs4ah$5nsSsQDxg.s['1']++;module.exports=require('./src/IngestAPI.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\nvar __cov__Lwiq0RdkJ3UGdwyqgPGVA = (Function('return this'))();\nif (!__cov__Lwiq0RdkJ3UGdwyqgPGVA.__coverage__) { __cov__Lwiq0RdkJ3UGdwyqgPGVA.__coverage__ = {}; }\n__cov__Lwiq0RdkJ3UGdwyqgPGVA = __cov__Lwiq0RdkJ3UGdwyqgPGVA.__coverage__;\nif (!(__cov__Lwiq0RdkJ3UGdwyqgPGVA['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js'])) {\n   __cov__Lwiq0RdkJ3UGdwyqgPGVA['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js'] = {\"path\":\"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":1,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0,\"76\":0,\"77\":0,\"78\":0,\"79\":0,\"80\":0,\"81\":0,\"82\":0,\"83\":0,\"84\":0,\"85\":0,\"86\":0,\"87\":0,\"88\":0,\"89\":0,\"90\":0,\"91\":0,\"92\":0,\"93\":0,\"94\":0,\"95\":0,\"96\":0,\"97\":0,\"98\":0,\"99\":0,\"100\":0,\"101\":0,\"102\":0,\"103\":0,\"104\":0,\"105\":0,\"106\":0,\"107\":0,\"108\":0,\"109\":0,\"110\":0,\"111\":0,\"112\":0,\"113\":0,\"114\":0,\"115\":0,\"116\":0,\"117\":0,\"118\":0,\"119\":0,\"120\":0,\"121\":0,\"122\":0,\"123\":0,\"124\":0,\"125\":0,\"126\":0,\"127\":0,\"128\":0,\"129\":0,\"130\":0,\"131\":0,\"132\":0,\"133\":0,\"134\":0,\"135\":0,\"136\":0,\"137\":0,\"138\":0,\"139\":0,\"140\":0,\"141\":0,\"142\":0,\"143\":0,\"144\":0,\"145\":0,\"146\":0,\"147\":0,\"148\":0,\"149\":0,\"150\":0,\"151\":0,\"152\":0,\"153\":0,\"154\":0,\"155\":0,\"156\":0,\"157\":0,\"158\":0,\"159\":0,\"160\":0,\"161\":0,\"162\":0,\"163\":0,\"164\":0,\"165\":0,\"166\":0,\"167\":0,\"168\":0,\"169\":0,\"170\":0,\"171\":0,\"172\":0,\"173\":0,\"174\":0,\"175\":0,\"176\":0,\"177\":0,\"178\":0,\"179\":0,\"180\":0,\"181\":0,\"182\":0,\"183\":0,\"184\":0,\"185\":0,\"186\":0,\"187\":0,\"188\":0,\"189\":0,\"190\":0,\"191\":0,\"192\":0,\"193\":0,\"194\":0,\"195\":0,\"196\":0,\"197\":0,\"198\":0,\"199\":0,\"200\":0,\"201\":0,\"202\":0,\"203\":0,\"204\":0,\"205\":0,\"206\":0,\"207\":0,\"208\":0,\"209\":0,\"210\":0,\"211\":0,\"212\":0,\"213\":0,\"214\":0,\"215\":0,\"216\":0,\"217\":0,\"218\":0,\"219\":0,\"220\":0,\"221\":0,\"222\":0,\"223\":0,\"224\":0,\"225\":0,\"226\":0,\"227\":0,\"228\":0,\"229\":0,\"230\":0,\"231\":0,\"232\":0,\"233\":0,\"234\":0,\"235\":0,\"236\":0,\"237\":0,\"238\":0,\"239\":0,\"240\":0,\"241\":0,\"242\":0,\"243\":0,\"244\":0,\"245\":0,\"246\":0,\"247\":0,\"248\":0,\"249\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0],\"12\":[0,0],\"13\":[0,0],\"14\":[0,0],\"15\":[0,0],\"16\":[0,0],\"17\":[0,0],\"18\":[0,0],\"19\":[0,0],\"20\":[0,0],\"21\":[0,0],\"22\":[0,0],\"23\":[0,0],\"24\":[0,0],\"25\":[0,0],\"26\":[0,0,0],\"27\":[0,0],\"28\":[0,0],\"29\":[0,0],\"30\":[0,0],\"31\":[0,0],\"32\":[0,0],\"33\":[0,0],\"34\":[0,0],\"35\":[0,0],\"36\":[0,0],\"37\":[0,0],\"38\":[0,0],\"39\":[0,0],\"40\":[0,0],\"41\":[0,0],\"42\":[0,0],\"43\":[0,0],\"44\":[0,0],\"45\":[0,0],\"46\":[0,0],\"47\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0},\"fnMap\":{\"1\":{\"name\":\"IngestAPI\",\"line\":13,\"loc\":{\"start\":{\"line\":11,\"column\":0},\"end\":{\"line\":11,\"column\":29}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":57,\"loc\":{\"start\":{\"line\":56,\"column\":31},\"end\":{\"line\":56,\"column\":48}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":71,\"loc\":{\"start\":{\"line\":71,\"column\":31},\"end\":{\"line\":71,\"column\":43}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":86,\"loc\":{\"start\":{\"line\":87,\"column\":32},\"end\":{\"line\":87,\"column\":51}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":101,\"loc\":{\"start\":{\"line\":103,\"column\":35},\"end\":{\"line\":103,\"column\":54}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":129,\"loc\":{\"start\":{\"line\":133,\"column\":31},\"end\":{\"line\":133,\"column\":54}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":151,\"loc\":{\"start\":{\"line\":157,\"column\":34},\"end\":{\"line\":157,\"column\":51}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":179,\"loc\":{\"start\":{\"line\":186,\"column\":35},\"end\":{\"line\":186,\"column\":53}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":200,\"loc\":{\"start\":{\"line\":208,\"column\":36},\"end\":{\"line\":208,\"column\":65}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":228,\"loc\":{\"start\":{\"line\":237,\"column\":35},\"end\":{\"line\":237,\"column\":53}}},\"11\":{\"name\":\"(anonymous_11)\",\"line\":239,\"loc\":{\"start\":{\"line\":248,\"column\":46},\"end\":{\"line\":248,\"column\":64}}},\"12\":{\"name\":\"(anonymous_12)\",\"line\":251,\"loc\":{\"start\":{\"line\":260,\"column\":35},\"end\":{\"line\":260,\"column\":65}}},\"13\":{\"name\":\"(anonymous_13)\",\"line\":282,\"loc\":{\"start\":{\"line\":292,\"column\":34},\"end\":{\"line\":292,\"column\":53}}},\"14\":{\"name\":\"(anonymous_14)\",\"line\":292,\"loc\":{\"start\":{\"line\":302,\"column\":45},\"end\":{\"line\":302,\"column\":64}}},\"15\":{\"name\":\"(anonymous_15)\",\"line\":303,\"loc\":{\"start\":{\"line\":313,\"column\":35},\"end\":{\"line\":313,\"column\":71}}},\"16\":{\"name\":\"(anonymous_16)\",\"line\":331,\"loc\":{\"start\":{\"line\":344,\"column\":37},\"end\":{\"line\":344,\"column\":49}}},\"17\":{\"name\":\"(anonymous_17)\",\"line\":346,\"loc\":{\"start\":{\"line\":360,\"column\":39},\"end\":{\"line\":360,\"column\":58}}},\"18\":{\"name\":\"(anonymous_18)\",\"line\":359,\"loc\":{\"start\":{\"line\":374,\"column\":44},\"end\":{\"line\":374,\"column\":56}}},\"19\":{\"name\":\"(anonymous_19)\",\"line\":373,\"loc\":{\"start\":{\"line\":389,\"column\":39},\"end\":{\"line\":389,\"column\":59}}},\"20\":{\"name\":\"(anonymous_20)\",\"line\":389,\"loc\":{\"start\":{\"line\":406,\"column\":37},\"end\":{\"line\":406,\"column\":53}}},\"21\":{\"name\":\"(anonymous_21)\",\"line\":432,\"loc\":{\"start\":{\"line\":450,\"column\":41},\"end\":{\"line\":450,\"column\":57}}},\"22\":{\"name\":\"(anonymous_22)\",\"line\":468,\"loc\":{\"start\":{\"line\":486,\"column\":43},\"end\":{\"line\":486,\"column\":59}}},\"23\":{\"name\":\"(anonymous_23)\",\"line\":526,\"loc\":{\"start\":{\"line\":544,\"column\":34},\"end\":{\"line\":544,\"column\":60}}},\"24\":{\"name\":\"(anonymous_24)\",\"line\":545,\"loc\":{\"start\":{\"line\":564,\"column\":32},\"end\":{\"line\":564,\"column\":56}}},\"25\":{\"name\":\"(anonymous_25)\",\"line\":558,\"loc\":{\"start\":{\"line\":578,\"column\":43},\"end\":{\"line\":578,\"column\":55}}},\"26\":{\"name\":\"(anonymous_26)\",\"line\":574,\"loc\":{\"start\":{\"line\":595,\"column\":42},\"end\":{\"line\":595,\"column\":58}}},\"27\":{\"name\":\"(anonymous_27)\",\"line\":602,\"loc\":{\"start\":{\"line\":625,\"column\":46},\"end\":{\"line\":625,\"column\":60}}},\"28\":{\"name\":\"(anonymous_28)\",\"line\":628,\"loc\":{\"start\":{\"line\":652,\"column\":45},\"end\":{\"line\":652,\"column\":61}}},\"29\":{\"name\":\"(anonymous_29)\",\"line\":663,\"loc\":{\"start\":{\"line\":689,\"column\":49},\"end\":{\"line\":689,\"column\":63}}},\"30\":{\"name\":\"(anonymous_30)\",\"line\":687,\"loc\":{\"start\":{\"line\":714,\"column\":41},\"end\":{\"line\":714,\"column\":55}}},\"31\":{\"name\":\"(anonymous_31)\",\"line\":712,\"loc\":{\"start\":{\"line\":741,\"column\":32},\"end\":{\"line\":741,\"column\":51}}},\"32\":{\"name\":\"(anonymous_32)\",\"line\":727,\"loc\":{\"start\":{\"line\":757,\"column\":36},\"end\":{\"line\":757,\"column\":55}}},\"33\":{\"name\":\"(anonymous_33)\",\"line\":755,\"loc\":{\"start\":{\"line\":787,\"column\":32},\"end\":{\"line\":787,\"column\":50}}},\"34\":{\"name\":\"(anonymous_34)\",\"line\":778,\"loc\":{\"start\":{\"line\":811,\"column\":34},\"end\":{\"line\":811,\"column\":53}}},\"35\":{\"name\":\"(anonymous_35)\",\"line\":806,\"loc\":{\"start\":{\"line\":841,\"column\":35},\"end\":{\"line\":841,\"column\":53}}},\"36\":{\"name\":\"(anonymous_36)\",\"line\":834,\"loc\":{\"start\":{\"line\":870,\"column\":44},\"end\":{\"line\":870,\"column\":69}}},\"37\":{\"name\":\"(anonymous_37)\",\"line\":880,\"loc\":{\"start\":{\"line\":919,\"column\":42},\"end\":{\"line\":919,\"column\":67}}},\"38\":{\"name\":\"(anonymous_38)\",\"line\":918,\"loc\":{\"start\":{\"line\":958,\"column\":39},\"end\":{\"line\":958,\"column\":64}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":1,\"column\":0},\"end\":{\"line\":1,\"column\":38}},\"2\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":36}},\"3\":{\"start\":{\"line\":3,\"column\":0},\"end\":{\"line\":3,\"column\":31}},\"4\":{\"start\":{\"line\":11,\"column\":0},\"end\":{\"line\":50,\"column\":1}},\"5\":{\"start\":{\"line\":13,\"column\":2},\"end\":{\"line\":38,\"column\":4}},\"6\":{\"start\":{\"line\":41,\"column\":2},\"end\":{\"line\":41,\"column\":57}},\"7\":{\"start\":{\"line\":43,\"column\":2},\"end\":{\"line\":46,\"column\":3}},\"8\":{\"start\":{\"line\":45,\"column\":4},\"end\":{\"line\":45,\"column\":37}},\"9\":{\"start\":{\"line\":48,\"column\":2},\"end\":{\"line\":48,\"column\":25}},\"10\":{\"start\":{\"line\":56,\"column\":0},\"end\":{\"line\":65,\"column\":2}},\"11\":{\"start\":{\"line\":59,\"column\":2},\"end\":{\"line\":61,\"column\":3}},\"12\":{\"start\":{\"line\":60,\"column\":4},\"end\":{\"line\":60,\"column\":86}},\"13\":{\"start\":{\"line\":63,\"column\":2},\"end\":{\"line\":63,\"column\":21}},\"14\":{\"start\":{\"line\":71,\"column\":0},\"end\":{\"line\":79,\"column\":2}},\"15\":{\"start\":{\"line\":73,\"column\":2},\"end\":{\"line\":75,\"column\":3}},\"16\":{\"start\":{\"line\":74,\"column\":4},\"end\":{\"line\":74,\"column\":61}},\"17\":{\"start\":{\"line\":77,\"column\":2},\"end\":{\"line\":77,\"column\":20}},\"18\":{\"start\":{\"line\":87,\"column\":0},\"end\":{\"line\":95,\"column\":2}},\"19\":{\"start\":{\"line\":89,\"column\":2},\"end\":{\"line\":93,\"column\":5}},\"20\":{\"start\":{\"line\":103,\"column\":0},\"end\":{\"line\":125,\"column\":2}},\"21\":{\"start\":{\"line\":105,\"column\":2},\"end\":{\"line\":105,\"column\":10}},\"22\":{\"start\":{\"line\":106,\"column\":2},\"end\":{\"line\":106,\"column\":13}},\"23\":{\"start\":{\"line\":108,\"column\":2},\"end\":{\"line\":112,\"column\":3}},\"24\":{\"start\":{\"line\":110,\"column\":4},\"end\":{\"line\":111,\"column\":70}},\"25\":{\"start\":{\"line\":114,\"column\":2},\"end\":{\"line\":116,\"column\":4}},\"26\":{\"start\":{\"line\":118,\"column\":2},\"end\":{\"line\":118,\"column\":75}},\"27\":{\"start\":{\"line\":120,\"column\":2},\"end\":{\"line\":123,\"column\":5}},\"28\":{\"start\":{\"line\":133,\"column\":0},\"end\":{\"line\":150,\"column\":2}},\"29\":{\"start\":{\"line\":136,\"column\":2},\"end\":{\"line\":140,\"column\":3}},\"30\":{\"start\":{\"line\":138,\"column\":4},\"end\":{\"line\":139,\"column\":53}},\"31\":{\"start\":{\"line\":143,\"column\":2},\"end\":{\"line\":148,\"column\":5}},\"32\":{\"start\":{\"line\":157,\"column\":0},\"end\":{\"line\":179,\"column\":2}},\"33\":{\"start\":{\"line\":159,\"column\":2},\"end\":{\"line\":159,\"column\":10}},\"34\":{\"start\":{\"line\":160,\"column\":2},\"end\":{\"line\":160,\"column\":13}},\"35\":{\"start\":{\"line\":162,\"column\":2},\"end\":{\"line\":165,\"column\":3}},\"36\":{\"start\":{\"line\":163,\"column\":4},\"end\":{\"line\":164,\"column\":70}},\"37\":{\"start\":{\"line\":167,\"column\":2},\"end\":{\"line\":169,\"column\":4}},\"38\":{\"start\":{\"line\":171,\"column\":2},\"end\":{\"line\":171,\"column\":75}},\"39\":{\"start\":{\"line\":173,\"column\":2},\"end\":{\"line\":178,\"column\":5}},\"40\":{\"start\":{\"line\":186,\"column\":0},\"end\":{\"line\":198,\"column\":2}},\"41\":{\"start\":{\"line\":187,\"column\":2},\"end\":{\"line\":190,\"column\":3}},\"42\":{\"start\":{\"line\":188,\"column\":4},\"end\":{\"line\":189,\"column\":60}},\"43\":{\"start\":{\"line\":192,\"column\":2},\"end\":{\"line\":197,\"column\":5}},\"44\":{\"start\":{\"line\":208,\"column\":0},\"end\":{\"line\":228,\"column\":2}},\"45\":{\"start\":{\"line\":209,\"column\":2},\"end\":{\"line\":209,\"column\":10}},\"46\":{\"start\":{\"line\":211,\"column\":2},\"end\":{\"line\":214,\"column\":3}},\"47\":{\"start\":{\"line\":212,\"column\":4},\"end\":{\"line\":213,\"column\":60}},\"48\":{\"start\":{\"line\":216,\"column\":2},\"end\":{\"line\":216,\"column\":46}},\"49\":{\"start\":{\"line\":218,\"column\":2},\"end\":{\"line\":220,\"column\":3}},\"50\":{\"start\":{\"line\":219,\"column\":4},\"end\":{\"line\":219,\"column\":47}},\"51\":{\"start\":{\"line\":222,\"column\":2},\"end\":{\"line\":227,\"column\":5}},\"52\":{\"start\":{\"line\":237,\"column\":0},\"end\":{\"line\":239,\"column\":2}},\"53\":{\"start\":{\"line\":238,\"column\":2},\"end\":{\"line\":238,\"column\":36}},\"54\":{\"start\":{\"line\":248,\"column\":0},\"end\":{\"line\":250,\"column\":2}},\"55\":{\"start\":{\"line\":249,\"column\":2},\"end\":{\"line\":249,\"column\":42}},\"56\":{\"start\":{\"line\":260,\"column\":0},\"end\":{\"line\":284,\"column\":2}},\"57\":{\"start\":{\"line\":261,\"column\":2},\"end\":{\"line\":261,\"column\":10}},\"58\":{\"start\":{\"line\":262,\"column\":2},\"end\":{\"line\":262,\"column\":13}},\"59\":{\"start\":{\"line\":264,\"column\":2},\"end\":{\"line\":267,\"column\":3}},\"60\":{\"start\":{\"line\":265,\"column\":4},\"end\":{\"line\":266,\"column\":71}},\"61\":{\"start\":{\"line\":269,\"column\":2},\"end\":{\"line\":271,\"column\":4}},\"62\":{\"start\":{\"line\":273,\"column\":2},\"end\":{\"line\":273,\"column\":75}},\"63\":{\"start\":{\"line\":275,\"column\":2},\"end\":{\"line\":277,\"column\":3}},\"64\":{\"start\":{\"line\":276,\"column\":4},\"end\":{\"line\":276,\"column\":47}},\"65\":{\"start\":{\"line\":279,\"column\":2},\"end\":{\"line\":283,\"column\":5}},\"66\":{\"start\":{\"line\":292,\"column\":0},\"end\":{\"line\":294,\"column\":2}},\"67\":{\"start\":{\"line\":293,\"column\":2},\"end\":{\"line\":293,\"column\":36}},\"68\":{\"start\":{\"line\":302,\"column\":0},\"end\":{\"line\":304,\"column\":2}},\"69\":{\"start\":{\"line\":303,\"column\":2},\"end\":{\"line\":303,\"column\":42}},\"70\":{\"start\":{\"line\":313,\"column\":0},\"end\":{\"line\":338,\"column\":2}},\"71\":{\"start\":{\"line\":315,\"column\":2},\"end\":{\"line\":315,\"column\":10}},\"72\":{\"start\":{\"line\":317,\"column\":2},\"end\":{\"line\":320,\"column\":3}},\"73\":{\"start\":{\"line\":318,\"column\":4},\"end\":{\"line\":319,\"column\":83}},\"74\":{\"start\":{\"line\":322,\"column\":2},\"end\":{\"line\":325,\"column\":3}},\"75\":{\"start\":{\"line\":323,\"column\":4},\"end\":{\"line\":324,\"column\":80}},\"76\":{\"start\":{\"line\":327,\"column\":2},\"end\":{\"line\":330,\"column\":5}},\"77\":{\"start\":{\"line\":332,\"column\":2},\"end\":{\"line\":336,\"column\":5}},\"78\":{\"start\":{\"line\":344,\"column\":0},\"end\":{\"line\":352,\"column\":2}},\"79\":{\"start\":{\"line\":346,\"column\":2},\"end\":{\"line\":350,\"column\":44}},\"80\":{\"start\":{\"line\":360,\"column\":0},\"end\":{\"line\":368,\"column\":2}},\"81\":{\"start\":{\"line\":362,\"column\":2},\"end\":{\"line\":366,\"column\":5}},\"82\":{\"start\":{\"line\":374,\"column\":0},\"end\":{\"line\":382,\"column\":2}},\"83\":{\"start\":{\"line\":376,\"column\":2},\"end\":{\"line\":380,\"column\":44}},\"84\":{\"start\":{\"line\":389,\"column\":0},\"end\":{\"line\":393,\"column\":2}},\"85\":{\"start\":{\"line\":391,\"column\":2},\"end\":{\"line\":391,\"column\":58}},\"86\":{\"start\":{\"line\":406,\"column\":0},\"end\":{\"line\":438,\"column\":2}},\"87\":{\"start\":{\"line\":408,\"column\":2},\"end\":{\"line\":408,\"column\":52}},\"88\":{\"start\":{\"line\":409,\"column\":2},\"end\":{\"line\":409,\"column\":10}},\"89\":{\"start\":{\"line\":410,\"column\":2},\"end\":{\"line\":410,\"column\":13}},\"90\":{\"start\":{\"line\":411,\"column\":2},\"end\":{\"line\":411,\"column\":19}},\"91\":{\"start\":{\"line\":414,\"column\":2},\"end\":{\"line\":416,\"column\":3}},\"92\":{\"start\":{\"line\":415,\"column\":4},\"end\":{\"line\":415,\"column\":54}},\"93\":{\"start\":{\"line\":418,\"column\":2},\"end\":{\"line\":420,\"column\":3}},\"94\":{\"start\":{\"line\":419,\"column\":4},\"end\":{\"line\":419,\"column\":85}},\"95\":{\"start\":{\"line\":424,\"column\":2},\"end\":{\"line\":427,\"column\":4}},\"96\":{\"start\":{\"line\":429,\"column\":2},\"end\":{\"line\":429,\"column\":82}},\"97\":{\"start\":{\"line\":431,\"column\":2},\"end\":{\"line\":436,\"column\":5}},\"98\":{\"start\":{\"line\":450,\"column\":0},\"end\":{\"line\":473,\"column\":2}},\"99\":{\"start\":{\"line\":452,\"column\":2},\"end\":{\"line\":455,\"column\":4}},\"100\":{\"start\":{\"line\":457,\"column\":2},\"end\":{\"line\":460,\"column\":3}},\"101\":{\"start\":{\"line\":458,\"column\":4},\"end\":{\"line\":458,\"column\":25}},\"102\":{\"start\":{\"line\":459,\"column\":4},\"end\":{\"line\":459,\"column\":59}},\"103\":{\"start\":{\"line\":462,\"column\":2},\"end\":{\"line\":465,\"column\":3}},\"104\":{\"start\":{\"line\":463,\"column\":4},\"end\":{\"line\":463,\"column\":25}},\"105\":{\"start\":{\"line\":464,\"column\":4},\"end\":{\"line\":464,\"column\":58}},\"106\":{\"start\":{\"line\":467,\"column\":2},\"end\":{\"line\":470,\"column\":3}},\"107\":{\"start\":{\"line\":468,\"column\":4},\"end\":{\"line\":468,\"column\":25}},\"108\":{\"start\":{\"line\":469,\"column\":4},\"end\":{\"line\":469,\"column\":62}},\"109\":{\"start\":{\"line\":472,\"column\":2},\"end\":{\"line\":472,\"column\":16}},\"110\":{\"start\":{\"line\":486,\"column\":0},\"end\":{\"line\":526,\"column\":2}},\"111\":{\"start\":{\"line\":488,\"column\":2},\"end\":{\"line\":488,\"column\":47}},\"112\":{\"start\":{\"line\":489,\"column\":2},\"end\":{\"line\":492,\"column\":4}},\"113\":{\"start\":{\"line\":494,\"column\":2},\"end\":{\"line\":497,\"column\":3}},\"114\":{\"start\":{\"line\":495,\"column\":4},\"end\":{\"line\":495,\"column\":25}},\"115\":{\"start\":{\"line\":496,\"column\":4},\"end\":{\"line\":496,\"column\":59}},\"116\":{\"start\":{\"line\":500,\"column\":2},\"end\":{\"line\":502,\"column\":3}},\"117\":{\"start\":{\"line\":501,\"column\":4},\"end\":{\"line\":501,\"column\":22}},\"118\":{\"start\":{\"line\":504,\"column\":2},\"end\":{\"line\":507,\"column\":3}},\"119\":{\"start\":{\"line\":505,\"column\":4},\"end\":{\"line\":505,\"column\":25}},\"120\":{\"start\":{\"line\":506,\"column\":4},\"end\":{\"line\":506,\"column\":57}},\"121\":{\"start\":{\"line\":509,\"column\":2},\"end\":{\"line\":512,\"column\":3}},\"122\":{\"start\":{\"line\":510,\"column\":4},\"end\":{\"line\":510,\"column\":25}},\"123\":{\"start\":{\"line\":511,\"column\":4},\"end\":{\"line\":511,\"column\":64}},\"124\":{\"start\":{\"line\":514,\"column\":2},\"end\":{\"line\":517,\"column\":3}},\"125\":{\"start\":{\"line\":515,\"column\":4},\"end\":{\"line\":515,\"column\":25}},\"126\":{\"start\":{\"line\":516,\"column\":4},\"end\":{\"line\":516,\"column\":60}},\"127\":{\"start\":{\"line\":520,\"column\":2},\"end\":{\"line\":523,\"column\":3}},\"128\":{\"start\":{\"line\":521,\"column\":4},\"end\":{\"line\":521,\"column\":24}},\"129\":{\"start\":{\"line\":522,\"column\":4},\"end\":{\"line\":522,\"column\":24}},\"130\":{\"start\":{\"line\":525,\"column\":2},\"end\":{\"line\":525,\"column\":16}},\"131\":{\"start\":{\"line\":544,\"column\":0},\"end\":{\"line\":556,\"column\":2}},\"132\":{\"start\":{\"line\":546,\"column\":2},\"end\":{\"line\":546,\"column\":31}},\"133\":{\"start\":{\"line\":547,\"column\":2},\"end\":{\"line\":547,\"column\":8}},\"134\":{\"start\":{\"line\":548,\"column\":2},\"end\":{\"line\":548,\"column\":27}},\"135\":{\"start\":{\"line\":550,\"column\":2},\"end\":{\"line\":552,\"column\":3}},\"136\":{\"start\":{\"line\":551,\"column\":4},\"end\":{\"line\":551,\"column\":71}},\"137\":{\"start\":{\"line\":554,\"column\":2},\"end\":{\"line\":554,\"column\":18}},\"138\":{\"start\":{\"line\":564,\"column\":0},\"end\":{\"line\":572,\"column\":2}},\"139\":{\"start\":{\"line\":566,\"column\":2},\"end\":{\"line\":566,\"column\":26}},\"140\":{\"start\":{\"line\":568,\"column\":2},\"end\":{\"line\":568,\"column\":26}},\"141\":{\"start\":{\"line\":570,\"column\":2},\"end\":{\"line\":570,\"column\":17}},\"142\":{\"start\":{\"line\":578,\"column\":0},\"end\":{\"line\":585,\"column\":2}},\"143\":{\"start\":{\"line\":580,\"column\":2},\"end\":{\"line\":583,\"column\":5}},\"144\":{\"start\":{\"line\":595,\"column\":0},\"end\":{\"line\":617,\"column\":2}},\"145\":{\"start\":{\"line\":596,\"column\":2},\"end\":{\"line\":599,\"column\":3}},\"146\":{\"start\":{\"line\":597,\"column\":4},\"end\":{\"line\":598,\"column\":80}},\"147\":{\"start\":{\"line\":602,\"column\":2},\"end\":{\"line\":604,\"column\":3}},\"148\":{\"start\":{\"line\":603,\"column\":4},\"end\":{\"line\":603,\"column\":20}},\"149\":{\"start\":{\"line\":606,\"column\":2},\"end\":{\"line\":609,\"column\":3}},\"150\":{\"start\":{\"line\":607,\"column\":4},\"end\":{\"line\":608,\"column\":99}},\"151\":{\"start\":{\"line\":611,\"column\":2},\"end\":{\"line\":616,\"column\":5}},\"152\":{\"start\":{\"line\":625,\"column\":0},\"end\":{\"line\":643,\"column\":2}},\"153\":{\"start\":{\"line\":626,\"column\":2},\"end\":{\"line\":626,\"column\":18}},\"154\":{\"start\":{\"line\":628,\"column\":2},\"end\":{\"line\":631,\"column\":3}},\"155\":{\"start\":{\"line\":629,\"column\":4},\"end\":{\"line\":630,\"column\":84}},\"156\":{\"start\":{\"line\":633,\"column\":2},\"end\":{\"line\":635,\"column\":4}},\"157\":{\"start\":{\"line\":637,\"column\":2},\"end\":{\"line\":637,\"column\":82}},\"158\":{\"start\":{\"line\":639,\"column\":2},\"end\":{\"line\":642,\"column\":5}},\"159\":{\"start\":{\"line\":652,\"column\":0},\"end\":{\"line\":681,\"column\":2}},\"160\":{\"start\":{\"line\":653,\"column\":2},\"end\":{\"line\":653,\"column\":18}},\"161\":{\"start\":{\"line\":655,\"column\":2},\"end\":{\"line\":658,\"column\":3}},\"162\":{\"start\":{\"line\":656,\"column\":4},\"end\":{\"line\":657,\"column\":87}},\"163\":{\"start\":{\"line\":660,\"column\":2},\"end\":{\"line\":663,\"column\":3}},\"164\":{\"start\":{\"line\":661,\"column\":4},\"end\":{\"line\":662,\"column\":84}},\"165\":{\"start\":{\"line\":665,\"column\":2},\"end\":{\"line\":667,\"column\":3}},\"166\":{\"start\":{\"line\":666,\"column\":4},\"end\":{\"line\":666,\"column\":20}},\"167\":{\"start\":{\"line\":669,\"column\":2},\"end\":{\"line\":671,\"column\":4}},\"168\":{\"start\":{\"line\":673,\"column\":2},\"end\":{\"line\":673,\"column\":82}},\"169\":{\"start\":{\"line\":675,\"column\":2},\"end\":{\"line\":680,\"column\":5}},\"170\":{\"start\":{\"line\":689,\"column\":0},\"end\":{\"line\":708,\"column\":2}},\"171\":{\"start\":{\"line\":690,\"column\":2},\"end\":{\"line\":690,\"column\":18}},\"172\":{\"start\":{\"line\":692,\"column\":2},\"end\":{\"line\":695,\"column\":3}},\"173\":{\"start\":{\"line\":693,\"column\":4},\"end\":{\"line\":694,\"column\":87}},\"174\":{\"start\":{\"line\":697,\"column\":2},\"end\":{\"line\":699,\"column\":4}},\"175\":{\"start\":{\"line\":701,\"column\":2},\"end\":{\"line\":701,\"column\":82}},\"176\":{\"start\":{\"line\":703,\"column\":2},\"end\":{\"line\":707,\"column\":5}},\"177\":{\"start\":{\"line\":714,\"column\":0},\"end\":{\"line\":733,\"column\":2}},\"178\":{\"start\":{\"line\":715,\"column\":2},\"end\":{\"line\":715,\"column\":18}},\"179\":{\"start\":{\"line\":717,\"column\":2},\"end\":{\"line\":720,\"column\":3}},\"180\":{\"start\":{\"line\":718,\"column\":4},\"end\":{\"line\":719,\"column\":79}},\"181\":{\"start\":{\"line\":722,\"column\":2},\"end\":{\"line\":724,\"column\":4}},\"182\":{\"start\":{\"line\":726,\"column\":2},\"end\":{\"line\":726,\"column\":76}},\"183\":{\"start\":{\"line\":728,\"column\":2},\"end\":{\"line\":731,\"column\":5}},\"184\":{\"start\":{\"line\":741,\"column\":0},\"end\":{\"line\":749,\"column\":2}},\"185\":{\"start\":{\"line\":743,\"column\":2},\"end\":{\"line\":747,\"column\":5}},\"186\":{\"start\":{\"line\":757,\"column\":0},\"end\":{\"line\":779,\"column\":2}},\"187\":{\"start\":{\"line\":759,\"column\":2},\"end\":{\"line\":759,\"column\":10}},\"188\":{\"start\":{\"line\":760,\"column\":2},\"end\":{\"line\":760,\"column\":13}},\"189\":{\"start\":{\"line\":762,\"column\":2},\"end\":{\"line\":766,\"column\":3}},\"190\":{\"start\":{\"line\":764,\"column\":4},\"end\":{\"line\":765,\"column\":71}},\"191\":{\"start\":{\"line\":768,\"column\":2},\"end\":{\"line\":770,\"column\":4}},\"192\":{\"start\":{\"line\":772,\"column\":2},\"end\":{\"line\":772,\"column\":76}},\"193\":{\"start\":{\"line\":774,\"column\":2},\"end\":{\"line\":777,\"column\":5}},\"194\":{\"start\":{\"line\":787,\"column\":0},\"end\":{\"line\":803,\"column\":2}},\"195\":{\"start\":{\"line\":790,\"column\":2},\"end\":{\"line\":794,\"column\":3}},\"196\":{\"start\":{\"line\":792,\"column\":4},\"end\":{\"line\":793,\"column\":64}},\"197\":{\"start\":{\"line\":797,\"column\":2},\"end\":{\"line\":802,\"column\":5}},\"198\":{\"start\":{\"line\":811,\"column\":0},\"end\":{\"line\":833,\"column\":2}},\"199\":{\"start\":{\"line\":813,\"column\":2},\"end\":{\"line\":813,\"column\":10}},\"200\":{\"start\":{\"line\":814,\"column\":2},\"end\":{\"line\":814,\"column\":13}},\"201\":{\"start\":{\"line\":816,\"column\":2},\"end\":{\"line\":819,\"column\":3}},\"202\":{\"start\":{\"line\":817,\"column\":4},\"end\":{\"line\":818,\"column\":71}},\"203\":{\"start\":{\"line\":821,\"column\":2},\"end\":{\"line\":823,\"column\":4}},\"204\":{\"start\":{\"line\":825,\"column\":2},\"end\":{\"line\":825,\"column\":76}},\"205\":{\"start\":{\"line\":827,\"column\":2},\"end\":{\"line\":831,\"column\":5}},\"206\":{\"start\":{\"line\":841,\"column\":0},\"end\":{\"line\":858,\"column\":2}},\"207\":{\"start\":{\"line\":843,\"column\":2},\"end\":{\"line\":843,\"column\":10}},\"208\":{\"start\":{\"line\":845,\"column\":2},\"end\":{\"line\":848,\"column\":3}},\"209\":{\"start\":{\"line\":846,\"column\":4},\"end\":{\"line\":847,\"column\":63}},\"210\":{\"start\":{\"line\":850,\"column\":2},\"end\":{\"line\":850,\"column\":46}},\"211\":{\"start\":{\"line\":852,\"column\":2},\"end\":{\"line\":857,\"column\":5}},\"212\":{\"start\":{\"line\":870,\"column\":0},\"end\":{\"line\":908,\"column\":2}},\"213\":{\"start\":{\"line\":872,\"column\":2},\"end\":{\"line\":872,\"column\":10}},\"214\":{\"start\":{\"line\":873,\"column\":2},\"end\":{\"line\":873,\"column\":13}},\"215\":{\"start\":{\"line\":874,\"column\":2},\"end\":{\"line\":874,\"column\":19}},\"216\":{\"start\":{\"line\":876,\"column\":2},\"end\":{\"line\":879,\"column\":3}},\"217\":{\"start\":{\"line\":877,\"column\":4},\"end\":{\"line\":878,\"column\":87}},\"218\":{\"start\":{\"line\":881,\"column\":2},\"end\":{\"line\":884,\"column\":3}},\"219\":{\"start\":{\"line\":882,\"column\":4},\"end\":{\"line\":883,\"column\":45}},\"220\":{\"start\":{\"line\":886,\"column\":2},\"end\":{\"line\":889,\"column\":3}},\"221\":{\"start\":{\"line\":887,\"column\":4},\"end\":{\"line\":888,\"column\":44}},\"222\":{\"start\":{\"line\":891,\"column\":2},\"end\":{\"line\":893,\"column\":3}},\"223\":{\"start\":{\"line\":892,\"column\":4},\"end\":{\"line\":892,\"column\":85}},\"224\":{\"start\":{\"line\":895,\"column\":2},\"end\":{\"line\":898,\"column\":4}},\"225\":{\"start\":{\"line\":900,\"column\":2},\"end\":{\"line\":900,\"column\":88}},\"226\":{\"start\":{\"line\":902,\"column\":2},\"end\":{\"line\":907,\"column\":5}},\"227\":{\"start\":{\"line\":919,\"column\":0},\"end\":{\"line\":947,\"column\":2}},\"228\":{\"start\":{\"line\":921,\"column\":2},\"end\":{\"line\":921,\"column\":10}},\"229\":{\"start\":{\"line\":922,\"column\":2},\"end\":{\"line\":922,\"column\":13}},\"230\":{\"start\":{\"line\":923,\"column\":2},\"end\":{\"line\":923,\"column\":50}},\"231\":{\"start\":{\"line\":925,\"column\":2},\"end\":{\"line\":928,\"column\":3}},\"232\":{\"start\":{\"line\":926,\"column\":4},\"end\":{\"line\":927,\"column\":87}},\"233\":{\"start\":{\"line\":931,\"column\":2},\"end\":{\"line\":933,\"column\":3}},\"234\":{\"start\":{\"line\":932,\"column\":4},\"end\":{\"line\":932,\"column\":54}},\"235\":{\"start\":{\"line\":935,\"column\":2},\"end\":{\"line\":937,\"column\":4}},\"236\":{\"start\":{\"line\":939,\"column\":2},\"end\":{\"line\":939,\"column\":86}},\"237\":{\"start\":{\"line\":941,\"column\":2},\"end\":{\"line\":946,\"column\":5}},\"238\":{\"start\":{\"line\":958,\"column\":0},\"end\":{\"line\":986,\"column\":2}},\"239\":{\"start\":{\"line\":960,\"column\":2},\"end\":{\"line\":960,\"column\":10}},\"240\":{\"start\":{\"line\":961,\"column\":2},\"end\":{\"line\":961,\"column\":13}},\"241\":{\"start\":{\"line\":962,\"column\":2},\"end\":{\"line\":962,\"column\":50}},\"242\":{\"start\":{\"line\":964,\"column\":2},\"end\":{\"line\":967,\"column\":3}},\"243\":{\"start\":{\"line\":965,\"column\":4},\"end\":{\"line\":966,\"column\":87}},\"244\":{\"start\":{\"line\":970,\"column\":2},\"end\":{\"line\":972,\"column\":3}},\"245\":{\"start\":{\"line\":971,\"column\":4},\"end\":{\"line\":971,\"column\":54}},\"246\":{\"start\":{\"line\":974,\"column\":2},\"end\":{\"line\":976,\"column\":4}},\"247\":{\"start\":{\"line\":978,\"column\":2},\"end\":{\"line\":978,\"column\":83}},\"248\":{\"start\":{\"line\":980,\"column\":2},\"end\":{\"line\":985,\"column\":5}},\"249\":{\"start\":{\"line\":988,\"column\":0},\"end\":{\"line\":988,\"column\":27}}},\"branchMap\":{\"1\":{\"line\":45,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":43,\"column\":2},\"end\":{\"line\":43,\"column\":2}},{\"start\":{\"line\":43,\"column\":2},\"end\":{\"line\":43,\"column\":2}}]},\"2\":{\"line\":60,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":59,\"column\":2},\"end\":{\"line\":59,\"column\":2}},{\"start\":{\"line\":59,\"column\":2},\"end\":{\"line\":59,\"column\":2}}]},\"3\":{\"line\":73,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":73,\"column\":2},\"end\":{\"line\":73,\"column\":2}},{\"start\":{\"line\":73,\"column\":2},\"end\":{\"line\":73,\"column\":2}}]},\"4\":{\"line\":106,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":108,\"column\":2},\"end\":{\"line\":108,\"column\":2}},{\"start\":{\"line\":108,\"column\":2},\"end\":{\"line\":108,\"column\":2}}]},\"5\":{\"line\":132,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":136,\"column\":2},\"end\":{\"line\":136,\"column\":2}},{\"start\":{\"line\":136,\"column\":2},\"end\":{\"line\":136,\"column\":2}}]},\"6\":{\"line\":156,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":162,\"column\":2},\"end\":{\"line\":162,\"column\":2}},{\"start\":{\"line\":162,\"column\":2},\"end\":{\"line\":162,\"column\":2}}]},\"7\":{\"line\":180,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":187,\"column\":2},\"end\":{\"line\":187,\"column\":2}},{\"start\":{\"line\":187,\"column\":2},\"end\":{\"line\":187,\"column\":2}}]},\"8\":{\"line\":203,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":211,\"column\":2},\"end\":{\"line\":211,\"column\":2}},{\"start\":{\"line\":211,\"column\":2},\"end\":{\"line\":211,\"column\":2}}]},\"9\":{\"line\":209,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":218,\"column\":2},\"end\":{\"line\":218,\"column\":2}},{\"start\":{\"line\":218,\"column\":2},\"end\":{\"line\":218,\"column\":2}}]},\"10\":{\"line\":255,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":264,\"column\":2},\"end\":{\"line\":264,\"column\":2}},{\"start\":{\"line\":264,\"column\":2},\"end\":{\"line\":264,\"column\":2}}]},\"11\":{\"line\":265,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":275,\"column\":2},\"end\":{\"line\":275,\"column\":2}},{\"start\":{\"line\":275,\"column\":2},\"end\":{\"line\":275,\"column\":2}}]},\"12\":{\"line\":307,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":317,\"column\":2},\"end\":{\"line\":317,\"column\":2}},{\"start\":{\"line\":317,\"column\":2},\"end\":{\"line\":317,\"column\":2}}]},\"13\":{\"line\":311,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":322,\"column\":2},\"end\":{\"line\":322,\"column\":2}},{\"start\":{\"line\":322,\"column\":2},\"end\":{\"line\":322,\"column\":2}}]},\"14\":{\"line\":397,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":414,\"column\":2},\"end\":{\"line\":414,\"column\":2}},{\"start\":{\"line\":414,\"column\":2},\"end\":{\"line\":414,\"column\":2}}]},\"15\":{\"line\":401,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":418,\"column\":2},\"end\":{\"line\":418,\"column\":2}},{\"start\":{\"line\":418,\"column\":2},\"end\":{\"line\":418,\"column\":2}}]},\"16\":{\"line\":439,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":457,\"column\":2},\"end\":{\"line\":457,\"column\":2}},{\"start\":{\"line\":457,\"column\":2},\"end\":{\"line\":457,\"column\":2}}]},\"17\":{\"line\":444,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":462,\"column\":2},\"end\":{\"line\":462,\"column\":2}},{\"start\":{\"line\":462,\"column\":2},\"end\":{\"line\":462,\"column\":2}}]},\"18\":{\"line\":449,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":467,\"column\":2},\"end\":{\"line\":467,\"column\":2}},{\"start\":{\"line\":467,\"column\":2},\"end\":{\"line\":467,\"column\":2}}]},\"19\":{\"line\":476,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":494,\"column\":2},\"end\":{\"line\":494,\"column\":2}},{\"start\":{\"line\":494,\"column\":2},\"end\":{\"line\":494,\"column\":2}}]},\"20\":{\"line\":482,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":500,\"column\":2},\"end\":{\"line\":500,\"column\":2}},{\"start\":{\"line\":500,\"column\":2},\"end\":{\"line\":500,\"column\":2}}]},\"21\":{\"line\":486,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":504,\"column\":2},\"end\":{\"line\":504,\"column\":2}},{\"start\":{\"line\":504,\"column\":2},\"end\":{\"line\":504,\"column\":2}}]},\"22\":{\"line\":491,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":509,\"column\":2},\"end\":{\"line\":509,\"column\":2}},{\"start\":{\"line\":509,\"column\":2},\"end\":{\"line\":509,\"column\":2}}]},\"23\":{\"line\":496,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":514,\"column\":2},\"end\":{\"line\":514,\"column\":2}},{\"start\":{\"line\":514,\"column\":2},\"end\":{\"line\":514,\"column\":2}}]},\"24\":{\"line\":496,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":514,\"column\":6},\"end\":{\"line\":514,\"column\":36}},{\"start\":{\"line\":514,\"column\":40},\"end\":{\"line\":514,\"column\":72}}]},\"25\":{\"line\":502,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":520,\"column\":2},\"end\":{\"line\":520,\"column\":2}},{\"start\":{\"line\":520,\"column\":2},\"end\":{\"line\":520,\"column\":2}}]},\"26\":{\"line\":502,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":520,\"column\":6},\"end\":{\"line\":520,\"column\":35}},{\"start\":{\"line\":520,\"column\":39},\"end\":{\"line\":520,\"column\":51}},{\"start\":{\"line\":520,\"column\":55},\"end\":{\"line\":520,\"column\":69}}]},\"27\":{\"line\":575,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":596,\"column\":2},\"end\":{\"line\":596,\"column\":2}},{\"start\":{\"line\":596,\"column\":2},\"end\":{\"line\":596,\"column\":2}}]},\"28\":{\"line\":580,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":602,\"column\":2},\"end\":{\"line\":602,\"column\":2}},{\"start\":{\"line\":602,\"column\":2},\"end\":{\"line\":602,\"column\":2}}]},\"29\":{\"line\":584,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":606,\"column\":2},\"end\":{\"line\":606,\"column\":2}},{\"start\":{\"line\":606,\"column\":2},\"end\":{\"line\":606,\"column\":2}}]},\"30\":{\"line\":605,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":628,\"column\":2},\"end\":{\"line\":628,\"column\":2}},{\"start\":{\"line\":628,\"column\":2},\"end\":{\"line\":628,\"column\":2}}]},\"31\":{\"line\":631,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":655,\"column\":2},\"end\":{\"line\":655,\"column\":2}},{\"start\":{\"line\":655,\"column\":2},\"end\":{\"line\":655,\"column\":2}}]},\"32\":{\"line\":635,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":660,\"column\":2},\"end\":{\"line\":660,\"column\":2}},{\"start\":{\"line\":660,\"column\":2},\"end\":{\"line\":660,\"column\":2}}]},\"33\":{\"line\":639,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":665,\"column\":2},\"end\":{\"line\":665,\"column\":2}},{\"start\":{\"line\":665,\"column\":2},\"end\":{\"line\":665,\"column\":2}}]},\"34\":{\"line\":666,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":692,\"column\":2},\"end\":{\"line\":692,\"column\":2}},{\"start\":{\"line\":692,\"column\":2},\"end\":{\"line\":692,\"column\":2}}]},\"35\":{\"line\":690,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":717,\"column\":2},\"end\":{\"line\":717,\"column\":2}},{\"start\":{\"line\":717,\"column\":2},\"end\":{\"line\":717,\"column\":2}}]},\"36\":{\"line\":732,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":762,\"column\":2},\"end\":{\"line\":762,\"column\":2}},{\"start\":{\"line\":762,\"column\":2},\"end\":{\"line\":762,\"column\":2}}]},\"37\":{\"line\":758,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":790,\"column\":2},\"end\":{\"line\":790,\"column\":2}},{\"start\":{\"line\":790,\"column\":2},\"end\":{\"line\":790,\"column\":2}}]},\"38\":{\"line\":783,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":816,\"column\":2},\"end\":{\"line\":816,\"column\":2}},{\"start\":{\"line\":816,\"column\":2},\"end\":{\"line\":816,\"column\":2}}]},\"39\":{\"line\":810,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":845,\"column\":2},\"end\":{\"line\":845,\"column\":2}},{\"start\":{\"line\":845,\"column\":2},\"end\":{\"line\":845,\"column\":2}}]},\"40\":{\"line\":840,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":876,\"column\":2},\"end\":{\"line\":876,\"column\":2}},{\"start\":{\"line\":876,\"column\":2},\"end\":{\"line\":876,\"column\":2}}]},\"41\":{\"line\":844,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":881,\"column\":2},\"end\":{\"line\":881,\"column\":2}},{\"start\":{\"line\":881,\"column\":2},\"end\":{\"line\":881,\"column\":2}}]},\"42\":{\"line\":848,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":886,\"column\":2},\"end\":{\"line\":886,\"column\":2}},{\"start\":{\"line\":886,\"column\":2},\"end\":{\"line\":886,\"column\":2}}]},\"43\":{\"line\":852,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":891,\"column\":2},\"end\":{\"line\":891,\"column\":2}},{\"start\":{\"line\":891,\"column\":2},\"end\":{\"line\":891,\"column\":2}}]},\"44\":{\"line\":886,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":925,\"column\":2},\"end\":{\"line\":925,\"column\":2}},{\"start\":{\"line\":925,\"column\":2},\"end\":{\"line\":925,\"column\":2}}]},\"45\":{\"line\":891,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":931,\"column\":2},\"end\":{\"line\":931,\"column\":2}},{\"start\":{\"line\":931,\"column\":2},\"end\":{\"line\":931,\"column\":2}}]},\"46\":{\"line\":924,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":964,\"column\":2},\"end\":{\"line\":964,\"column\":2}},{\"start\":{\"line\":964,\"column\":2},\"end\":{\"line\":964,\"column\":2}}]},\"47\":{\"line\":929,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":970,\"column\":2},\"end\":{\"line\":970,\"column\":2}},{\"start\":{\"line\":970,\"column\":2},\"end\":{\"line\":970,\"column\":2}}]}},\"code\":[\"var Request = require('./Request.js');\",\"var Promise = require('pinkyswear');\",\"var extend = require('extend');\",\"\",\"/**\",\" * IngestAPI Object\",\" * @param {object}  options        Options to override the default.\",\" * @param {string}  options.host   Override the default live host.\",\" * @param {string}  options.token  Auth token to use for requests.\",\" */\",\"function IngestAPI (options) {\",\"\",\"  this.defaults = {\",\"    'host': 'https://api.ingest.io',\",\"    'videos': '/videos',\",\"    'videoById': '/videos/<%=id%>',\",\"    'thumbnails': '/videos/<%=id%>/thumbnails',\",\"    'trash': '/videos?filter=trashed',\",\"    'networks': '/networks',\",\"    'networksKeys': '/networks/keys',\",\"    'networksKeysById': '/networks/keys/<%=id%>',\",\"    'inputs': '/encoding/inputs',\",\"    'inputsById' : '/encoding/inputs/<%=id%>',\",\"    'inputsUpload' : '/encoding/inputs/<%=id%>/upload',\",\"    'inputsUploadInitialize': '/encoding/inputs/<%=id%>/upload<%=method%>',\",\"    'inputsUploadSign': '/encoding/inputs/<%=id%>/upload/sign<%=method%>',\",\"    'inputsUploadComplete': '/encoding/inputs/<%=id%>/upload/complete',\",\"    'inputsUploadAbort': '/encoding/inputs/<%=id%>/upload/abort',\",\"    'uploadMethods': {\",\"      'param': '?type=',\",\"      'singlePart': 'amazon',\",\"      'multiPart': 'amazonMP'\",\"    },\",\"    'deleteMethods': {\",\"      'permanent': '?permanent=1'\",\"    },\",\"    'search': '/<%=resource%>?search=<%=input%>'\",\"  };\",\"\",\"  // Create a config object by extending the defaults with the pass options.\",\"  this.config = extend(true, {}, this.defaults, options);\",\"\",\"  if (this.config.token) {\",\"    // Store the token for future use.\",\"    this.setToken(this.config.token);\",\"  }\",\"\",\"  this.request = Request;\",\"\",\"}\",\"\",\"/**\",\" * Set the auth token to use.\",\" * @param   {String}        token Auth token to use.\",\" */\",\"IngestAPI.prototype.setToken = function (token) {\",\"\",\"  // Make sure a valid value is passed.\",\"  if (typeof token !== 'string') {\",\"    throw new Error('IngestAPI requires an authentication token passed as a string.');\",\"  }\",\"\",\"  this.token = token;\",\"\",\"};\",\"\",\"/**\",\" * Return the current auth token.\",\" * @return  {String}        Current auth token.\",\" */\",\"IngestAPI.prototype.getToken = function () {\",\"\",\"  if (!this.token) {\",\"    throw new Error('IngestAPI requires a token to be set.');\",\"  }\",\"\",\"  return this.token;\",\"\",\"};\",\"\",\"/**\",\" * Return a list of videos for the current user and network.\",\" * @param {object} headers Javascript object representing headers to apply to the call.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.getVideos = function (headers) {\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.videos,\",\"    token: this.getToken(),\",\"    headers: headers\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Return a video match the supplied id.\",\" * @param   {String}       videoId ID for the requested video.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.getVideoById = function (videoId) {\",\"\",\"  var url;\",\"  var tokens;\",\"\",\"  if (typeof videoId !== 'string') {\",\"    // Wrap the error in a promise so the user is still catching the errors.\",\"    return this.promisify(false,\",\"      'IngestAPI getVideoById requires a valid videoId as a string.');\",\"  }\",\"\",\"  tokens = {\",\"    id: videoId\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.videoById, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken()\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Add a new video.\",\" * @param   {object}  videoObject An object representing the video to add.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.addVideo = function (videoObject) {\",\"\",\"  // Validate the object being passed in.\",\"  if (typeof videoObject !== 'object') {\",\"    // Wrap the error in a promise.\",\"    return this.promisify(false,\",\"      'IngestAPI addVideo requires a video object.');\",\"  }\",\"\",\"  // Return the promise from the request.\",\"  return new Request({\",\"    url: this.config.host + this.config.videos,\",\"    token: this.getToken(),\",\"    method: 'POST',\",\"    data: videoObject\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Update an existing video with new content.\",\" * @param  {object} video   An object representing the video.\",\" * @return {Promise}        A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.updateVideo = function (video) {\",\"\",\"  var url;\",\"  var tokens;\",\"\",\"  if (typeof video !== 'object') {\",\"    return this.promisify(false,\",\"      'IngestAPI update requires a video to be passed as an object.');\",\"  }\",\"\",\"  tokens = {\",\"    id: video.id\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.videoById, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'PATCH',\",\"    data: video\",\"  });\",\"};\",\"\",\"/**\",\" * Updates a batch of videos in one HTTP request.\",\" * @param {array} videos  An array of video objects.\",\" * @return {Promise}      A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.updateVideos = function (videos) {\",\"  if (!Array.isArray(videos)) {\",\"    return this.promisify(false,\",\"      'IngestAPI updateVideos requires an array of videos');\",\"  }\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.videos,\",\"    token: this.getToken(),\",\"    method: 'PATCH',\",\"    data: videos\",\"  });\",\"};\",\"\",\"/**\",\" * Deletes a batch of videos in one HTTP request.\",\" * @private\",\" * @param {array}    videos     An array of video objects.\",\" * @param {boolean}  permanent  A flag to permanently delete each video.\",\" *\",\" * @return {Promise}            A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype._deleteVideos = function (videos, permanent) {\",\"  var url;\",\"\",\"  if (!Array.isArray(videos)) {\",\"    return this.promisify(false,\",\"      'IngestAPI deleteVideos requires an array of videos');\",\"  }\",\"\",\"  url = this.config.host + this.config.videos;\",\"\",\"  if (permanent === true) {\",\"    url += this.config.deleteMethods.permanent;\",\"  }\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'DELETE',\",\"    data: videos\",\"  });\",\"};\",\"\",\"/**\",\" * Delete a batch of videos.\",\" *\",\" * @param  {array}  videos  An array of video objects.\",\" *\",\" * @return {Promise}        A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.deleteVideos = function (videos) {\",\"  return this._deleteVideos(videos);\",\"};\",\"\",\"/**\",\" * Permanently delete a batch of videos.\",\" *\",\" * @param  {array}  videos  An array of video objects.\",\" *\",\" * @return {Promise}        A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.permanentlyDeleteVideos = function (videos) {\",\"  return this._deleteVideos(videos, true);\",\"};\",\"\",\"/**\",\" * Delete a video.\",\" * @private\",\" * @param  {string}   videoId   ID for the video to delete.\",\" * @param  {boolean}  permanent A flag to permanently delete the video.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype._deleteVideo = function (videoId, permanent) {\",\"  var url;\",\"  var tokens;\",\"\",\"  if (typeof videoId !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI deleteVideo requires a video ID passed as a string.');\",\"  }\",\"\",\"  tokens = {\",\"    id: videoId\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.videoById, tokens);\",\"\",\"  if (permanent === true) {\",\"    url += this.config.deleteMethods.permanent;\",\"  }\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'DELETE'\",\"  });\",\"};\",\"\",\"/**\",\" * Delete a video.\",\" * @param  {string}   videoId   ID for the video to delete.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.deleteVideo = function (videoId) {\",\"  return this._deleteVideo(videoId);\",\"};\",\"\",\"/**\",\" * Permanently delete a video.\",\" *\",\" * @param  {string}   videoId   ID for the video to delete.\",\" * @return {Promise}            A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.permanentlyDeleteVideo = function (videoId) {\",\"  return this._deleteVideo(videoId, true);\",\"};\",\"\",\"/**\",\" * Return a subset of videos that match the search terms.\",\" * @param  {string} resource The type of resources to search for, playlist or videos.\",\" * @param  {string} input    The search terms to match against.\",\" * @param  {object} headers  The headers to be passed to the request.\",\" * @return {Promise}          A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.searchVideos = function (resource, input, headers) {\",\"\",\"  var url;\",\"\",\"  if (typeof resource !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI searchVideos requires a resource type to be passed as a string.');\",\"  }\",\"\",\"  if (typeof input !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI searchVideos requires search input to be passed as a string.');\",\"  }\",\"\",\"  url = this.parseTokens(this.config.host + this.config.search, {\",\"    resource: resource,\",\"    input: input\",\"  });\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    headers: headers\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Get the total count of videos.\",\" * @return {number} The number of videos in the current network.\",\" */\",\"IngestAPI.prototype.getVideosCount = function () {\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.videos,\",\"    token: this.getToken(),\",\"    method: 'HEAD'\",\"  }).then(this.getCountResponse.bind(this));\",\"\",\"};\",\"\",\"/**\",\" * Return the videos currently in the trash.\",\" * @param {object} Headers to be passed along with the request for pagination.\",\" *\",\" * @return {Promise} Promise/A+ spec which resovles with the trashed videos.\",\" */\",\"IngestAPI.prototype.getTrashedVideos = function (headers) {\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.trash,\",\"    token: this.getToken(),\",\"    headers: headers\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Get a count of the current videos in the trash.\",\" * @return {Promise} Promise/A+ spec which resolves with the trashed video count.\",\" */\",\"IngestAPI.prototype.getTrashedVideosCount = function () {\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.trash,\",\"    token: this.getToken(),\",\"    method: 'HEAD'\",\"  }).then(this.getCountResponse.bind(this));\",\"\",\"};\",\"\",\"/**\",\" * Handle the response from the retrieving video counts.\",\" * @param  {object} response  Request response object.\",\" * @return {number}           The resource count from the response.\",\" */\",\"IngestAPI.prototype.getCountResponse = function (response) {\",\"\",\"  return parseInt(response.headers('Resource-Count'), 10);\",\"\",\"};\",\"\",\"/**\",\" * Make a request and sign the blob to be uploaded.\",\" * @param  {object}   data            File data used to sign the upload.\",\" * @param  {string}   data.id         The uuid in the ingest service that represents a video record,\",\" * @param  {string}   data.key        The key associated with the file on AWS.\",\" * @param  {string}   data.uploadId   An id provided by amazon s3 to track multi-part uploads.\",\" * @param  {string}   data.partNumber The part of the file being signed.\",\" * @param  {boolean}  data.method     Whether or not the file requires singlepart or multipart uploading.\",\" *\",\" * @return {Promise}                  A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.signUploadBlob = function (data) {\",\"\",\"  var checkObject = this.validateUploadObject(data);\",\"  var url;\",\"  var tokens;\",\"  var signing = '';\",\"\",\"  // Make sure all the proper properties have been passed in.\",\"  if (!checkObject.valid) {\",\"    return this.promisify(false, checkObject.message);\",\"  }\",\"\",\"  if (!data.method) {\",\"    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;\",\"  }\",\"\",\"  // Replacing <%=id%> with data.id\",\"  // Replacing <%=method%> with '?type=amazon' or ''\",\"  tokens = {\",\"    id: data.id,\",\"    method: signing\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.inputsUploadSign, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'POST',\",\"    data: data\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Validate the object supplying the upload key and uploadId.\",\" * @private\",\" *\",\" * @param  {object}   data            File data used to sign the upload.\",\" * @param  {string}   data.key        The key associated with the file on AWS.\",\" * @param  {string}   data.uploadId   An id provided by amazon s3 to track multi-part uploads.\",\" *\",\" * @return {boolean}  Boolean         Representing weather or not the object is valid.\",\" **/\",\"IngestAPI.prototype._validateUploadIds = function (data) {\",\"\",\"  var result = {\",\"    valid: true,\",\"    message: ''\",\"  };\",\"\",\"  if (typeof data !== 'object') {\",\"    result.valid = false;\",\"    result.message = 'The passed value was not an object.';\",\"  }\",\"\",\"  if (typeof data.key !== 'string') {\",\"    result.valid = false;\",\"    result.message = 'Missing or invalid property : key.';\",\"  }\",\"\",\"  if (typeof data.uploadId !== 'string') {\",\"    result.valid = false;\",\"    result.message = 'Missing or invalid property : uploadId';\",\"  }\",\"\",\"  return result;\",\"};\",\"\",\"/**\",\" * Validate the object supplying the upload data.\",\" * @param  {object}   data            File data used to sign the upload.\",\" * @param  {string}   data.id         The uuid in the ingest service that represents a video record,\",\" * @param  {string}   data.key        The key associated with the file on AWS.\",\" * @param  {string}   data.uploadId   An id provided by amazon s3 to track multi-part uploads.\",\" * @param  {string}   data.partNumber The part of the file being signed.\",\" * @param  {boolean}  data.method     Whether or not the file requires singlepart or multipart uploading.\",\" *\",\" * @return {boolean}  Boolean         Representing weather or not the object is valid.\",\" **/\",\"IngestAPI.prototype.validateUploadObject = function (data) {\",\"\",\"  var validIds = this._validateUploadIds(data);\",\"  var result = {\",\"    valid: true,\",\"    message: ''\",\"  };\",\"\",\"  if (typeof data !== 'object') {\",\"    result.valid = false;\",\"    result.message = 'The passed value was not an object.';\",\"  }\",\"\",\"  // Make sure all the proper properties have been passed in.\",\"  if (!validIds.valid) {\",\"    result = validIds;\",\"  }\",\"\",\"  if (typeof data.id !== 'string') {\",\"    result.valid = false;\",\"    result.message = 'Missing or invalid property : id.';\",\"  }\",\"\",\"  if (typeof data.partNumber !== 'number') {\",\"    result.valid = false;\",\"    result.message = 'Missing or invalid property : partNumber';\",\"  }\",\"\",\"  if (!data.hasOwnProperty('method') || typeof data.method !== 'boolean') {\",\"    result.valid = false;\",\"    result.message = 'Missing or invalid property : method';\",\"  }\",\"\",\"  // For the case of single part uploads, the uploadId is not required.\",\"  if (data.hasOwnProperty('method') && !data.method && !data.uploadId) {\",\"    result.valid = true;\",\"    result.message = '';\",\"  }\",\"\",\"  return result;\",\"};\",\"\",\"/**\",\" * Replace all tokens within a given template based on the given key/value pair.\",\" * @param  {string}     template    Template for the url.\",\" * @param  {object}     hash        Key/Value pair for replacing tokens in the template.\",\" *\",\" * @example\",\" * var tokens = {\",\" *  keyInTemplate: 'replacedWith'\",\" * };\",\" *\",\" * var template = '<%=keyInTemplate%>';\",\" *\",\" * var result = parseTokens(template, tokens);  // 'replacedWith'\",\" *\",\" * @return {string}                 Parsed string.\",\" */\",\"IngestAPI.prototype.parseTokens = function (template, hash) {\",\"\",\"  var keys = Object.keys(hash);\",\"  var i;\",\"  var length = keys.length;\",\"\",\"  for (i = 0; i < length; i++) {\",\"    template = template.replace('<%=' + keys[i] + '%>', hash[keys[i]]);\",\"  }\",\"\",\"  return template;\",\"\",\"};\",\"\",\"/**\",\" * Wrapper function to wrap a value in either a reject or resolve.\",\" * @param  {boolean} state Rejection or Approval.\",\" * @param  {*}       value Value to pass back to the promise.\",\" * @return {Promise}       Promise/A+ spec promise.\",\" */\",\"IngestAPI.prototype.promisify = function (state, value) {\",\"\",\"  var promise = Promise();\",\"\",\"  promise(state, [value]);\",\"\",\"  return promise;\",\"\",\"};\",\"\",\"/**\",\" * Get the current network primary key in RSA format.\",\" * @return {Promise} Promise/A+ spec which resolves with the primary network key.\",\" */\",\"IngestAPI.prototype.getNetworkSecureKeys = function () {\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.networksKeys,\",\"    token: this.getToken()\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Adds a new secure key to the current network.\",\" * @param {object}  data        The object containing data for the secure key entry.\",\" * @param {string}  data.title  Optional. The title of the secure key. Will default to \\\"Default Key Title\\\"\",\" * @param {string}  data.key    The public key in RSA format.\",\" *\",\" * @return {Promise}          A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.addNetworkSecureKey = function (data) {\",\"  if (typeof data !== 'object') {\",\"    return this.promisify(false,\",\"      'IngestAPI addNetworkSecureKey requires data to be passed as an object.');\",\"  }\",\"\",\"  // The title must be a string.\",\"  if (typeof data.title !== 'string') {\",\"    data.title = '';\",\"  }\",\"\",\"  if (typeof data.key !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');\",\"  }\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.networksKeys,\",\"    token: this.getToken(),\",\"    method: 'POST',\",\"    data: data\",\"  });\",\"};\",\"\",\"/**\",\" * Retrieves a single network secure key entry based on the UUID given.\",\" * @param {string}  id  The UUID of the secure key entry.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.getNetworkSecureKeyById = function (id) {\",\"  var tokens, url;\",\"\",\"  if (typeof id !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');\",\"  }\",\"\",\"  tokens = {\",\"    id: id\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.networksKeysById, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken()\",\"  });\",\"};\",\"\",\"/**\",\" * Updates an individual secure key entry in the current network.\",\" * @param {object}  data        The object containing data for the secure key entry.\",\" * @param {string}  data.title  The title for the current network.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.updateNetworkSecureKey = function (data) {\",\"  var tokens, url;\",\"\",\"  if (typeof data !== 'object') {\",\"    return this.promisify(false,\",\"      'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');\",\"  }\",\"\",\"  if (typeof data.id !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI updateNetworkSecureKeyById requires a param \\\"id\\\" to be a string.');\",\"  }\",\"\",\"  if (typeof data.title !== 'string') {\",\"    data.title = '';\",\"  }\",\"\",\"  tokens = {\",\"    id: data.id\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.networksKeysById, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'PATCH',\",\"    data: data\",\"  });\",\"};\",\"\",\"/**\",\" * Deletes a single network secure key entry based on the UUID given.\",\" * @param {string}  id  The UUID of the secure key entry.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.deleteNetworkSecureKeyById = function (id) {\",\"  var tokens, url;\",\"\",\"  if (typeof id !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');\",\"  }\",\"\",\"  tokens = {\",\"    id: id\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.networksKeysById, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'DELETE'\",\"  });\",\"};\",\"\",\"/**\",\" * Retrieve all thumbnails for a provided video id.\",\" * @param {string} id of the video to retrieve thumbnails for.\",\" */\",\"IngestAPI.prototype.getVideoThumbnails = function (id) {\",\"  var tokens, url;\",\"\",\"  if (typeof id !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI getVideoThumbnails requires an id to be passed as a string.');\",\"  }\",\"\",\"  tokens = {\",\"    id: id\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.thumbnails, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken()\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Return a list of inputs for the current user and network.\",\" * @param  {object}  headers Javascript object representing headers to apply to the call.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.getInputs = function (headers) {\",\"\",\"  return new Request({\",\"    url: this.config.host + this.config.inputs,\",\"    token: this.getToken(),\",\"    headers: headers\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Return an input that matches the supplied id.\",\" * @param  {string}  inputId ID for the requested video.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.getInputsById = function (inputId) {\",\"\",\"  var url;\",\"  var tokens;\",\"\",\"  if (typeof inputId !== 'string') {\",\"    // Wrap the error in a promise so the user is still catching the errors.\",\"    return this.promisify(false,\",\"      'IngestAPI getInputsById requires a valid inputId as a string.');\",\"  }\",\"\",\"  tokens = {\",\"    id: inputId\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.inputsById, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken()\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Add a new input.\",\" * @param  {array}  inputObject An object representing the input to add.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.addInputs = function (inputs) {\",\"\",\"  // Validate the object being passed in.\",\"  if (!Array.isArray(inputs)) {\",\"    // Wrap the error in a promise.\",\"    return this.promisify(false,\",\"      'IngestAPI addInput requires an array of input objects.');\",\"  }\",\"\",\"  // Return the promise from the request.\",\"  return new Request({\",\"    url: this.config.host + this.config.inputs,\",\"    token: this.getToken(),\",\"    method: 'POST',\",\"    data: inputs\",\"  });\",\"};\",\"\",\"/**\",\" * Delete a single input\",\" * @param  {string}  inputId An id for the input you wish to delete\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.deleteInput = function (inputId) {\",\"\",\"  var url;\",\"  var tokens;\",\"\",\"  if (typeof inputId !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI deleteInput requires a video ID passed as a string.');\",\"  }\",\"\",\"  tokens = {\",\"    id: inputId\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.inputsById, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'DELETE'\",\"  });\",\"\",\"};\",\"\",\"/**\",\" * Delete many inputs\",\" * @param  {array}   inputs An array of inputs to be deleted\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.deleteInputs = function (inputs) {\",\"\",\"  var url;\",\"\",\"  if (!Array.isArray(inputs)) {\",\"    return this.promisify(false,\",\"      'IngestAPI deleteInputs requires an array of input Ids');\",\"  }\",\"\",\"  url = this.config.host + this.config.inputs;\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'DELETE',\",\"    data: inputs\",\"  });\",\"};\",\"\",\"/**\",\" * Initializes an Input for upload\",\" * @param  {string}  inputId     An id for the input you wish to delete\",\" * @param  {object}  data        The object containing data for the upload initialization.\",\" * @param  {string}  data.type   The content type of the item you wish to upload\",\" * @param  {number}  data.size   The size of the item you wish to upload\",\" * @param  {boolean} data.method A boolean representing whether or not it is a multipart upload\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.initializeInputUpload = function (inputId, data) {\",\"\",\"  var url;\",\"  var tokens;\",\"  var signing = '';\",\"\",\"  if (typeof inputId !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');\",\"  }\",\"\",\"  if (typeof data.type !== 'string') {\",\"    return this.promisify(false,\",\"      'Missing or invalid property : type.');\",\"  }\",\"\",\"  if (typeof data.size !== 'number') {\",\"    return this.promisify(false,\",\"      'Missing or invalid property : size');\",\"  }\",\"\",\"  if (!data.method) {\",\"    signing = this.config.uploadMethods.param + this.config.uploadMethods.singlePart;\",\"  }\",\"\",\"  tokens = {\",\"    id: inputId,\",\"    method: signing\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.inputsUploadInitialize, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'POST',\",\"    data: data\",\"  });\",\"};\",\"\",\"/**\",\" * Completes an input upload\",\" * @param  {string}  inputId        An id for the input you wish to delete\",\" * @param  {object}  data           The object containing data for the upload completion.\",\" * @param  {string}  data.uploadId  The uploadId you wish to complete the upload for\",\" * @param  {number}  data.key       The key of the upload you wish to complete\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.completeInputUpload = function (inputId, data) {\",\"\",\"  var url;\",\"  var tokens;\",\"  var checkObject = this._validateUploadIds(data);\",\"\",\"  if (typeof inputId !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');\",\"  }\",\"\",\"  // Make sure all the proper properties have been passed in.\",\"  if (!checkObject.valid) {\",\"    return this.promisify(false, checkObject.message);\",\"  }\",\"\",\"  tokens = {\",\"    id: inputId\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.inputsUploadComplete, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'POST',\",\"    data: data\",\"  });\",\"};\",\"\",\"/**\",\" * Completes an input upload\",\" * @param  {string}  inputId        An id for the input you wish to delete\",\" * @param  {object}  data           The object containing data for the upload completion.\",\" * @param  {string}  data.uploadId  The uploadId you wish to complete the upload for\",\" * @param  {number}  data.key       The key of the upload you wish to complete\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"IngestAPI.prototype.abortInputUpload = function (inputId, data) {\",\"\",\"  var url;\",\"  var tokens;\",\"  var checkObject = this._validateUploadIds(data);\",\"\",\"  if (typeof inputId !== 'string') {\",\"    return this.promisify(false,\",\"      'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');\",\"  }\",\"\",\"  // Make sure all the proper properties have been passed in.\",\"  if (!checkObject.valid) {\",\"    return this.promisify(false, checkObject.message);\",\"  }\",\"\",\"  tokens = {\",\"    id: inputId\",\"  };\",\"\",\"  url = this.parseTokens(this.config.host + this.config.inputsUploadAbort, tokens);\",\"\",\"  return new Request({\",\"    url: url,\",\"    token: this.getToken(),\",\"    method: 'POST',\",\"    data: data\",\"  });\",\"};\",\"\",\"module.exports = IngestAPI;\"]};\n}\n__cov__Lwiq0RdkJ3UGdwyqgPGVA = __cov__Lwiq0RdkJ3UGdwyqgPGVA['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/IngestAPI.js'];\n__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['1']++;var Request=require('./Request.js');__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['2']++;var Promise=require('pinkyswear');__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['3']++;var extend=require('extend');function IngestAPI(options){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['1']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['5']++;this.defaults={'host':'https://api.ingest.io','videos':'/videos','videoById':'/videos/<%=id%>','thumbnails':'/videos/<%=id%>/thumbnails','trash':'/videos?filter=trashed','networks':'/networks','networksKeys':'/networks/keys','networksKeysById':'/networks/keys/<%=id%>','inputs':'/encoding/inputs','inputsById':'/encoding/inputs/<%=id%>','inputsUpload':'/encoding/inputs/<%=id%>/upload','inputsUploadInitialize':'/encoding/inputs/<%=id%>/upload<%=method%>','inputsUploadSign':'/encoding/inputs/<%=id%>/upload/sign<%=method%>','inputsUploadComplete':'/encoding/inputs/<%=id%>/upload/complete','inputsUploadAbort':'/encoding/inputs/<%=id%>/upload/abort','uploadMethods':{'param':'?type=','singlePart':'amazon','multiPart':'amazonMP'},'deleteMethods':{'permanent':'?permanent=1'},'search':'/<%=resource%>?search=<%=input%>'};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['6']++;this.config=extend(true,{},this.defaults,options);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['7']++;if(this.config.token){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['1'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['8']++;this.setToken(this.config.token);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['1'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['9']++;this.request=Request;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['10']++;IngestAPI.prototype.setToken=function(token){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['2']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['11']++;if(typeof token!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['2'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['12']++;throw new Error('IngestAPI requires an authentication token passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['2'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['13']++;this.token=token;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['14']++;IngestAPI.prototype.getToken=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['3']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['15']++;if(!this.token){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['3'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['16']++;throw new Error('IngestAPI requires a token to be set.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['3'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['17']++;return this.token;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['18']++;IngestAPI.prototype.getVideos=function(headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['4']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['19']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['20']++;IngestAPI.prototype.getVideoById=function(videoId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['5']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['21']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['22']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['23']++;if(typeof videoId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['4'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['24']++;return this.promisify(false,'IngestAPI getVideoById requires a valid videoId as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['4'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['25']++;tokens={id:videoId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['26']++;url=this.parseTokens(this.config.host+this.config.videoById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['27']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['28']++;IngestAPI.prototype.addVideo=function(videoObject){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['6']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['29']++;if(typeof videoObject!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['5'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['30']++;return this.promisify(false,'IngestAPI addVideo requires a video object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['5'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['31']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),method:'POST',data:videoObject});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['32']++;IngestAPI.prototype.updateVideo=function(video){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['7']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['33']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['34']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['35']++;if(typeof video!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['6'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['36']++;return this.promisify(false,'IngestAPI update requires a video to be passed as an object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['6'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['37']++;tokens={id:video.id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['38']++;url=this.parseTokens(this.config.host+this.config.videoById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['39']++;return new Request({url:url,token:this.getToken(),method:'PATCH',data:video});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['40']++;IngestAPI.prototype.updateVideos=function(videos){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['8']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['41']++;if(!Array.isArray(videos)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['7'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['42']++;return this.promisify(false,'IngestAPI updateVideos requires an array of videos');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['7'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['43']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),method:'PATCH',data:videos});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['44']++;IngestAPI.prototype._deleteVideos=function(videos,permanent){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['9']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['45']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['46']++;if(!Array.isArray(videos)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['8'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['47']++;return this.promisify(false,'IngestAPI deleteVideos requires an array of videos');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['8'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['48']++;url=this.config.host+this.config.videos;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['49']++;if(permanent===true){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['9'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['50']++;url+=this.config.deleteMethods.permanent;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['9'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['51']++;return new Request({url:url,token:this.getToken(),method:'DELETE',data:videos});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['52']++;IngestAPI.prototype.deleteVideos=function(videos){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['10']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['53']++;return this._deleteVideos(videos);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['54']++;IngestAPI.prototype.permanentlyDeleteVideos=function(videos){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['11']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['55']++;return this._deleteVideos(videos,true);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['56']++;IngestAPI.prototype._deleteVideo=function(videoId,permanent){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['12']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['57']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['58']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['59']++;if(typeof videoId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['10'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['60']++;return this.promisify(false,'IngestAPI deleteVideo requires a video ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['10'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['61']++;tokens={id:videoId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['62']++;url=this.parseTokens(this.config.host+this.config.videoById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['63']++;if(permanent===true){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['11'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['64']++;url+=this.config.deleteMethods.permanent;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['11'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['65']++;return new Request({url:url,token:this.getToken(),method:'DELETE'});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['66']++;IngestAPI.prototype.deleteVideo=function(videoId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['13']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['67']++;return this._deleteVideo(videoId);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['68']++;IngestAPI.prototype.permanentlyDeleteVideo=function(videoId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['14']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['69']++;return this._deleteVideo(videoId,true);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['70']++;IngestAPI.prototype.searchVideos=function(resource,input,headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['15']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['71']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['72']++;if(typeof resource!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['12'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['73']++;return this.promisify(false,'IngestAPI searchVideos requires a resource type to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['12'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['74']++;if(typeof input!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['13'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['75']++;return this.promisify(false,'IngestAPI searchVideos requires search input to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['13'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['76']++;url=this.parseTokens(this.config.host+this.config.search,{resource:resource,input:input});__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['77']++;return new Request({url:url,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['78']++;IngestAPI.prototype.getVideosCount=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['16']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['79']++;return new Request({url:this.config.host+this.config.videos,token:this.getToken(),method:'HEAD'}).then(this.getCountResponse.bind(this));};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['80']++;IngestAPI.prototype.getTrashedVideos=function(headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['17']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['81']++;return new Request({url:this.config.host+this.config.trash,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['82']++;IngestAPI.prototype.getTrashedVideosCount=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['18']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['83']++;return new Request({url:this.config.host+this.config.trash,token:this.getToken(),method:'HEAD'}).then(this.getCountResponse.bind(this));};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['84']++;IngestAPI.prototype.getCountResponse=function(response){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['19']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['85']++;return parseInt(response.headers('Resource-Count'),10);};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['86']++;IngestAPI.prototype.signUploadBlob=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['20']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['87']++;var checkObject=this.validateUploadObject(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['88']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['89']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['90']++;var signing='';__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['91']++;if(!checkObject.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['14'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['92']++;return this.promisify(false,checkObject.message);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['14'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['93']++;if(!data.method){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['15'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['94']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['15'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['95']++;tokens={id:data.id,method:signing};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['96']++;url=this.parseTokens(this.config.host+this.config.inputsUploadSign,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['97']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['98']++;IngestAPI.prototype._validateUploadIds=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['21']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['99']++;var result={valid:true,message:''};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['100']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['16'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['101']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['102']++;result.message='The passed value was not an object.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['16'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['103']++;if(typeof data.key!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['17'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['104']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['105']++;result.message='Missing or invalid property : key.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['17'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['106']++;if(typeof data.uploadId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['18'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['107']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['108']++;result.message='Missing or invalid property : uploadId';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['18'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['109']++;return result;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['110']++;IngestAPI.prototype.validateUploadObject=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['22']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['111']++;var validIds=this._validateUploadIds(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['112']++;var result={valid:true,message:''};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['113']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['19'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['114']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['115']++;result.message='The passed value was not an object.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['19'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['116']++;if(!validIds.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['20'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['117']++;result=validIds;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['20'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['118']++;if(typeof data.id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['21'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['119']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['120']++;result.message='Missing or invalid property : id.';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['21'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['121']++;if(typeof data.partNumber!=='number'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['22'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['122']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['123']++;result.message='Missing or invalid property : partNumber';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['22'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['124']++;if((__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['24'][0]++,!data.hasOwnProperty('method'))||(__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['24'][1]++,typeof data.method!=='boolean')){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['23'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['125']++;result.valid=false;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['126']++;result.message='Missing or invalid property : method';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['23'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['127']++;if((__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['26'][0]++,data.hasOwnProperty('method'))&&(__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['26'][1]++,!data.method)&&(__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['26'][2]++,!data.uploadId)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['25'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['128']++;result.valid=true;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['129']++;result.message='';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['25'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['130']++;return result;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['131']++;IngestAPI.prototype.parseTokens=function(template,hash){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['23']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['132']++;var keys=Object.keys(hash);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['133']++;var i;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['134']++;var length=keys.length;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['135']++;for(i=0;i<length;i++){__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['136']++;template=template.replace('<%='+keys[i]+'%>',hash[keys[i]]);}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['137']++;return template;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['138']++;IngestAPI.prototype.promisify=function(state,value){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['24']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['139']++;var promise=Promise();__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['140']++;promise(state,[value]);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['141']++;return promise;};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['142']++;IngestAPI.prototype.getNetworkSecureKeys=function(){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['25']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['143']++;return new Request({url:this.config.host+this.config.networksKeys,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['144']++;IngestAPI.prototype.addNetworkSecureKey=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['26']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['145']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['27'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['146']++;return this.promisify(false,'IngestAPI addNetworkSecureKey requires data to be passed as an object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['27'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['147']++;if(typeof data.title!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['28'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['148']++;data.title='';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['28'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['149']++;if(typeof data.key!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['29'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['150']++;return this.promisify(false,'IngestAPI addNetworkSecureKey requires that the key be a string in RSA public key format.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['29'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['151']++;return new Request({url:this.config.host+this.config.networksKeys,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['152']++;IngestAPI.prototype.getNetworkSecureKeyById=function(id){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['27']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['153']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['154']++;if(typeof id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['30'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['155']++;return this.promisify(false,'IngestAPI getNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['30'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['156']++;tokens={id:id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['157']++;url=this.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['158']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['159']++;IngestAPI.prototype.updateNetworkSecureKey=function(data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['28']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['160']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['161']++;if(typeof data!=='object'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['31'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['162']++;return this.promisify(false,'IngestAPI updateNetworkSecureKeyById requires data to be passed as an object.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['31'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['163']++;if(typeof data.id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['32'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['164']++;return this.promisify(false,'IngestAPI updateNetworkSecureKeyById requires a param \"id\" to be a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['32'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['165']++;if(typeof data.title!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['33'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['166']++;data.title='';}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['33'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['167']++;tokens={id:data.id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['168']++;url=this.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['169']++;return new Request({url:url,token:this.getToken(),method:'PATCH',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['170']++;IngestAPI.prototype.deleteNetworkSecureKeyById=function(id){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['29']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['171']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['172']++;if(typeof id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['34'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['173']++;return this.promisify(false,'IngestAPI deleteNetworkSecureKeyById requires an id to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['34'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['174']++;tokens={id:id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['175']++;url=this.parseTokens(this.config.host+this.config.networksKeysById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['176']++;return new Request({url:url,token:this.getToken(),method:'DELETE'});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['177']++;IngestAPI.prototype.getVideoThumbnails=function(id){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['30']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['178']++;var tokens,url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['179']++;if(typeof id!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['35'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['180']++;return this.promisify(false,'IngestAPI getVideoThumbnails requires an id to be passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['35'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['181']++;tokens={id:id};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['182']++;url=this.parseTokens(this.config.host+this.config.thumbnails,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['183']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['184']++;IngestAPI.prototype.getInputs=function(headers){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['31']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['185']++;return new Request({url:this.config.host+this.config.inputs,token:this.getToken(),headers:headers});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['186']++;IngestAPI.prototype.getInputsById=function(inputId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['32']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['187']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['188']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['189']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['36'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['190']++;return this.promisify(false,'IngestAPI getInputsById requires a valid inputId as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['36'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['191']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['192']++;url=this.parseTokens(this.config.host+this.config.inputsById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['193']++;return new Request({url:url,token:this.getToken()});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['194']++;IngestAPI.prototype.addInputs=function(inputs){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['33']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['195']++;if(!Array.isArray(inputs)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['37'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['196']++;return this.promisify(false,'IngestAPI addInput requires an array of input objects.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['37'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['197']++;return new Request({url:this.config.host+this.config.inputs,token:this.getToken(),method:'POST',data:inputs});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['198']++;IngestAPI.prototype.deleteInput=function(inputId){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['34']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['199']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['200']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['201']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['38'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['202']++;return this.promisify(false,'IngestAPI deleteInput requires a video ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['38'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['203']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['204']++;url=this.parseTokens(this.config.host+this.config.inputsById,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['205']++;return new Request({url:url,token:this.getToken(),method:'DELETE'});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['206']++;IngestAPI.prototype.deleteInputs=function(inputs){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['35']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['207']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['208']++;if(!Array.isArray(inputs)){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['39'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['209']++;return this.promisify(false,'IngestAPI deleteInputs requires an array of input Ids');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['39'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['210']++;url=this.config.host+this.config.inputs;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['211']++;return new Request({url:url,token:this.getToken(),method:'DELETE',data:inputs});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['212']++;IngestAPI.prototype.initializeInputUpload=function(inputId,data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['36']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['213']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['214']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['215']++;var signing='';__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['216']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['40'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['217']++;return this.promisify(false,'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['40'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['218']++;if(typeof data.type!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['41'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['219']++;return this.promisify(false,'Missing or invalid property : type.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['41'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['220']++;if(typeof data.size!=='number'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['42'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['221']++;return this.promisify(false,'Missing or invalid property : size');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['42'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['222']++;if(!data.method){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['43'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['223']++;signing=this.config.uploadMethods.param+this.config.uploadMethods.singlePart;}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['43'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['224']++;tokens={id:inputId,method:signing};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['225']++;url=this.parseTokens(this.config.host+this.config.inputsUploadInitialize,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['226']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['227']++;IngestAPI.prototype.completeInputUpload=function(inputId,data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['37']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['228']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['229']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['230']++;var checkObject=this._validateUploadIds(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['231']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['44'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['232']++;return this.promisify(false,'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['44'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['233']++;if(!checkObject.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['45'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['234']++;return this.promisify(false,checkObject.message);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['45'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['235']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['236']++;url=this.parseTokens(this.config.host+this.config.inputsUploadComplete,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['237']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['238']++;IngestAPI.prototype.abortInputUpload=function(inputId,data){__cov__Lwiq0RdkJ3UGdwyqgPGVA.f['38']++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['239']++;var url;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['240']++;var tokens;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['241']++;var checkObject=this._validateUploadIds(data);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['242']++;if(typeof inputId!=='string'){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['46'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['243']++;return this.promisify(false,'IngestAPI initializeUploadInput requires a valid input ID passed as a string.');}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['46'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['244']++;if(!checkObject.valid){__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['47'][0]++;__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['245']++;return this.promisify(false,checkObject.message);}else{__cov__Lwiq0RdkJ3UGdwyqgPGVA.b['47'][1]++;}__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['246']++;tokens={id:inputId};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['247']++;url=this.parseTokens(this.config.host+this.config.inputsUploadAbort,tokens);__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['248']++;return new Request({url:url,token:this.getToken(),method:'POST',data:data});};__cov__Lwiq0RdkJ3UGdwyqgPGVA.s['249']++;module.exports=IngestAPI;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IngestAPI.js\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar __cov_du$kOe_dpr87xUQ4r0zocg = (Function('return this'))();\nif (!__cov_du$kOe_dpr87xUQ4r0zocg.__coverage__) { __cov_du$kOe_dpr87xUQ4r0zocg.__coverage__ = {}; }\n__cov_du$kOe_dpr87xUQ4r0zocg = __cov_du$kOe_dpr87xUQ4r0zocg.__coverage__;\nif (!(__cov_du$kOe_dpr87xUQ4r0zocg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js'])) {\n   __cov_du$kOe_dpr87xUQ4r0zocg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js'] = {\"path\":\"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":0,\"73\":0,\"74\":0,\"75\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0],\"5\":[0,0],\"6\":[0,0],\"7\":[0,0],\"8\":[0,0],\"9\":[0,0],\"10\":[0,0],\"11\":[0,0],\"12\":[0,0]},\"f\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0},\"fnMap\":{\"1\":{\"name\":\"Request\",\"line\":19,\"loc\":{\"start\":{\"line\":17,\"column\":14},\"end\":{\"line\":17,\"column\":33}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":53,\"loc\":{\"start\":{\"line\":52,\"column\":35},\"end\":{\"line\":52,\"column\":47}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":60,\"loc\":{\"start\":{\"line\":59,\"column\":32},\"end\":{\"line\":59,\"column\":44}}},\"4\":{\"name\":\"(anonymous_4)\",\"line\":101,\"loc\":{\"start\":{\"line\":101,\"column\":36},\"end\":{\"line\":101,\"column\":52}}},\"5\":{\"name\":\"(anonymous_5)\",\"line\":126,\"loc\":{\"start\":{\"line\":128,\"column\":40},\"end\":{\"line\":128,\"column\":59}}},\"6\":{\"name\":\"(anonymous_6)\",\"line\":143,\"loc\":{\"start\":{\"line\":146,\"column\":36},\"end\":{\"line\":146,\"column\":56}}},\"7\":{\"name\":\"(anonymous_7)\",\"line\":157,\"loc\":{\"start\":{\"line\":161,\"column\":36},\"end\":{\"line\":161,\"column\":56}}},\"8\":{\"name\":\"(anonymous_8)\",\"line\":183,\"loc\":{\"start\":{\"line\":188,\"column\":33},\"end\":{\"line\":188,\"column\":52}}},\"9\":{\"name\":\"(anonymous_9)\",\"line\":191,\"loc\":{\"start\":{\"line\":196,\"column\":37},\"end\":{\"line\":196,\"column\":49}}},\"10\":{\"name\":\"(anonymous_10)\",\"line\":210,\"loc\":{\"start\":{\"line\":217,\"column\":40},\"end\":{\"line\":217,\"column\":64}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":1,\"column\":0},\"end\":{\"line\":1,\"column\":36}},\"2\":{\"start\":{\"line\":2,\"column\":0},\"end\":{\"line\":2,\"column\":31}},\"3\":{\"start\":{\"line\":4,\"column\":0},\"end\":{\"line\":4,\"column\":37}},\"4\":{\"start\":{\"line\":6,\"column\":0},\"end\":{\"line\":6,\"column\":48}},\"5\":{\"start\":{\"line\":17,\"column\":0},\"end\":{\"line\":47,\"column\":2}},\"6\":{\"start\":{\"line\":19,\"column\":2},\"end\":{\"line\":22,\"column\":4}},\"7\":{\"start\":{\"line\":24,\"column\":2},\"end\":{\"line\":24,\"column\":27}},\"8\":{\"start\":{\"line\":27,\"column\":2},\"end\":{\"line\":27,\"column\":38}},\"9\":{\"start\":{\"line\":30,\"column\":2},\"end\":{\"line\":30,\"column\":24}},\"10\":{\"start\":{\"line\":33,\"column\":2},\"end\":{\"line\":33,\"column\":54}},\"11\":{\"start\":{\"line\":36,\"column\":2},\"end\":{\"line\":39,\"column\":3}},\"12\":{\"start\":{\"line\":37,\"column\":4},\"end\":{\"line\":37,\"column\":80}},\"13\":{\"start\":{\"line\":38,\"column\":4},\"end\":{\"line\":38,\"column\":24}},\"14\":{\"start\":{\"line\":42,\"column\":2},\"end\":{\"line\":42,\"column\":21}},\"15\":{\"start\":{\"line\":45,\"column\":2},\"end\":{\"line\":45,\"column\":22}},\"16\":{\"start\":{\"line\":52,\"column\":0},\"end\":{\"line\":54,\"column\":2}},\"17\":{\"start\":{\"line\":53,\"column\":2},\"end\":{\"line\":53,\"column\":69}},\"18\":{\"start\":{\"line\":59,\"column\":0},\"end\":{\"line\":94,\"column\":2}},\"19\":{\"start\":{\"line\":61,\"column\":2},\"end\":{\"line\":61,\"column\":57}},\"20\":{\"start\":{\"line\":63,\"column\":2},\"end\":{\"line\":66,\"column\":3}},\"21\":{\"start\":{\"line\":64,\"column\":4},\"end\":{\"line\":64,\"column\":68}},\"22\":{\"start\":{\"line\":65,\"column\":4},\"end\":{\"line\":65,\"column\":11}},\"23\":{\"start\":{\"line\":68,\"column\":2},\"end\":{\"line\":68,\"column\":79}},\"24\":{\"start\":{\"line\":70,\"column\":2},\"end\":{\"line\":72,\"column\":3}},\"25\":{\"start\":{\"line\":71,\"column\":4},\"end\":{\"line\":71,\"column\":51}},\"26\":{\"start\":{\"line\":75,\"column\":2},\"end\":{\"line\":84,\"column\":3}},\"27\":{\"start\":{\"line\":78,\"column\":4},\"end\":{\"line\":81,\"column\":5}},\"28\":{\"start\":{\"line\":79,\"column\":6},\"end\":{\"line\":79,\"column\":61}},\"29\":{\"start\":{\"line\":80,\"column\":6},\"end\":{\"line\":80,\"column\":13}},\"30\":{\"start\":{\"line\":83,\"column\":4},\"end\":{\"line\":83,\"column\":71}},\"31\":{\"start\":{\"line\":87,\"column\":2},\"end\":{\"line\":92,\"column\":3}},\"32\":{\"start\":{\"line\":88,\"column\":4},\"end\":{\"line\":88,\"column\":85}},\"33\":{\"start\":{\"line\":89,\"column\":4},\"end\":{\"line\":89,\"column\":37}},\"34\":{\"start\":{\"line\":91,\"column\":4},\"end\":{\"line\":91,\"column\":24}},\"35\":{\"start\":{\"line\":101,\"column\":0},\"end\":{\"line\":122,\"column\":2}},\"36\":{\"start\":{\"line\":103,\"column\":2},\"end\":{\"line\":106,\"column\":4}},\"37\":{\"start\":{\"line\":109,\"column\":2},\"end\":{\"line\":118,\"column\":3}},\"38\":{\"start\":{\"line\":111,\"column\":4},\"end\":{\"line\":116,\"column\":5}},\"39\":{\"start\":{\"line\":112,\"column\":6},\"end\":{\"line\":112,\"column\":41}},\"40\":{\"start\":{\"line\":114,\"column\":6},\"end\":{\"line\":114,\"column\":29}},\"41\":{\"start\":{\"line\":115,\"column\":6},\"end\":{\"line\":115,\"column\":25}},\"42\":{\"start\":{\"line\":120,\"column\":2},\"end\":{\"line\":120,\"column\":16}},\"43\":{\"start\":{\"line\":128,\"column\":0},\"end\":{\"line\":140,\"column\":2}},\"44\":{\"start\":{\"line\":130,\"column\":2},\"end\":{\"line\":130,\"column\":13}},\"45\":{\"start\":{\"line\":131,\"column\":2},\"end\":{\"line\":131,\"column\":34}},\"46\":{\"start\":{\"line\":132,\"column\":2},\"end\":{\"line\":132,\"column\":31}},\"47\":{\"start\":{\"line\":135,\"column\":2},\"end\":{\"line\":138,\"column\":3}},\"48\":{\"start\":{\"line\":136,\"column\":4},\"end\":{\"line\":136,\"column\":18}},\"49\":{\"start\":{\"line\":137,\"column\":4},\"end\":{\"line\":137,\"column\":53}},\"50\":{\"start\":{\"line\":146,\"column\":0},\"end\":{\"line\":154,\"column\":2}},\"51\":{\"start\":{\"line\":149,\"column\":2},\"end\":{\"line\":149,\"column\":49}},\"52\":{\"start\":{\"line\":152,\"column\":2},\"end\":{\"line\":152,\"column\":59}},\"53\":{\"start\":{\"line\":161,\"column\":0},\"end\":{\"line\":182,\"column\":2}},\"54\":{\"start\":{\"line\":162,\"column\":2},\"end\":{\"line\":162,\"column\":68}},\"55\":{\"start\":{\"line\":163,\"column\":2},\"end\":{\"line\":163,\"column\":24}},\"56\":{\"start\":{\"line\":166,\"column\":2},\"end\":{\"line\":174,\"column\":3}},\"57\":{\"start\":{\"line\":167,\"column\":4},\"end\":{\"line\":173,\"column\":5}},\"58\":{\"start\":{\"line\":168,\"column\":6},\"end\":{\"line\":168,\"column\":36}},\"59\":{\"start\":{\"line\":170,\"column\":6},\"end\":{\"line\":172,\"column\":8}},\"60\":{\"start\":{\"line\":176,\"column\":2},\"end\":{\"line\":180,\"column\":4}},\"61\":{\"start\":{\"line\":188,\"column\":0},\"end\":{\"line\":191,\"column\":2}},\"62\":{\"start\":{\"line\":190,\"column\":2},\"end\":{\"line\":190,\"column\":33}},\"63\":{\"start\":{\"line\":196,\"column\":0},\"end\":{\"line\":210,\"column\":2}},\"64\":{\"start\":{\"line\":199,\"column\":2},\"end\":{\"line\":208,\"column\":3}},\"65\":{\"start\":{\"line\":202,\"column\":4},\"end\":{\"line\":206,\"column\":5}},\"66\":{\"start\":{\"line\":203,\"column\":6},\"end\":{\"line\":203,\"column\":54}},\"67\":{\"start\":{\"line\":205,\"column\":6},\"end\":{\"line\":205,\"column\":50}},\"68\":{\"start\":{\"line\":217,\"column\":0},\"end\":{\"line\":235,\"column\":2}},\"69\":{\"start\":{\"line\":219,\"column\":2},\"end\":{\"line\":221,\"column\":6}},\"70\":{\"start\":{\"line\":224,\"column\":2},\"end\":{\"line\":231,\"column\":3}},\"71\":{\"start\":{\"line\":226,\"column\":4},\"end\":{\"line\":229,\"column\":5}},\"72\":{\"start\":{\"line\":227,\"column\":6},\"end\":{\"line\":227,\"column\":20}},\"73\":{\"start\":{\"line\":228,\"column\":6},\"end\":{\"line\":228,\"column\":12}},\"74\":{\"start\":{\"line\":233,\"column\":2},\"end\":{\"line\":233,\"column\":16}},\"75\":{\"start\":{\"line\":237,\"column\":0},\"end\":{\"line\":237,\"column\":25}}},\"branchMap\":{\"1\":{\"line\":38,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":36,\"column\":2},\"end\":{\"line\":36,\"column\":2}},{\"start\":{\"line\":36,\"column\":2},\"end\":{\"line\":36,\"column\":2}}]},\"2\":{\"line\":64,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":63,\"column\":2},\"end\":{\"line\":63,\"column\":2}},{\"start\":{\"line\":63,\"column\":2},\"end\":{\"line\":63,\"column\":2}}]},\"3\":{\"line\":71,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":70,\"column\":2},\"end\":{\"line\":70,\"column\":2}},{\"start\":{\"line\":70,\"column\":2},\"end\":{\"line\":70,\"column\":2}}]},\"4\":{\"line\":76,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":75,\"column\":2},\"end\":{\"line\":75,\"column\":2}},{\"start\":{\"line\":75,\"column\":2},\"end\":{\"line\":75,\"column\":2}}]},\"5\":{\"line\":79,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":78,\"column\":4},\"end\":{\"line\":78,\"column\":4}},{\"start\":{\"line\":78,\"column\":4},\"end\":{\"line\":78,\"column\":4}}]},\"6\":{\"line\":88,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":87,\"column\":2},\"end\":{\"line\":87,\"column\":2}},{\"start\":{\"line\":87,\"column\":2},\"end\":{\"line\":87,\"column\":2}}]},\"7\":{\"line\":109,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":109,\"column\":2},\"end\":{\"line\":109,\"column\":2}},{\"start\":{\"line\":109,\"column\":2},\"end\":{\"line\":109,\"column\":2}}]},\"8\":{\"line\":162,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":166,\"column\":2},\"end\":{\"line\":166,\"column\":2}},{\"start\":{\"line\":166,\"column\":2},\"end\":{\"line\":166,\"column\":2}}]},\"9\":{\"line\":162,\"type\":\"binary-expr\",\"locations\":[{\"start\":{\"line\":166,\"column\":6},\"end\":{\"line\":166,\"column\":18}},{\"start\":{\"line\":166,\"column\":22},\"end\":{\"line\":166,\"column\":69}}]},\"10\":{\"line\":194,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":199,\"column\":2},\"end\":{\"line\":199,\"column\":2}},{\"start\":{\"line\":199,\"column\":2},\"end\":{\"line\":199,\"column\":2}}]},\"11\":{\"line\":197,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":202,\"column\":4},\"end\":{\"line\":202,\"column\":4}},{\"start\":{\"line\":202,\"column\":4},\"end\":{\"line\":202,\"column\":4}}]},\"12\":{\"line\":219,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":226,\"column\":4},\"end\":{\"line\":226,\"column\":4}},{\"start\":{\"line\":226,\"column\":4},\"end\":{\"line\":226,\"column\":4}}]}},\"code\":[\"var Promise = require('pinkyswear');\",\"var extend = require('extend');\",\"\",\"var JWTUtils = require('./JWTUtils');\",\"\",\"var VALID_RESPONSE_CODES = [200, 201, 202, 204];\",\"\",\"/**\",\" * A wrapper around the XMLHttpRequest object.\",\" * @param {object}  options         Options for the request.\",\" * @param {boolean} options.async   Whether to perform the request asynchronously\",\" * @param {string}  options.method  REST verb to use for the request.\",\" * @param {string}  options.url     URL for the request.\",\" *\",\" * @return {Promise} A promise which resolves when the request is complete.\",\" */\",\"var Request = function (options) {\",\"\",\"  this.defaults = {\",\"    async: true,\",\"    method: 'GET'\",\"  };\",\"\",\"  this.promise = Promise();\",\"\",\"  // Create the XHR object for this request.\",\"  this.request = new XMLHttpRequest();\",\"\",\"  // Set up event listeners for this request.\",\"  this.setupListeners();\",\"\",\"  // Todo, merge some defaults with this.\",\"  this.options = extend(true, this.defaults, options);\",\"\",\"  // Make sure a url is passed before attempting to make the request.\",\"  if (!this.options.url) {\",\"    this.requestError('Request Error : a url is required to make the request.');\",\"    return this.promise;\",\"  }\",\"\",\"  // Make the actual request.\",\"  this.makeRequest();\",\"\",\"  // Return the promise.\",\"  return this.promise;\",\"\",\"};\",\"\",\"/**\",\" * Add event listeners to the XMLHttpRequest object.\",\" */\",\"Request.prototype.setupListeners = function () {\",\"  this.request.onreadystatechange = this.readyStateChange.bind(this);\",\"};\",\"\",\"/**\",\" * Execute the open and send of the XMLHttpRequest\",\" */\",\"Request.prototype.makeRequest = function () {\",\"\",\"  var postData = this.preparePostData(this.options.data);\",\"\",\"  if (!postData.success) {\",\"    this.requestError('Request Error : error preparing post data.');\",\"    return;\",\"  }\",\"\",\"  this.request.open(this.options.method, this.options.url, this.options.async);\",\"\",\"  if (this.options.headers) {\",\"    this.applyRequestHeaders(this.options.headers);\",\"  }\",\"\",\"  // Make the token optional.\",\"  if (this.options.token) {\",\"\",\"    // If there is a token present ensure that it's still valid.\",\"    if (JWTUtils.isExpired(this.options.token)) {\",\"      this.requestError('Request Error : token is expired.');\",\"      return;\",\"    }\",\"\",\"    this.request.setRequestHeader('Authorization', this.options.token);\",\"  }\",\"\",\"  // If there is data then we need to pass that along with the request.\",\"  if (postData.data) {\",\"    this.request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\",\"    this.request.send(postData.data);\",\"  } else {\",\"    this.request.send();\",\"  }\",\"\",\"};\",\"\",\"/**\",\" * Stringify the post data if it is present.\",\" * @param  {object} data Object to be parsed.\",\" * @return {object}      Result object with the parsed string, and a success boolean flag.\",\" */\",\"Request.prototype.preparePostData = function (data) {\",\"\",\"  var result = {\",\"    success: true,\",\"    data: data\",\"  };\",\"\",\"  // If the data is populated, and its not already a string parse it.\",\"  if (data) {\",\"\",\"    try {\",\"      result.data = JSON.stringify(data);\",\"    } catch (error) {\",\"      result.success = false;\",\"      result.data = null;\",\"    }\",\"\",\"  }\",\"\",\"  return result;\",\"\",\"};\",\"\",\"/**\",\" * Apply any supplied headers to the request object.\",\" * @param  {object} headers Array of headers to apply to the request object.\",\" */\",\"Request.prototype.applyRequestHeaders = function (headers) {\",\"\",\"  var key, i;\",\"  var keys = Object.keys(headers);\",\"  var keysLength = keys.length;\",\"\",\"  // Loop through and add the keys to the requestHeaders.\",\"  for (i = 0; i < keysLength; i++) {\",\"    key = keys[i];\",\"    this.request.setRequestHeader(key, headers[key]);\",\"  }\",\"\",\"};\",\"\",\"/**\",\" * Handle the completion of the request and fulfill the promise.\",\" * @param  {String} Response test of the request.\",\" */\",\"Request.prototype.requestComplete = function (response) {\",\"\",\"  // Process the result.\",\"  this.response = this.processResponse(response);\",\"\",\"  // Either resolve or reject the promise.\",\"  this.promise(!this.response.data.error, [this.response]);\",\"\",\"};\",\"\",\"/**\",\" * Process the response and parse certain content types.\",\" * @param  {*}  response  Response data from request.\",\" * @return {*}            Processed response data.\",\" */\",\"Request.prototype.processResponse = function (response) {\",\"  var responseType = this.request.getResponseHeader('Content-Type');\",\"  var result = response;\",\"\",\"  // Parse JSON if the result is JSON.\",\"  if (responseType && responseType.indexOf('application/json') !== -1) {\",\"    try {\",\"      result = JSON.parse(response);\",\"    } catch (error) {\",\"      result = {\",\"        error: 'JSON parsing failed. ' + error.stack\",\"      };\",\"    }\",\"  }\",\"\",\"  return {\",\"    data: result,\",\"    headers: this.request.getResponseHeader.bind(this.request),\",\"    statusCode: this.request.status\",\"  };\",\"\",\"};\",\"\",\"/**\",\" * Resolve the promise.\",\" * @param  {String} message   Error message.\",\" */\",\"Request.prototype.requestError = function (message) {\",\"  // Reject the promise.\",\"  this.promise(false, [message]);\",\"};\",\"\",\"/**\",\" * Handle ready state change events.\",\" */\",\"Request.prototype.readyStateChange = function () {\",\"\",\"  // Request is complete.\",\"  if (this.request.readyState === 4) {\",\"\",\"    // Check if the final response code is valid.\",\"    if (this.isValidResponseCode(this.request.status)) {\",\"      this.requestComplete(this.request.responseText);\",\"    } else {\",\"      this.requestError('Invalid response code.');\",\"    }\",\"\",\"  }\",\"\",\"};\",\"\",\"/**\",\" * Validate the current response code to see if the request was a success.\",\" * @param  {String}  responseCode Response Code.\",\" * @return {Boolean}              Should this be treated as a successful response code.\",\" */\",\"Request.prototype.isValidResponseCode = function (responseCode) {\",\"\",\"  var result = false,\",\"    responseCodeCount = VALID_RESPONSE_CODES.length,\",\"    i;\",\"\",\"  // Check if the supplied code is in our list of valid codes.\",\"  for (i = 0; i < responseCodeCount; i++) {\",\"\",\"    if (responseCode === VALID_RESPONSE_CODES[i]) {\",\"      result = true;\",\"      break;\",\"    }\",\"\",\"  }\",\"\",\"  return result;\",\"\",\"};\",\"\",\"module.exports = Request;\",\"\"]};\n}\n__cov_du$kOe_dpr87xUQ4r0zocg = __cov_du$kOe_dpr87xUQ4r0zocg['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/Request.js'];\n__cov_du$kOe_dpr87xUQ4r0zocg.s['1']++;var Promise=require('pinkyswear');__cov_du$kOe_dpr87xUQ4r0zocg.s['2']++;var extend=require('extend');__cov_du$kOe_dpr87xUQ4r0zocg.s['3']++;var JWTUtils=require('./JWTUtils');__cov_du$kOe_dpr87xUQ4r0zocg.s['4']++;var VALID_RESPONSE_CODES=[200,201,202,204];__cov_du$kOe_dpr87xUQ4r0zocg.s['5']++;var Request=function Request(options){__cov_du$kOe_dpr87xUQ4r0zocg.f['1']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['6']++;this.defaults={async:true,method:'GET'};__cov_du$kOe_dpr87xUQ4r0zocg.s['7']++;this.promise=Promise();__cov_du$kOe_dpr87xUQ4r0zocg.s['8']++;this.request=new XMLHttpRequest();__cov_du$kOe_dpr87xUQ4r0zocg.s['9']++;this.setupListeners();__cov_du$kOe_dpr87xUQ4r0zocg.s['10']++;this.options=extend(true,this.defaults,options);__cov_du$kOe_dpr87xUQ4r0zocg.s['11']++;if(!this.options.url){__cov_du$kOe_dpr87xUQ4r0zocg.b['1'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['12']++;this.requestError('Request Error : a url is required to make the request.');__cov_du$kOe_dpr87xUQ4r0zocg.s['13']++;return this.promise;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['1'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['14']++;this.makeRequest();__cov_du$kOe_dpr87xUQ4r0zocg.s['15']++;return this.promise;};__cov_du$kOe_dpr87xUQ4r0zocg.s['16']++;Request.prototype.setupListeners=function(){__cov_du$kOe_dpr87xUQ4r0zocg.f['2']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['17']++;this.request.onreadystatechange=this.readyStateChange.bind(this);};__cov_du$kOe_dpr87xUQ4r0zocg.s['18']++;Request.prototype.makeRequest=function(){__cov_du$kOe_dpr87xUQ4r0zocg.f['3']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['19']++;var postData=this.preparePostData(this.options.data);__cov_du$kOe_dpr87xUQ4r0zocg.s['20']++;if(!postData.success){__cov_du$kOe_dpr87xUQ4r0zocg.b['2'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['21']++;this.requestError('Request Error : error preparing post data.');__cov_du$kOe_dpr87xUQ4r0zocg.s['22']++;return;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['2'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['23']++;this.request.open(this.options.method,this.options.url,this.options.async);__cov_du$kOe_dpr87xUQ4r0zocg.s['24']++;if(this.options.headers){__cov_du$kOe_dpr87xUQ4r0zocg.b['3'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['25']++;this.applyRequestHeaders(this.options.headers);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['3'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['26']++;if(this.options.token){__cov_du$kOe_dpr87xUQ4r0zocg.b['4'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['27']++;if(JWTUtils.isExpired(this.options.token)){__cov_du$kOe_dpr87xUQ4r0zocg.b['5'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['28']++;this.requestError('Request Error : token is expired.');__cov_du$kOe_dpr87xUQ4r0zocg.s['29']++;return;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['5'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['30']++;this.request.setRequestHeader('Authorization',this.options.token);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['4'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['31']++;if(postData.data){__cov_du$kOe_dpr87xUQ4r0zocg.b['6'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['32']++;this.request.setRequestHeader('Content-type','application/json; charset=utf-8');__cov_du$kOe_dpr87xUQ4r0zocg.s['33']++;this.request.send(postData.data);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['6'][1]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['34']++;this.request.send();}};__cov_du$kOe_dpr87xUQ4r0zocg.s['35']++;Request.prototype.preparePostData=function(data){__cov_du$kOe_dpr87xUQ4r0zocg.f['4']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['36']++;var result={success:true,data:data};__cov_du$kOe_dpr87xUQ4r0zocg.s['37']++;if(data){__cov_du$kOe_dpr87xUQ4r0zocg.b['7'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['38']++;try{__cov_du$kOe_dpr87xUQ4r0zocg.s['39']++;result.data=JSON.stringify(data);}catch(error){__cov_du$kOe_dpr87xUQ4r0zocg.s['40']++;result.success=false;__cov_du$kOe_dpr87xUQ4r0zocg.s['41']++;result.data=null;}}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['7'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['42']++;return result;};__cov_du$kOe_dpr87xUQ4r0zocg.s['43']++;Request.prototype.applyRequestHeaders=function(headers){__cov_du$kOe_dpr87xUQ4r0zocg.f['5']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['44']++;var key,i;__cov_du$kOe_dpr87xUQ4r0zocg.s['45']++;var keys=Object.keys(headers);__cov_du$kOe_dpr87xUQ4r0zocg.s['46']++;var keysLength=keys.length;__cov_du$kOe_dpr87xUQ4r0zocg.s['47']++;for(i=0;i<keysLength;i++){__cov_du$kOe_dpr87xUQ4r0zocg.s['48']++;key=keys[i];__cov_du$kOe_dpr87xUQ4r0zocg.s['49']++;this.request.setRequestHeader(key,headers[key]);}};__cov_du$kOe_dpr87xUQ4r0zocg.s['50']++;Request.prototype.requestComplete=function(response){__cov_du$kOe_dpr87xUQ4r0zocg.f['6']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['51']++;this.response=this.processResponse(response);__cov_du$kOe_dpr87xUQ4r0zocg.s['52']++;this.promise(!this.response.data.error,[this.response]);};__cov_du$kOe_dpr87xUQ4r0zocg.s['53']++;Request.prototype.processResponse=function(response){__cov_du$kOe_dpr87xUQ4r0zocg.f['7']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['54']++;var responseType=this.request.getResponseHeader('Content-Type');__cov_du$kOe_dpr87xUQ4r0zocg.s['55']++;var result=response;__cov_du$kOe_dpr87xUQ4r0zocg.s['56']++;if((__cov_du$kOe_dpr87xUQ4r0zocg.b['9'][0]++,responseType)&&(__cov_du$kOe_dpr87xUQ4r0zocg.b['9'][1]++,responseType.indexOf('application/json')!==-1)){__cov_du$kOe_dpr87xUQ4r0zocg.b['8'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['57']++;try{__cov_du$kOe_dpr87xUQ4r0zocg.s['58']++;result=JSON.parse(response);}catch(error){__cov_du$kOe_dpr87xUQ4r0zocg.s['59']++;result={error:'JSON parsing failed. '+error.stack};}}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['8'][1]++;}__cov_du$kOe_dpr87xUQ4r0zocg.s['60']++;return{data:result,headers:this.request.getResponseHeader.bind(this.request),statusCode:this.request.status};};__cov_du$kOe_dpr87xUQ4r0zocg.s['61']++;Request.prototype.requestError=function(message){__cov_du$kOe_dpr87xUQ4r0zocg.f['8']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['62']++;this.promise(false,[message]);};__cov_du$kOe_dpr87xUQ4r0zocg.s['63']++;Request.prototype.readyStateChange=function(){__cov_du$kOe_dpr87xUQ4r0zocg.f['9']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['64']++;if(this.request.readyState===4){__cov_du$kOe_dpr87xUQ4r0zocg.b['10'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['65']++;if(this.isValidResponseCode(this.request.status)){__cov_du$kOe_dpr87xUQ4r0zocg.b['11'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['66']++;this.requestComplete(this.request.responseText);}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['11'][1]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['67']++;this.requestError('Invalid response code.');}}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['10'][1]++;}};__cov_du$kOe_dpr87xUQ4r0zocg.s['68']++;Request.prototype.isValidResponseCode=function(responseCode){__cov_du$kOe_dpr87xUQ4r0zocg.f['10']++;__cov_du$kOe_dpr87xUQ4r0zocg.s['69']++;var result=false,responseCodeCount=VALID_RESPONSE_CODES.length,i;__cov_du$kOe_dpr87xUQ4r0zocg.s['70']++;for(i=0;i<responseCodeCount;i++){__cov_du$kOe_dpr87xUQ4r0zocg.s['71']++;if(responseCode===VALID_RESPONSE_CODES[i]){__cov_du$kOe_dpr87xUQ4r0zocg.b['12'][0]++;__cov_du$kOe_dpr87xUQ4r0zocg.s['72']++;result=true;__cov_du$kOe_dpr87xUQ4r0zocg.s['73']++;break;}else{__cov_du$kOe_dpr87xUQ4r0zocg.b['12'][1]++;}}__cov_du$kOe_dpr87xUQ4r0zocg.s['74']++;return result;};__cov_du$kOe_dpr87xUQ4r0zocg.s['75']++;module.exports=Request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Request.js\n ** module id = 2\n ** module chunks = 0\n **/","/*\n * PinkySwear.js 2.2.2 - Minimalistic implementation of the Promises/A+ spec\n * \n * Public Domain. Use, modify and distribute it any way you like. No attribution required.\n *\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n *\n * PinkySwear is a very small implementation of the Promises/A+ specification. After compilation with the\n * Google Closure Compiler and gzipping it weighs less than 500 bytes. It is based on the implementation for \n * Minified.js and should be perfect for embedding. \n *\n *\n * PinkySwear has just three functions.\n *\n * To create a new promise in pending state, call pinkySwear():\n *         var promise = pinkySwear();\n *\n * The returned object has a Promises/A+ compatible then() implementation:\n *          promise.then(function(value) { alert(\"Success!\"); }, function(value) { alert(\"Failure!\"); });\n *\n *\n * The promise returned by pinkySwear() is a function. To fulfill the promise, call the function with true as first argument and\n * an optional array of values to pass to the then() handler. By putting more than one value in the array, you can pass more than one\n * value to the then() handlers. Here an example to fulfill a promsise, this time with only one argument: \n *         promise(true, [42]);\n *\n * When the promise has been rejected, call it with false. Again, there may be more than one argument for the then() handler:\n *         promise(true, [6, 6, 6]);\n *         \n * You can obtain the promise's current state by calling the function without arguments. It will be true if fulfilled,\n * false if rejected, and otherwise undefined.\n * \t\t   var state = promise(); \n * \n * https://github.com/timjansen/PinkySwear.js\n */\n(function(target) {\n\tvar undef;\n\n\tfunction isFunction(f) {\n\t\treturn typeof f == 'function';\n\t}\n\tfunction isObject(f) {\n\t\treturn typeof f == 'object';\n\t}\n\tfunction defer(callback) {\n\t\tif (typeof setImmediate != 'undefined')\n\t\t\tsetImmediate(callback);\n\t\telse if (typeof process != 'undefined' && process['nextTick'])\n\t\t\tprocess['nextTick'](callback);\n\t\telse\n\t\t\tsetTimeout(callback, 0);\n\t}\n\n\ttarget[0][target[1]] = function pinkySwear(extend) {\n\t\tvar state;           // undefined/null = pending, true = fulfilled, false = rejected\n\t\tvar values = [];     // an array of values as arguments for the then() handlers\n\t\tvar deferred = [];   // functions to call when set() is invoked\n\n\t\tvar set = function(newState, newValues) {\n\t\t\tif (state == null && newState != null) {\n\t\t\t\tstate = newState;\n\t\t\t\tvalues = newValues;\n\t\t\t\tif (deferred.length)\n\t\t\t\t\tdefer(function() {\n\t\t\t\t\t\tfor (var i = 0; i < deferred.length; i++)\n\t\t\t\t\t\t\tdeferred[i]();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn state;\n\t\t};\n\n\t\tset['then'] = function (onFulfilled, onRejected) {\n\t\t\tvar promise2 = pinkySwear(extend);\n\t\t\tvar callCallbacks = function() {\n\t    \t\ttry {\n\t    \t\t\tvar f = (state ? onFulfilled : onRejected);\n\t    \t\t\tif (isFunction(f)) {\n\t\t   \t\t\t\tfunction resolve(x) {\n\t\t\t\t\t\t    var then, cbCalled = 0;\n\t\t   \t\t\t\t\ttry {\n\t\t\t\t   \t\t\t\tif (x && (isObject(x) || isFunction(x)) && isFunction(then = x['then'])) {\n\t\t\t\t\t\t\t\t\t\tif (x === promise2)\n\t\t\t\t\t\t\t\t\t\t\tthrow new TypeError();\n\t\t\t\t\t\t\t\t\t\tthen['call'](x,\n\t\t\t\t\t\t\t\t\t\t\tfunction() { if (!cbCalled++) resolve.apply(undef,arguments); } ,\n\t\t\t\t\t\t\t\t\t\t\tfunction(value){ if (!cbCalled++) promise2(false,[value]);});\n\t\t\t\t   \t\t\t\t}\n\t\t\t\t   \t\t\t\telse\n\t\t\t\t   \t\t\t\t\tpromise2(true, arguments);\n\t\t   \t\t\t\t\t}\n\t\t   \t\t\t\t\tcatch(e) {\n\t\t   \t\t\t\t\t\tif (!cbCalled++)\n\t\t   \t\t\t\t\t\t\tpromise2(false, [e]);\n\t\t   \t\t\t\t\t}\n\t\t   \t\t\t\t}\n\t\t   \t\t\t\tresolve(f.apply(undef, values || []));\n\t\t   \t\t\t}\n\t\t   \t\t\telse\n\t\t   \t\t\t\tpromise2(state, values);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tpromise2(false, [e]);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (state != null)\n\t\t\t\tdefer(callCallbacks);\n\t\t\telse\n\t\t\t\tdeferred.push(callCallbacks);\n\t\t\treturn promise2;\n\t\t};\n        if(extend){\n            set = extend(set);\n        }\n\t\treturn set;\n\t};\n})(typeof module == 'undefined' ? [window, 'pinkySwear'] : [module, 'exports']);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pinkyswear/pinkyswear.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 4\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/timers-browserify/main.js\n ** module id = 5\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extend/index.js\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\nvar __cov_5jIp_6B37UzVbSEc7N$14w = (Function('return this'))();\nif (!__cov_5jIp_6B37UzVbSEc7N$14w.__coverage__) { __cov_5jIp_6B37UzVbSEc7N$14w.__coverage__ = {}; }\n__cov_5jIp_6B37UzVbSEc7N$14w = __cov_5jIp_6B37UzVbSEc7N$14w.__coverage__;\nif (!(__cov_5jIp_6B37UzVbSEc7N$14w['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js'])) {\n   __cov_5jIp_6B37UzVbSEc7N$14w['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js'] = {\"path\":\"/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0},\"b\":{\"1\":[0,0],\"2\":[0,0],\"3\":[0,0],\"4\":[0,0]},\"f\":{\"1\":0,\"2\":0},\"fnMap\":{\"1\":{\"name\":\"parseTokenPayload\",\"line\":12,\"loc\":{\"start\":{\"line\":10,\"column\":24},\"end\":{\"line\":10,\"column\":41}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":34,\"loc\":{\"start\":{\"line\":32,\"column\":27},\"end\":{\"line\":32,\"column\":44}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":10,\"column\":0},\"end\":{\"line\":25,\"column\":2}},\"2\":{\"start\":{\"line\":11,\"column\":2},\"end\":{\"line\":11,\"column\":31}},\"3\":{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":16,\"column\":3}},\"4\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":17}},\"5\":{\"start\":{\"line\":19,\"column\":2},\"end\":{\"line\":19,\"column\":38}},\"6\":{\"start\":{\"line\":22,\"column\":2},\"end\":{\"line\":22,\"column\":32}},\"7\":{\"start\":{\"line\":24,\"column\":2},\"end\":{\"line\":24,\"column\":17}},\"8\":{\"start\":{\"line\":32,\"column\":0},\"end\":{\"line\":61,\"column\":2}},\"9\":{\"start\":{\"line\":33,\"column\":2},\"end\":{\"line\":33,\"column\":29}},\"10\":{\"start\":{\"line\":35,\"column\":2},\"end\":{\"line\":35,\"column\":34}},\"11\":{\"start\":{\"line\":37,\"column\":2},\"end\":{\"line\":37,\"column\":16}},\"12\":{\"start\":{\"line\":40,\"column\":2},\"end\":{\"line\":42,\"column\":3}},\"13\":{\"start\":{\"line\":41,\"column\":4},\"end\":{\"line\":41,\"column\":18}},\"14\":{\"start\":{\"line\":44,\"column\":2},\"end\":{\"line\":44,\"column\":17}},\"15\":{\"start\":{\"line\":47,\"column\":2},\"end\":{\"line\":47,\"column\":19}},\"16\":{\"start\":{\"line\":48,\"column\":2},\"end\":{\"line\":48,\"column\":29}},\"17\":{\"start\":{\"line\":50,\"column\":2},\"end\":{\"line\":52,\"column\":3}},\"18\":{\"start\":{\"line\":51,\"column\":4},\"end\":{\"line\":51,\"column\":18}},\"19\":{\"start\":{\"line\":55,\"column\":2},\"end\":{\"line\":57,\"column\":3}},\"20\":{\"start\":{\"line\":56,\"column\":4},\"end\":{\"line\":56,\"column\":19}},\"21\":{\"start\":{\"line\":59,\"column\":2},\"end\":{\"line\":59,\"column\":16}}},\"branchMap\":{\"1\":{\"line\":16,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":14,\"column\":2}},{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":14,\"column\":2}}]},\"2\":{\"line\":42,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":40,\"column\":2},\"end\":{\"line\":40,\"column\":2}},{\"start\":{\"line\":40,\"column\":2},\"end\":{\"line\":40,\"column\":2}}]},\"3\":{\"line\":52,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":50,\"column\":2},\"end\":{\"line\":50,\"column\":2}},{\"start\":{\"line\":50,\"column\":2},\"end\":{\"line\":50,\"column\":2}}]},\"4\":{\"line\":57,\"type\":\"if\",\"locations\":[{\"start\":{\"line\":55,\"column\":2},\"end\":{\"line\":55,\"column\":2}},{\"start\":{\"line\":55,\"column\":2},\"end\":{\"line\":55,\"column\":2}}]}},\"code\":[\"/**\",\" * UTILS for dealing with jwt tokens.\",\" */\",\"\",\"/**\",\" * Parse the payload out of the JWT token.\",\" * @param  {string} token JWT Token.\",\" * @return {object}       Parsed payload object.\",\" */\",\"var parseTokenPayload = function (token) {\",\"  var parts = token.split('.');\",\"\",\"  // Return false if the token is invalid.\",\"  if (parts.length <= 1) {\",\"    return false;\",\"  }\",\"\",\"  // decode the payload portion.\",\"  var payload = window.atob(parts[1]);\",\"\",\"  // parse it as JSON\",\"  payload = JSON.parse(payload);\",\"\",\"  return payload;\",\"};\",\"\",\"/**\",\" * Return true if the provided token has expired.\",\" * @param  {string}  token JWT Token\",\" * @return {Boolean}       True if expired.\",\" */\",\"module.exports.isExpired = function (token) {\",\"  var data, exp, result, now;\",\"\",\"  data = parseTokenPayload(token);\",\"\",\"  result = true;\",\"\",\"  // Return true if the token does not parse properly.\",\"  if (!data) {\",\"    return result;\",\"  }\",\"\",\"  exp = data.exp;\",\"\",\"  // Get the unix timestamp in seconds.\",\"  now = new Date();\",\"  now = now.getTime() / 1000;\",\"\",\"  if (!exp) {\",\"    return result;\",\"  }\",\"\",\"  // If the expiry data is still in the future.\",\"  if (now < exp) {\",\"    result = false;\",\"  }\",\"\",\"  return result;\",\"\",\"};\",\"\"]};\n}\n__cov_5jIp_6B37UzVbSEc7N$14w = __cov_5jIp_6B37UzVbSEc7N$14w['/Users/sgillam-wright/Documents/Projects/Work/ingest-js-sdk/src/JWTUtils.js'];\n__cov_5jIp_6B37UzVbSEc7N$14w.s['1']++;var parseTokenPayload=function parseTokenPayload(token){__cov_5jIp_6B37UzVbSEc7N$14w.f['1']++;__cov_5jIp_6B37UzVbSEc7N$14w.s['2']++;var parts=token.split('.');__cov_5jIp_6B37UzVbSEc7N$14w.s['3']++;if(parts.length<=1){__cov_5jIp_6B37UzVbSEc7N$14w.b['1'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['4']++;return false;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['1'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['5']++;var payload=window.atob(parts[1]);__cov_5jIp_6B37UzVbSEc7N$14w.s['6']++;payload=JSON.parse(payload);__cov_5jIp_6B37UzVbSEc7N$14w.s['7']++;return payload;};__cov_5jIp_6B37UzVbSEc7N$14w.s['8']++;module.exports.isExpired=function(token){__cov_5jIp_6B37UzVbSEc7N$14w.f['2']++;__cov_5jIp_6B37UzVbSEc7N$14w.s['9']++;var data,exp,result,now;__cov_5jIp_6B37UzVbSEc7N$14w.s['10']++;data=parseTokenPayload(token);__cov_5jIp_6B37UzVbSEc7N$14w.s['11']++;result=true;__cov_5jIp_6B37UzVbSEc7N$14w.s['12']++;if(!data){__cov_5jIp_6B37UzVbSEc7N$14w.b['2'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['13']++;return result;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['2'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['14']++;exp=data.exp;__cov_5jIp_6B37UzVbSEc7N$14w.s['15']++;now=new Date();__cov_5jIp_6B37UzVbSEc7N$14w.s['16']++;now=now.getTime()/1000;__cov_5jIp_6B37UzVbSEc7N$14w.s['17']++;if(!exp){__cov_5jIp_6B37UzVbSEc7N$14w.b['3'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['18']++;return result;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['3'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['19']++;if(now<exp){__cov_5jIp_6B37UzVbSEc7N$14w.b['4'][0]++;__cov_5jIp_6B37UzVbSEc7N$14w.s['20']++;result=false;}else{__cov_5jIp_6B37UzVbSEc7N$14w.b['4'][1]++;}__cov_5jIp_6B37UzVbSEc7N$14w.s['21']++;return result;};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/JWTUtils.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}